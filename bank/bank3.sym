AS65 Assembler for R6502 [1.42].                                     Page    1
-------------------------------- bank\bank3.s --------------------------------

-------------------------------- Symbol Table --------------------------------

              Symbol   Value        Decimal

                 ACR : $000b             11   *
               BANK3 : $0001              1
    bankjsr_nul_addr : $c000          49152   *
    bankjsr_nul_bank : $0000              0   *
            bank_num : $c000          49152
             bcd_str : $ca6d          51821
          bcd_to_str : $ca66          51814
             buf_adr : $0047             71
              buf_ef : $004a             74
              buf_sz : $0049             73
     CMD_ERR_NOERROR : $0000              0   *
    CMD_ERR_NOTFOUND : $0001              1   *
        CMD_ERR_PARM : $0002              2   *
         CMD_ERR_VAL : $0003              3   *
           CRSR_DOWN : $000a             10   *
           CRSR_LEFT : $0008              8   *
          CRSR_RIGHT : $0009              9   *
             CRSR_UP : $000b             11   *
        call_irq_brk : $c722          50978
     call_irq_master : $c71f          50975
   call_irq_usercia0 : $c728          50984
   call_irq_usercia1 : $c72b          50987
    call_irq_uservdp : $c725          50981
     call_nmi_master : $c6df          50911
       con_bin_digit : $c8fc          51452
        con_bin_done : $c912          51474
         con_bin_err : $c91c          51484
         con_bin_jmp : $c89a          51354
        con_bin_to_a : $c8f4          51444
    con_bin_to_a_int : $c8f8          51448
         con_dec_jmp : $c88e          51342
        con_dec_to_a : $c91e          51486
    con_dec_to_a_int : $c922          51490
       con_hex_digit : $c8bd          51389
        con_hex_done : $c8ea          51434
         con_hex_err : $c8e8          51432
         con_hex_jmp : $c894          51348
  con_hex_skip_x_f_1 : $c8ca          51402
        con_hex_to_a : $c8b5          51381
    con_hex_to_a_int : $c8b9          51385
           con_n_err : $c89d          51357
       con_n_not_dec : $c891          51345
       con_n_not_hex : $c897          51351
          con_n_to_a : $c87f          51327
   con_n_to_a_detect : $c89f          51359
                DDRA : $0003              3   *
                DDRB : $0002              2   *
         DFERR_ABORT : $0012             18   *
         DFERR_BREAK : $000d             13   *
           DFERR_DIM : $0003              3   *
         DFERR_FNAME : $000b             11   *
     DFERR_IMMEDIATE : $0007              7   *
       DFERR_NEXTFOR : $000a             10   *
        DFERR_NODATA : $000e             14   *
          DFERR_NOIF : $0009              9   *
        DFERR_NOLINE : $0010             16   *
         DFERR_NOORG : $0014             20   *
        DFERR_NOPROC : $0005              5   *
AS65 Assembler for R6502 [1.42].                                     Page    2
-------------------------------- bank\bank3.s --------------------------------

            DFERR_OK : $0000              0   *
      DFERR_PROCPARM : $0006              6   *
      DFERR_QUANTITY : $0013             19   *
        DFERR_RETURN : $0011             17   *
       DFERR_STRLONG : $000c             12   *
        DFERR_SYNTAX : $0001              1   *
      DFERR_TYPEMISM : $0002              2   *
    DFERR_UNCLOSEDIF : $0008              8   *
         DFERR_UNTIL : $0004              4   *
          DFERR_WEND : $000f             15   *
          DFRT_ABORT : $0089            137   *
            DFRT_ASM : $0097            151   *
           DFRT_DATA : $0096            150   *
            DFRT_DEF : $0086            134   *
           DFRT_ELSE : $0093            147   *
         DFRT_ELSEIF : $0095            149   *
         DFRT_ENDDEF : $0087            135   *
          DFRT_ENDIF : $0094            148   *
            DFRT_FOR : $008e            142   *
             DFRT_IF : $0092            146   *
           DFRT_NEXT : $008f            143   *
         DFRT_REPEAT : $008c            140   *
         DFRT_RETURN : $0088            136   *
           DFRT_WEND : $0091            145   *
          DFRT_WHILE : $0090            144   *
            DFST_INT : $0001              1   *
            DFST_STR : $0080            128   *
            DFTK_BYT : $0020             32   *
         DFTK_BYTBIN : $0007              7   *
         DFTK_BYTDEC : $0005              5   *
         DFTK_BYTHEX : $0006              6   *
            DFTK_CHR : $0000              0   *
            DFTK_EOL : $0000              0   *
         DFTK_ESCVAL : $0020             32   *
            DFTK_FLT : $0080            128   *
             DFTK_FN : $0002              2   *
            DFTK_INT : $0010             16   *
         DFTK_INTBIN : $000b             11   *
         DFTK_INTDEC : $0009              9   *
         DFTK_INTHEX : $000a             10   *
             DFTK_KW : $0001              1   *
         DFTK_LINLEN : $0000              0   *
         DFTK_LINNUM : $0001              1   *
             DFTK_OP : $0008              8   *
          DFTK_OPMSK : $0007              7   *
           DFTK_PROC : $0012             18   *
          DFTK_RESVC : $000c             12   *
          DFTK_RESVD : $000d             13   *
          DFTK_RESVE : $000e             14   *
          DFTK_RESVF : $000f             15   *
          DFTK_RESV1 : $0001              1   *
          DFTK_RESV2 : $0002              2   *
          DFTK_RESV3 : $0003              3   *
          DFTK_RESV4 : $0004              4   *
          DFTK_RESV8 : $0008              8   *
          DFTK_RTMSK : $00f8            248   *
          DFTK_STEND : $001f             31   *
            DFTK_STR : $0040             64   *
         DFTK_STRLIT : $0010             16   *
          DFTK_STROP : $0004              4   *
          DFTK_TOKEN : $0080            128   *
            DFTK_VAR : $0011             17   *
AS65 Assembler for R6502 [1.42].                                     Page    3
-------------------------------- bank\bank3.s --------------------------------

        DFTK_VARPARM : $0026             38   *
          DFVVT_ARRY : $0080            128   *
           DFVVT_BYT : $0002              2   *
          DFVVT_DIM1 : $0003              3   *
          DFVVT_DIM2 : $0004              4   *
           DFVVT_FLT : $0008              8   *
            DFVVT_HI : $0002              2   *
           DFVVT_INT : $0001              1   *
            DFVVT_LO : $0001              1   *
          DFVVT_PROC : $0040             64   *
           DFVVT_STR : $0004              4   *
            DFVVT_SZ : $0008              8   *
          DFVVT_TYPE : $0000              0   *
           DF_MEMTOP : $c000          49152   *
        DF_PROGSTART : $0000              0   *
          dflat_zp_s : $009d            157
     dflat_zp_save_e : $00e3            227
     dflat_zp_save_s : $009d            157
          df_asmadmd : $00de            222
           df_asmlen : $00e2            226
         df_asmopcde : $00df            223
         df_asmoprnd : $00e0            224
           df_asmopt : $00dd            221
            df_asmpc : $00db            219
            df_brkpc : $00a4            164
           df_brkval : $00a6            166
         df_checkkey : $009d            157
         df_checkmsk : $009e            158
          df_currdat : $00d6            214
          df_currlin : $00c8            200
         df_curstidx : $00c2            194
           df_datoff : $00d8            216
           df_eolidx : $00c0            192
           df_exeoff : $00ca            202
           df_ifnest : $00d5            213
            df_immed : $00a0            160
          df_linbuff : $0a00           2560
          df_lineidx : $00d4            212
          df_lineptr : $00d2            210
           df_linoff : $00be            190
           df_memtop : $0c67           3175
          df_nextlin : $00cb            203
         df_nxtstidx : $00c1            193
          df_parmtop : $00b9            185
               df_pc : $00a2            162
           df_prgend : $00a9            169
          df_prgstrt : $00a7            167
         df_procargs : $00ce            206
          df_procloc : $00cf            207
         df_procmode : $00cd            205
          df_procptr : $00d0            208
              df_raw : $0a00           2560
              df_rnd : $00d9            217
          df_rtspace : $0b00           2816
           df_rtstck : $0b00           2816
           df_rtstop : $00b8            184
         df_sevalptr : $00bc            188
               df_sp : $00a1            161
          df_starend : $00b6            182
         df_starstrt : $00b4            180
          df_strbuff : $00ba            186
           df_stridx : $00bb            187
AS65 Assembler for R6502 [1.42].                                     Page    4
-------------------------------- bank\bank3.s --------------------------------

           df_symini : $00c6            198
           df_symoff : $00c5            197
           df_symtab : $00c3            195
          df_tmpptra : $00e3            227
          df_tmpptrb : $00e5            229
          df_tmpptrc : $00e7            231
          df_tmpptrd : $00e9            233
          df_tmpptre : $00eb            235
              df_tok : $0a80           2688
          df_tokbuff : $0a80           2688
           df_tokoff : $00bf            191
           df_varcnt : $00b3            179
           df_vntend : $00ad            173
          df_vntstrt : $00ab            171
           df_vvtend : $00b1            177
          df_vvtstrt : $00af            175
               errno : $009f            159
         FATFileDesc : $0020             32
      FAT_AccessDate : $0012             18
            FAT_Attr : $000b             11
        FAT_Attr_Dir : $0010             16   *
      FAT_CreateDate : $0010             16
        FAT_Createms : $000d             13
      FAT_CreateTime : $000e             14
         FAT_EAIndex : $0014             20
             FAT_Ext : $0008              8
        FAT_FileSize : $001c             28
      FAT_FirstClust : $001a             26
         FAT_ModDate : $0018             24
         FAT_ModTime : $0016             22
            FAT_Name : $0000              0
            FAT_Resv : $000c             12
             FH_Attr : $000d             13
        FH_CurrClust : $0012             18
          FH_CurrSec : $0015             21
        FH_DirOffset : $0021             33
          FH_DirSect : $001d             29
         FH_FileMode : $002c             44
       FH_FirstClust : $0023             35
         FH_FSpecPtr : $002d             45
        FH_LastClust : $0025             37
             FH_Name : $0000              0
          FH_Pointer : $0019             25
      FH_SectCounter : $0014             20
             FH_Size : $000e             14
         FH_TimeDate : $0027             39
          FileHandle : $002f             47
    FS_BLK_FLG_FLUSH : $0002              2   *
     FS_BLK_FLG_LOAD : $0001              1   *
          FS_ERR_EOF : $0001              1   *
           fh_handle : $0056             86
         fs_bootsect : $0c31           3121
         fs_datasect : $0c3d           3133
         fs_dirclust : $0c45           3141
         fs_direntry : $0c11           3089
          fs_dirsect : $0c41           3137
          fs_fatsect : $0c35           3125
         fs_rootsect : $0c39           3129
          fs_scratch : $0c47           3143
          gr_cur_off : $0006              6
          gr_cur_ptr : $0009              9
            gr_cur_x : $0007              7
AS65 Assembler for R6502 [1.42].                                     Page    5
-------------------------------- bank\bank3.s --------------------------------

            gr_cur_y : $0008              8
         gr_geom_tmp : $000e             14
           gr_pixcol : $000d             13
          gr_pixmask : $000c             12
          gr_pixmode : $000b             11
           gr_screen : $0010             16
         gr_screen_h : $0005              5
      gr_screen_size : $0002              2
     gr_screen_start : $0000              0
         gr_screen_w : $0004              4
         gr_scrngeom : $0023             35
                 IER : $000e             14   *
                 IFR : $000d             13   *
             IFR_CA1 : $0002              2   *
             IFR_CA2 : $0001              1   *
                IO_0 : $0400           1024   *
                IO_1 : $0480           1152   *
                IO_2 : $0500           1280   *
                IO_3 : $0580           1408   *
                IO_4 : $0600           1536   *
                IO_5 : $0680           1664   *
                IO_6 : $0700           1792   *
                IO_7 : $0780           1920   *
       inc_kb_timers : $c7dd          51165
            infinity : $c683          50819
                init : $cade          51934
            init_irq : $c6f6          50934
            init_nmi : $c6d6          50902
            init_ram : $cb39          52025
       init_ram_fill : $cb4d          52045
       init_ram_skip : $cb4f          52047
          init_ram_1 : $cb43          52035
              init_2 : $cae1          51937
             int_brk : $0006              6
         int_do_read : $c794          51092
             int_irq : $0004              4
      int_kb_handler : $c789          51081
         int_keys_up : $c7a0          51104
             int_nmi : $0002              2
       int_skip_scan : $c79a          51098
          int_to_bcd : $ca01          51713
      int_to_bcd_bit : $ca1a          51738
 int_to_bcd_skip_neg : $ca0f          51727
        int_usercia0 : $000a             10
        int_usercia1 : $000c             12
         int_uservdp : $0008              8
         int_vdp_fin : $c7d6          51158
     int_vdp_handler : $c7ab          51115
    io_active_device : $c52d          50477
            io_block : $0c01           3073
            io_close : $c551          50513
          io_close_f : $0008              8
        io_copy_data : $c534          50484
          io_default : $0c00           3072
           io_delete : $c554          50516
            io_del_f : $000a             10
          io_devices : $c5a8          50600
          io_device0 : $c5a8          50600
          io_device1 : $c5b8          50616
          io_device2 : $c5c8          50632
          io_do_echo : $c573          50547
             io_ext1 : $000c             12
AS65 Assembler for R6502 [1.42].                                     Page    6
-------------------------------- bank\bank3.s --------------------------------

             io_ext2 : $000e             14
         io_get_byte : $0000              0
           io_get_ch : $c545          50501
    io_get_line_byte : $c560          50528
    io_get_line_done : $c58c          50572
             io_init : $c50e          50446
 io_init_set_default : $c523          50467
          io_null_op : $c5a6          50598
           io_open_r : $0004              4
        io_open_read : $c54b          50507
           io_open_w : $0006              6
       io_open_write : $c54e          50510
       io_print_done : $c5a4          50596
       io_print_line : $c593          50579
  io_print_line_byte : $c59a          50586
         io_put_byte : $0002              2
           io_put_ch : $c548          50504
        io_read_line : $c557          50519
      io_set_default : $c52a          50474
        io_skip_echo : $c576          50550
     io_skip_special : $c581          50561
           io_struct : $0010             16
                 irq : $c730          50992
             irq_brk : $c75e          51038
      irq_check_cia0 : $c752          51026
       irq_check_vdp : $c744          51012
             irq_fin : $c75a          51034
           KB_CAPSLK : $0001              1   *
             KB_COLA : $0008              8   *
             KB_COLB : $0010             16   *
             KB_COLC : $0020             32   *
             KB_COLD : $0040             64   *
         KB_DEBOUNCE : $0002              2   *
               KB_EN : $0080            128   *
             KB_LED0 : $0002              2   *
             KB_LED1 : $0004              4   *
             KB_LED2 : $0008              8   *
          KB_REP_DEL : $0014             20   *
          KB_REP_TIM : $0003              3   *
             KB_ROWA : $0001              1   *
             KB_ROWB : $0002              2   *
             KB_ROWC : $0004              4   *
          KB_SHIFTLK : $0002              2   *
                KB_W : $0001              1   *
             kb_code : $0035             53
              kb_deb : $0037             55
         kb_debounce : $003b             59
             kb_last : $0034             52
          kb_pressed : $003c             60
              kb_raw : $0033             51
              kb_rep : $0038             56
          kb_rep_del : $003a             58
          kb_rep_tim : $0039             57
             kb_stat : $0036             54
         kernel_init : $caea          51946
      kernel_skip_nv : $cb17          51991
         kernel_test : $caf9          51961
          long_delay : $c7ea          51178
        long_delay_1 : $c7f0          51184
       MBR_BootPart1 : $01c6            454   *
    MBR_BytesPerSect : $000b             11   *
            MBR_Code : $0000              0   *
AS65 Assembler for R6502 [1.42].                                     Page    7
-------------------------------- bank\bank3.s --------------------------------

          MBR_DrvNum : $0024             36   *
         MBR_ExeCode : $003e             62   *
         MBR_ExeMark : $01fe            510   *
          MBR_ExtSig : $0026             38   *
       MBR_FATCopies : $0010             16   *
         MBR_FATName : $0036             54   *
       MBR_MediaDesc : $0015             21   *
        MBR_NumHeads : $001a             26   *
      MBR_NumHidSect : $001c             28   *
         MBR_NumSect : $0020             32   *
         MBR_OEMName : $0003              3   *
        MBR_ResvSect : $000e             14   *
     MBR_RootEntries : $0011             17   *
    MBR_SectPerClust : $000d             13   *
      MBR_SectPerFAT : $0016             22   *
      MBR_SectPerTrk : $0018             24   *
           MBR_SerNo : $0027             39   *
         MBR_SmlSect : $0013             19   *
         MBR_VolName : $002b             43   *
              MM_DIS : $0020             32   *
               MM_X0 : $0010             16   *
               MM_X1 : $0020             32   *
               MM_Y0 : $0040             64   *
               MM_Y1 : $0080            128   *
                main : $c683          50819
        mem_clr_byte : $c82c          51244
           mem_start : $0c69           3177
         mod_sz_io_e : $c5d8          50648
         mod_sz_io_s : $c50e          50446
     mod_sz_kernel_e : $cb5a          52058
     mod_sz_kernel_s : $c50e          50446
     msg_hello_world : $c689          50825
             NUM_ANY : $0000              0   *
             NUM_BIN : $0003              3   *
             NUM_DEC : $0001              1   *
             NUM_HEX : $0002              2   *
            NV_RAMSZ : $003f             63   *
                 nmi : $c6e2          50914
             nmi_fin : $c6f4          50932
        null_handler : $c72f          50991
            null_irq : $c72e          50990
               num_a : $0085            133
               num_b : $0089            137
             num_buf : $0095            149
             num_tmp : $0091            145
               num_x : $008d            141
             out_bcd : $ca8d          51853
       out_bcd_digit : $ca94          51860
         out_bcd_fin : $cab5          51893
        out_bcd_next : $caa6          51878
       out_bcd_print : $caa2          51874
                 PCR : $000c             12   *
                 PRA : $0001              1   *
                PRAH : $000f             15   *
                 PRB : $0000              0   *
        print_a_to_d : $cabb          51899
print_a_to_d_skip_neg : $cad4          51924
           RAM_ZMASK : $00cf            207   *
           ROM_ZMASK : $003f             63   *
            RTC_ADDR : $0600           1536   *
              RTC_AF : $0020             32   *
             RTC_AIE : $0020             32   *
AS65 Assembler for R6502 [1.42].                                     Page    8
-------------------------------- bank\bank3.s --------------------------------

            RTC_DATA : $0601           1537   *
             RTC_DAY : $0007              7   *
              RTC_DM : $0004              4   *
             RTC_DOW : $0006              6   *
             RTC_DSE : $0001              1   *
             RTC_DV0 : $0010             16   *
             RTC_DV1 : $0020             32   *
             RTC_DV2 : $0040             64   *
              RTC_HR : $0004              4   *
             RTC_HRA : $0005              5   *
            RTC_IRQF : $0080            128   *
             RTC_MIN : $0002              2   *
            RTC_MINA : $0003              3   *
             RTC_MTH : $0008              8   *
              RTC_PF : $0040             64   *
             RTC_PIE : $0040             64   *
            RTC_REGA : $000a             10   *
            RTC_REGB : $000b             11   *
            RTC_REGC : $000c             12   *
            RTC_REGD : $000d             13   *
             RTC_RS0 : $0010             16   *
             RTC_RS1 : $0020             32   *
             RTC_RS2 : $0040             64   *
             RTC_RS3 : $0080            128   *
             RTC_SEC : $0000              0   *
            RTC_SECA : $0001              1   *
             RTC_SET : $0080            128   *
            RTC_SQWE : $0080            128   *
              RTC_UF : $0010             16   *
             RTC_UIE : $0010             16   *
             RTC_UIP : $0080            128   *
             RTC_VRT : $0080            128   *
              RTC_YR : $0009              9   *
            RTC_2412 : $0002              2   *
               SD_CD : $0004              4   *
              SD_CLK : $0001              1   *
               SD_CS : $0008              8   *
               SD_DI : $0010             16   *
               SD_DO : $0080            128   *
             SD_MISO : $0080            128   *
             SD_MOSI : $0010             16   *
              SD_REG : $0480           1152   *
             SER_CMD : $0582           1410   *
             SER_CTL : $0583           1411   *
            SER_DATA : $0580           1408   *
            SER_DCDB : $0020             32   *
            SER_DSRB : $0040             64   *
             SER_DTR : $0001              1   *
              SER_FE : $0002              2   *
             SER_IRD : $0002              2   *
             SER_IRQ : $0080            128   *
            SER_OVRN : $0004              4   *
              SER_PE : $0001              1   *
             SER_PMC : $00c0            192   *
            SER_PMC0 : $0040             64   *
            SER_PMC1 : $0080            128   *
             SER_PME : $0020             32   *
             SER_RCS : $0010             16   *
            SER_RDRF : $0008              8   *
             SER_REM : $0010             16   *
           SER_RESET : $0581           1409   *
             SER_SBN : $0080            128   *
AS65 Assembler for R6502 [1.42].                                     Page    9
-------------------------------- bank\bank3.s --------------------------------

             SER_SBR : $000f             15   *
            SER_SBR0 : $0001              1   *
            SER_SBR1 : $0002              2   *
            SER_SBR2 : $0004              4   *
            SER_SBR3 : $0008              8   *
          SER_STATUS : $0581           1409   *
            SER_TDRE : $0010             16   *
             SER_TIC : $000c             12   *
            SER_TIC0 : $0004              4   *
            SER_TIC1 : $0008              8   *
              SER_WL : $0060             96   *
             SER_WL0 : $0020             32   *
             SER_WL1 : $0040             64   *
          SER_19200B : $000f             15   *
           SER_9600B : $000e             14   *
           SND_ADBUS : $0481           1153   *
   SND_DESELECT_MASK : $00bd            189   *
            SND_MODE : $0480           1152   *
       SND_REG_CHAPH : $0001              1   *
       SND_REG_CHAPL : $0000              0   *
      SND_REG_CHAVOL : $0008              8   *
       SND_REG_CHBPH : $0003              3   *
       SND_REG_CHBPL : $0002              2   *
      SND_REG_CHBVOL : $000a             10   *
       SND_REG_CHCPH : $0005              5   *
       SND_REG_CHCPL : $0004              4   *
        SND_REG_CHNP : $0006              6   *
         SND_REG_CTL : $0007              7   *
      SND_REG_ENVCYC : $000d             13   *
       SND_REG_ENVPH : $000c             12   *
       SND_REG_ENVPL : $000b             11   *
         SND_REG_IOA : $000e             14   *
         SND_REG_IOB : $000f             15   *
         SND_SELREAD : $0040             64   *
      SND_SELSETADDR : $0042             66   *
        SND_SELWRITE : $0002              2   *
                  SR : $000a             10   *
               SWBRK : <macro>
             scratch : $0900           2304
             sd_addr : $0052             82
              sd_buf : $0200            512
             sd_sect : $004e             78
              sd_shi : $004d             77
              sd_slo : $004c             76
           sd_status : $004b             75
             ser_buf : $0800           2048
           ser_first : $000e             14
            ser_last : $000f             15
          skip_a_f_1 : $c840          51264
          skip_a_f_2 : $c84f          51279
         skip_kb_deb : $c7e3          51171
         skip_kb_rep : $c7e9          51177
          skip_x_f_1 : $c85c          51292
          skip_x_f_2 : $c871          51313
             snd_get : $c64c          50764
        snd_get_joy0 : $c67d          50813
             snd_set : $c625          50725
          str_a_to_d : $caba          51898
          str_a_to_x : $c834          51252
   str_d_digits_done : $c96d          51565
         str_d_error : $c98e          51598
      str_d_find_end : $c92b          51499
AS65 Assembler for R6502 [1.42].                                     Page   10
-------------------------------- bank\bank3.s --------------------------------

     str_d_found_end : $c938          51512
        str_d_powers : $c990          51600
 str_d_process_digit : $c944          51524
      str_d_skip_neg : $c984          51588
          str_x_to_a : $c851          51281
      str_x_to_a_err : $c87d          51325
     str_x_to_a_errl : $c87c          51324
                T1CH : $0005              5   *
                T1CL : $0004              4   *
                T1LH : $0007              7   *
                T1LL : $0006              6   *
                T2CH : $0009              9   *
                T2CL : $0008              8   *
               tmp_a : $0041             65
               tmp_b : $0043             67
           tmp_bank1 : $0000              0
           tmp_bank2 : $0001              1
               tmp_c : $003d             61
               tmp_d : $0045             69
              tmp_v1 : $003f             63
     twos_complement : $c9f4          51700
twos_complement_skip_X : $ca00          51712
             UTF_ACK : $0006              6   *
             UTF_BEL : $0007              7   *
             UTF_BRK : $001a             26   *
              UTF_CR : $000d             13   *
             UTF_DEL : $007f            127   *
             UTF_ETX : $0003              3   *
              UTF_FF : $000c             12   *
         UTF_SPECIAL : $0020             32   *
       update_timers : $c7d7          51159
          utilPrintA : $c80f          51215
       utilPrintCRLF : $c807          51207
        utilPrintSPC : $c7ff          51199
        util_clr_mem : $c824          51236
            VDP_ADDR : $0501           1281   *
           VDP_FLASH : $0010             16   *
       VDP_LONGDELAY : $0002              2   *
           VDP_MODE0 : $0500           1280   *
           VDP_MODE1 : $0501           1281   *
      VDP_SHORTDELAY : $0001              1   *
          VDP_STATUS : $0501           1281   *
            VDP_VRAM : $0500           1280   *
        vdp_addr_col : $0002              2
        vdp_addr_nme : $0000              0
        vdp_addr_pat : $0004              4
        vdp_addr_spa : $0006              6
        vdp_addr_spp : $0008              8
     vdp_addr_struct : $000c             12
            vdp_base : $0017             23
           vdp_blank : $0015             21
        vdp_bord_col : $000a             10
          vdp_curoff : $0012             18
         vdp_curstat : $0013             19
          vdp_curval : $0014             20
           vdp_delay : $0016             22
           vdp_gmode : $000b             11
         vdp_int_cnt : $0010             16
        vdp_mem_wait : $c5f2          50674
    vdp_mem_wait_end : $c5fa          50682
   vdp_mem_wait_loop : $c5f7          50679
            vdp_peek : $c61c          50716
AS65 Assembler for R6502 [1.42].                                     Page   11
-------------------------------- bank\bank3.s --------------------------------

            vdp_poke : $c610          50704
         vdp_rd_addr : $c5fc          50684
         vdp_rd_vram : $c606          50694
         vdp_wr_addr : $c5e5          50661
          vdp_wr_reg : $c5d8          50648
         vdp_wr_vram : $c60b          50699
         word_to_bcd : $ca37          51767
     word_to_bcd_bit : $ca49          51785
             ztmp_16 : $0085            133
          _adcZPByte : <macro>
          _adcZPWord : <macro>
          _addZPWord : <macro>
            _bankjsr : <macro>
            _bankram : <macro>
       _bankram_fast : <macro>
        _bank0_start : $c000          49152   *
          _bank3_end : $cb5a          52058
                _bcc : <macro>
                _bcs : <macro>
           _code_end : $cb5a          52058
         _code_start : $c001          49153
       _command_line : $c2b6          49846
          _cpu_stack : $0100            256
          _cpyZPWord : <macro>
          _decZPWord : <macro>
         _decZPWordA : <macro>
            _df_init : $c02e          49198
    _df_ost_peekType : <macro>
        _df_pg_dflat : $c046          49222
      _end_zero_page : $00ed            237
         _fs_chdir_w : $c05e          49246
         _fs_close_w : $c0a6          49318
        _fs_delete_w : $c08e          49294
_fs_dir_entry_next_w : $c136          49462
 _fs_dir_fhandle_str : $c4c6          50374
_fs_dir_find_entry_w : $c11e          49438
_fs_dir_root_start_w : $c14e          49486
      _fs_get_byte_w : $c0be          49342
         _fs_mkdir_w : $c076          49270
     _fs_open_read_w : $c0d6          49366
    _fs_open_write_w : $c0ee          49390
      _fs_put_byte_w : $c106          49414
           _get_byte : $c166          49510
             _gr_box : $c316          49942
          _gr_circle : $c32e          49966
             _gr_cls : $c2ce          49870
             _gr_get : $c38e          50062
         _gr_get_key : $c196          49558
           _gr_hchar : $c35e          50014
      _gr_init_hires : $c2e6          49894
     _gr_init_screen : $c1c6          49606
            _gr_line : $c2fe          49918
            _gr_plot : $c346          49990
           _gr_point : $c376          50038
        _gr_put_byte : $c1ae          49582
         _gr_set_cur : $c3a6          50086
          _incZPWord : <macro>
          _init_acia : $c1de          49630
          _init_cia0 : $c1f6          49654
          _init_cia1 : $c20e          49678
            _init_fs : $c226          49702
      _init_keyboard : $c26e          49774
AS65 Assembler for R6502 [1.42].                                     Page   12
-------------------------------- bank\bank3.s --------------------------------

        _init_sdcard : $c23e          49726
           _init_snd : $c256          49750
        _kb_read_dip : $c29e          49822
        _kb_read_raw : $c286          49798
          _OSVectors : $c001          49153
       _PushFalseJmp : <macro>
        _PushTrueJmp : <macro>
             _printA : <macro>
             _printC : <macro>
            _printCA : <macro>
          _printCRLF : <macro>
            _println : <macro>
        _println_low : <macro>
          _printmsgA : <macro>
            _pullAXY : <macro>
            _pushAXY : <macro>
           _put_byte : $c17e          49534
       _restore_bank : $c01c          49180
    _rtc_gettimedate : $c466          50278
           _rtc_init : $c44e          50254
         _rtc_nvread : $c496          50326
        _rtc_nvwrite : $c4ae          50350
    _rtc_setdatetime : $c47e          50302
          _sbcZPByte : <macro>
       _sd_sendcmd17 : $c4de          50398
       _sd_sendcmd24 : $c4f6          50422
            _sendcmd : <macro>
       _snd_get_joy0 : $c3d6          50134
       _snd_get_note : $c3be          50110
            _snd_set : $c3ee          50158
          _subZPWord : <macro>
           _vdp_init : $c436          50230
           _vdp_peek : $c406          50182
           _vdp_poke : $c41e          50206
          __65SC02__ : $0001              1

685 labels used

2993 lines read, no errors in pass 1.
No errors in pass 2.
Wrote binary from address $c000 through $ffff.
Total size 16384 bytes.
