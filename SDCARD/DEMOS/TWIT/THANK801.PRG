1000 def_flyInStamp(i)1010  local sp1030  for sp=0,3,11031   u=x[i+sp]:v=y[i+sp]1035   spritecol sp,151040   plot u,v,128+8*((v\12)+1)1041   if scrn(u-1,v-1)==32:plot u-1,v-1,0:endif1042   if scrn(u  ,v-1)==32:plot u  ,v-1,0:endif1043   if scrn(u+1,v-1)==32:plot u+1,v-1,0:endif1044   if scrn(u-1,v  )==32:plot u-1,v  ,0:endif1045   if scrn(u+1,v  )==32:plot u+1,v  ,0:endif1046   if scrn(u-1,v+1)==32:plot u-1,v+1,0:endif1047   if scrn(u  ,v+1)==32:plot u  ,v+1,0:endif1048   if scrn(u+1,v+1)==32:plot u+1,v+1,0:endif1050  next1499 enddef1500 def_flyIn(i)1510  sx[1]=0:sy[1]=0:sx[2]=31:sy[2]=0:sx[3]=0:sy[3]=23:sx[4]=31:sy[4]=231520  for l=1,4,11525   sprite l-1,sx[l]*8,sy[l]*8-1,128,61530   ex[l]=x[i+l-1]:ey[l]=y[i+l-1]1540   dx[l]=(ex[l]-sx[l])*101545   dy[l]=(ey[l]-sy[l])*101559   sx[l]=sx[l]*flyDiv:sy[l]=sy[l]*flyDiv1560  next1565  play 1,0,0,01566  freq=501570  for s=1,flySteps,11575    for sp=1,4,11580      sx[sp]=sx[sp]+dx[sp]1590      sy[sp]=sy[sp]+dy[sp]1600      spritepos sp-1,(sx[sp]/flyDiv)*8,(sy[sp]/flyDiv)*8-11610    next1611   sound 1,freq,151612   freq=freq+301620  next1621  _flyInStamp(i)1625  play 0,0,0,01626  wait d1630 enddef2000 def_rotateCol()2010  t=col[1]2020  for i=2,12,1:col[i-1]=col[i]:colour 15+i,col[i],0:next2030  col[12]=t:colour 27,t,02040 enddef3000 def_scrollMsg()3010  plot 1,1,mid(message$,msgIdx,30)3020  msgIdx=msgIdx+1:if msgIdx>=msgLen:msgIdx=1:endif3030  plot 1,23,mid(message2$,msg2Idx,30)3040  msg2Idx=msg2Idx+1:if msg2Idx>=msg2Len:msg2Idx=1:endif3050 enddef4000 def_retroStart()4010  mode 1:cursor 04011  dim p$[255]4020  _put("DATE: 01/01/1984")4021  _put("BOOTING TO BASIC.. PLEASE WAIT..")4022  wait 1004030  println "":println ""4040  _put("CONNECTING TO SUPERFAST")4041  _put("9600BPS MODEM..")4050  wait 1004060  println "":println ""4061  wait 1004070  _put("CONNECTING TO NEWFANGLED")4071  _put("TWITTER THINGY..")4080  wait 1004090  println "":println ""4100  _put("CHECKING TWITTER STATUS..")4101  _put("STANDBY..")4110  wait 2004120 enddef4500 def_put(p$)4501  m=len(p$)4520  for l=1,m,14530   print mid(p$,l,1)4534   if mid(p$,l,1)<>" "4535    sound 1,200,0:play 1,0,2,4004536   endif4540   wait 54550  next4560  println ""4570 enddef9000 def_start(d)9010  _init()9020  flySteps=209025  flyDiv=10*flySteps9030  for n=1,max-4,49040   _flyIn(n)9050   wait d9060  next9061  spritepos 0,0,0xd09062  f=10009063  sound 1,f,10:sound 2,f+1,10:sound 3,f+2,10:play 7,0,0,09065  msgIdx=1:msg2Idx=19066  reset msgTimer:reset colTimer9067  colSpd=3:msgSpd=69068  b=79069  fc=49070  repeat9080  if elapsed(colTimer)>colSpd:reset colTimer:_rotateCol():endif9085  if elapsed(msgTimer)>msgSpd:reset msgTimer:_scrollMsg():endif9090   wait d*29096  colour 0,(b/12)*col[1],(b/12)*col[1]:b=b+1:if b>12:b=0:endif9100  until 09499 enddef9500 ;9501 def_init()9510  _retroStart()9520  mode 1:cursor 1 9530  dim x[200],y[200],col[12]9535  dim sx[4],sy[4],ex[4],ey[4],dx[4],dy[4]9536  dim message$[255],line$[32],message2$[255]9540  max=19550  repeat9560   read x[max],y[max]9570   max=max+1:if max>=200:abort:endif9580  until x[max-1]==19590  col[1]=6:col[2]=8:col[3]=99595  col[4]=10:col[5]=11:col[6]=129600  col[7]=2:col[8]=3:col[9]=79610  col[10]=5:col[11]=4:col[12]=139620  for i=0,15,1:colour i,11,0:next9625  for i=1,12,1:colour 16+i,col[i],0:next9626  colour 32,14,09630  for i=0x0400,0x0407,19640   for p=1,12,19650    vpoke i+64*p,2559660   next9670  next9675  message$=""9680  repeat9685   read line$:if line$<>"":message$ = message$ $+ line$:endif9690  until line$==""9695  msgLen=len(message$)-309700  message2$=""9710  repeat9720   read line$:if line$<>"":message2$ = message2$ $+ line$:endif9730  until line$==""9740  msg2Len=len(message2$)-309900 enddef10000 ;10010 data 8,4,9,4,7,5,10,5,7,6,10,6,8,7,9,7,7,8,10,8,7,9,10,9,8,10,9,1010011 data 8,10,9,1010020 data 13,4,14,4,12,5,15,5,12,6,15,6,12,7,15,7,12,8,15,8,12,9,15,9,13,10,14,1010021 data 14,10,14,1010030 data 18,4,19,4,17,5,20,5,17,6,20,6,17,7,20,7,17,8,20,8,17,9,20,9,18,10,19,1010031 data 19,10,19,1010040 data 22,7,23,7,24,7,25,7,26,7,24,5,24,6,24,8,24,910041 data 24,9,24,9,24,910050 data 2,13,3,13,4,13,5,13,2,14,2,15,2,16,2,17,2,18,2,19,3,16,4,1610060 data 7,15,8,15,6,16,9,16,6,17,9,17,6,18,9,18,7,19,8,1910061 data 8,19,8,1910070 data 10,13,11,13,11,14,11,15,11,16,11,17,11,18,11,1910080 data 13,13,14,13,14,14,14,15,14,16,14,17,14,18,14,1910090 data 17,15,18,15,16,16,19,16,16,17,19,17,16,18,19,18,17,19,18,1910091 data 18,19,18,1910100 data 21,15,21,16,21,17,21,18,25,15,25,16,25,17,25,18,22,19,24,19,23,16,23,17,23,1810101 data 23,18,23,18,23,1810110 data 28,15,29,15,27,16,28,17,29,17,30,18,27,19,28,19,29,1910111 data 29,19,29,19,29,1910999 data 1,111000 data "                              "11010 data "** THANK YOU FOR 800 NERDY FOL"11020 data "LOWS! **         Lots of nerdy"11030 data " best wishes from @6502Nerd   "11040 data "Keep the #8bitcoders spirit al"11050 data "ive!    Have a great weekend!!"11060 data "                              "11070 data ""11090 data "                              "11100 data "This program is written in dfl"11110 data "at a custom BASIC for my homeb"11120 data "rew Breadboard Computer..(BBC!"11130 data ")..65c02 @ 5.36Mhz..128K RAM.."11140 data "64K ROM..TMS9918a video..AY-3-"11150 data "8910 sound..Acorn BBC case!!  "11160 data "                              "11170 data ""