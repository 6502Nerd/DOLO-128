AS65 Assembler for R6502 [1.42].                                     Page    1
----------------------------------- ppt3.s -----------------------------------

-------------------------------- Symbol Table --------------------------------

              Symbol   Value        Decimal

                .bss : $8da6          36262
             ACOnOff : $8db0          36272
             ACrAmSl : $8da8          36264
             ACrEnSl : $8daa          36266
             ACrNsSl : $8da9          36265
             ACrTnSl : $8dac          36268
             AddToEn : $8b96          35734
             AddToNs : $8e02          36354
             AdInPtA : $8a1d          35357
             AdInPtB : $8ae1          35553
             AdInPtC : $8b03          35587
             AEnv_En : $8dba          36282
              AFlags : $8dbb          36283
                Ampl : $8e0d          36365   *
               AmplA : $0008              8   *
               AmplB : $0009              9   *
               AmplC : $000a             10   *
             ANNtSkp : $8db7          36279
               ANote : $8db8          36280
             ANtSkCn : $8dc1          36289
             AOffOnD : $8db2          36274
             AOnOffD : $8db1          36273
             AOrnPtr : $8db3          36275
             APsInOr : $8da6          36262
             APsInSm : $8da7          36263
             ASamPtr : $8db5          36277
             ASlToNt : $8db9          36281
              ATnAcc : $8dae          36270
             ATnDelt : $8dbf          36287
             ATnSlDl : $8dbc          36284
             ATSlCnt : $8dab          36267
             ATSlStp : $8dbd          36285
             AVolume : $8dc2          36290
              AYREGS : $8e03          36355
             BCOnOff : $8dcd          36301
             BCrAmSl : $8dc5          36293
             BCrEnSl : $8dc7          36295
             BCrNsSl : $8dc6          36294
             BCrTnSl : $8dc9          36297
             BEnv_En : $8dd7          36311
              BFlags : $8dd8          36312
             BNNtSkp : $8dd4          36308
               BNote : $8dd5          36309
             BNtSkCn : $8dde          36318
             BOffOnD : $8dcf          36303
             BOnOffD : $8dce          36302
             BOrnPtr : $8dd0          36304
             BPsInOr : $8dc3          36291
             BPsInSm : $8dc4          36292
             BSamPtr : $8dd2          36306
             BSlToNt : $8dd6          36310
              BTnAcc : $8dcb          36299
             BTnDelt : $8ddc          36316
             BTnSlDl : $8dd9          36313
             BTSlCnt : $8dc8          36296
             BTSlStp : $8dda          36314
             BVolume : $8ddf          36319
                bres : $84c0          33984
AS65 Assembler for R6502 [1.42].                                     Page    2
----------------------------------- ppt3.s -----------------------------------

             CCOnOff : $8dea          36330
             CCrAmSl : $8de2          36322
             CCrEnSl : $8de4          36324
             CCrNsSl : $8de3          36323
             CCrTnSl : $8de6          36326
             CEnv_En : $8df4          36340
              CFlags : $8df5          36341
             CHECKLP : $8078          32888
              CHREGS : $871d          34589
             CH_AMIN : $8902          35074
              CH_AMP : $88e4          35044
             CH_APOS : $8920          35104
              CH_ENV : $8943          35139
             CH_EXIT : $89b4          35252
              CH_MIX : $89ad          35245
             CH_NOAC : $8820          34848
             CH_NOAM : $8911          35089
             CH_NOEN : $8951          35153
              CH_NOK : $8797          34711
              CH_NTP : $8791          34705
             CH_ONDL : $89fb          35323
             CH_ORPS : $8781          34689
             CH_SMPS : $87df          34783
             CH_STPP : $88c0          35008
             CH_SVAM : $890b          35083
              CH_VOL : $8926          35110
               ChanA : $8da6          36262
               ChanB : $8dc3          36291
               ChanC : $8de0          36320
             CNNtSkp : $8df1          36337
               CNote : $8df2          36338
             CNtSkCn : $8dfb          36347
             COffOnD : $8dec          36332
              COnOff : $000a             10   *
             COnOffD : $8deb          36331
              CORR_1 : $82c6          33478
              CORR_2 : $82e5          33509
             COrnPtr : $8ded          36333
             CPsInOr : $8de0          36320
             CPsInSm : $8de1          36321
              CrAmSl : $0002              2   *
              CrEnSl : $0004              4   *
              CrNsSl : $0003              3   *
             CrPsPtr : $8037          32823
              CrTnSl : $0006              6   *
             CSamPtr : $8def          36335
             CSlToNt : $8df3          36339
              CTnAcc : $8de8          36328
             CTnDelt : $8df9          36345
             CTnSlDl : $8df6          36342
             CTSlCnt : $8de5          36325
             CTSlStp : $8df7          36343
             CurEDel : $8e00          36352
             CurESld : $8dfe          36350
             CVolume : $8dfc          36348
             C_DELAY : $8683          34435
             C_ENGLS : $865d          34397
             C_GLISS : $85ca          34250
               C_NOP : $86cd          34509
             C_ORPOS : $8620          34336
             C_PORTM : $84ce          33998
             C_SMPOS : $8611          34321
AS65 Assembler for R6502 [1.42].                                     Page    3
----------------------------------- ppt3.s -----------------------------------

             C_VIBRT : $862f          34351
                DDRA : $0003              3   *
                DDRB : $0002              2   *
               Delay : $8b18          35608
             DelyCnt : $8dfd          36349
         EMPTYSAMORN : $8d40          36160   *
                 Env : $000b             11   *
             EnvBase : $8e11          36369   *
               EnvTp : $000d             13   *
             Env_Del : $8bdd          35805
              Env_En : $0014             20   *
             ESldAdd : $8be2          35810
            FILE_END : $8da6          36262   *
             FIN_RTS : $8c79          35961
           FIX16BITS : $8c7a          35962
               Flags : $0015             21   *
                GL36 : $85f4          34292
                INIT : $809f          32927
              INITV1 : $8342          33602
              INITV2 : $832c          33580
                IO_1 : $0480           1152   *
            intCount : $8039          32825
           LOOP_LDIR : $8137          33079
             LPosPtr : $8a4f          35407
                  L1 : $8234          33332
                  L2 : $8264          33380
                 L20 : $81a8          33192
                 L21 : $81aa          33194
                  L3 : $8268          33384
             MDADDR2 : $86ec          34540
               Mixer : $0007              7   *
             MODADDR : $83a9          33705
                MUTE : $808d          32909
                  M1 : $831d          33565
                  M2 : $8344          33604
                  M3 : $8375          33653
              NNtSkp : $0011             17   *
               NOSIG : $858f          34191
             NO_ENAC : $8980          35200
             NO_ENSL : $8994          35220
               Noise : $0006              6   *
                Note : $0012             18   *
             Ns_Base : $8e01          36353
     Ns_Base_AddToNs : $8e01          36353
                 NT_ : $8f03          36611
             NT_DATA : $8cf0          36080
              NtSkCn : $001b             27   *
              OffOnD : $000c             12   *
             OLDPRTM : $8565          34149
              OnOffD : $000b             11   *
              OrnPtr : $000d             13   *
             OrnPtrs : $86db          34523
              oldIrq : $803a          32826
             PatsPtr : $8a76          35446
              PD_ENV : $83f2          33778
             PD_EOff : $83cf          33743
             PD_ESAM : $83fe          33790
              PD_FIN : $84c5          33989
             PD_LOOP : $842e          33838
              PD_LP2 : $8432          33842
             PD_NOIS : $849b          33947
             PD_NOTE : $84ac          33964
AS65 Assembler for R6502 [1.42].                                     Page    4
----------------------------------- ppt3.s -----------------------------------

              PD_ORN : $83f8          33784
             PD_OrSm : $837d          33661
              PD_REL : $84a1          33953
              PD_RES : $84b8          33976
              PD_SAM : $8395          33685
             PD_SAM_ : $8396          33686
             PD_SorE : $83da          33754
              PD_VOL : $83bc          33724
                PLAY : $8a00          35328
               PLNLP : $8a60          35424
                PL1A : $8abf          35519
                PL1B : $8ad4          35540
                PL1C : $8af6          35574
                PL1D : $8b18          35608
                 PL2 : $8b1d          35613
                 PRA : $0001              1   *
                 PRB : $0000              0   *
              PrNote : $8512          34066
             PrSlide : $8558          34136
                PSP_ : $8abf          35519
              PsInOr : $0000              0   *
              PsInSm : $0001              1   *
             PTDECOD : $841a          33818
              pt3Irq : $8051          32849
            Revision : $0030             48   *
                ROUT : $8bf1          35825
              SamPtr : $000f             15   *
             SamPtrs : $8398          33688
              SETENV : $8691          34449
              SETORN : $86ce          34510
               SETUP : $00ed            237
             SET_STP : $85b3          34227
              SlToNt : $0013             19   *
           SND_ADBUS : $0481           1153   *
   SND_DESELECT_MASK : $00bd            189   *
            SND_MODE : $0480           1152   *
         SND_SELREAD : $0040             64   *
      SND_SELSETADDR : $0042             66   *
        SND_SELWRITE : $0002              2   *
             SPCCOMS : $86fd          34557
               START : $8000          32768
                STOP : $8003          32771
                  sa : $81f0          33264
                 saa : $85f4          34292
                 sac : $860e          34318
                 sad : $861b          34331
                 sae : $862a          34346
                 saf : $8639          34361
                 sag : $864b          34379
                 sah : $8682          34434
                 sak : $868d          34445
                 sam : $86b8          34488
                 saq : $873b          34619
                saq1 : $8869          34921
                saq2 : $89c7          35271
                 sar : $8a43          35395
                 sas : $89dc          35292
                 sat : $89e8          35304
                sat1 : $8a15          35349
                sat2 : $8a1d          35357
                sat3 : $8a2e          35374
                 sau : $8ba1          35745
AS65 Assembler for R6502 [1.42].                                     Page    5
----------------------------------- ppt3.s -----------------------------------

                sau1 : $8ba3          35747
                  sb : $81f4          33268
                 sb1 : $81f6          33270
                  sc : $8244          33348
                  sd : $8275          33397
                  sf : $8298          33432
                  sg : $82a4          33444
                 sg1 : $82b1          33457
                  sh : $82ff          33535
                  si : $8351          33617
                  sj : $8390          33680
                 sj1 : $8395          33685
             skipInt : $8061          32865
                  sl : $83eb          33771
                  sm : $840d          33805
                  sn : $8417          33815
             snd_set : $8cc9          36041
                  so : $843c          33852
                 so1 : $8446          33862
                so11 : $844d          33869
                 so2 : $8452          33874
                 so3 : $845b          33883
                 so4 : $8462          33890
                 so5 : $8467          33895
                 so6 : $8474          33908
                 so7 : $8481          33921
                  st : $84ed          34029
                  sw : $857b          34171
                  sy : $85de          34270
                  sz : $85f2          34290
                  s1 : $8085          32901
                  s2 : $80f9          33017
                 s7b : $81b5          33205
                 s8b : $81b6          33206
                 s9b : $81ec          33260
                 TA1 : $00f8            248   *
                 TA2 : $00f9            249   *
                 TB1 : $00fa            250   *
                 TB2 : $00fb            251   *
                 TB3 : $00fe            254   *
             TCNEW_0 : $8d2a          36138
             TCNEW_1 : $8d0c          36108   *
             TCNEW_2 : $8d35          36149
             TCNEW_3 : $8d20          36128
             TCOLD_0 : $8d00          36096
             TCOLD_1 : $8d0c          36108
             TCOLD_2 : $8d0e          36110
             TCOLD_3 : $8d21          36129
                 TC1 : $00fc            252   *
                 TC2 : $00fd            253   *
                 TC3 : $00ff            255   *
             TC_EXIT : $8302          33538
               TnAcc : $0008              8   *
              TnDelt : $0019             25   *
              TnSlDl : $0016             22   *
                TonA : $0000              0   *
                TonB : $0002              2   *
                TonC : $0004              4   *
              TSlCnt : $0005              5   *
              TSlStp : $0017             23   *
                 T1_ : $8d44          36164
                  T_ : $8d00          36096
AS65 Assembler for R6502 [1.42].                                     Page    6
----------------------------------- ppt3.s -----------------------------------

             T_NEW_0 : $8d76          36214   *
             T_NEW_1 : $8d44          36164   *
             T_NEW_2 : $8d8e          36238   *
             T_NEW_3 : $8d74          36212   *
             T_OLD_0 : $8d76          36214   *
             T_OLD_1 : $8d44          36164   *
             T_OLD_2 : $8d5c          36188   *
             T_OLD_3 : $8d74          36212   *
             userIrq : $000c             12   *
                VARS : $8da6          36262
            VARS_END : $8fc3          36803   *
             VAR0END : $8e13          36371   *
             Version : $8550          34128
              Volume : $001c             28   *
                 VT_ : $8e03          36355
                val1 : $00f8            248
                val2 : $00fa            250
                val3 : $00fc            252
                val4 : $00fe            254
                via1 : $0480           1152   *
               z80_A : $00ee            238
              z80_AP : $00f7            247
               z80_B : $00f0            240
               z80_C : $00ef            239
               z80_D : $00f2            242
               z80_E : $00f1            241
               z80_H : $00f4            244
              z80_IX : $00f5            245
               z80_L : $00f3            243
               _init : $809f          32927
              _start : $8006          32774
               _stop : $8062          32866
          __65SC02__ : $0001              1

339 labels used

2347 lines read, no errors in pass 1.
AS65 Assembler for R6502 [1.42].                                     Page    7
----------------------------------- ppt3.s -----------------------------------

                             ; ===============================================
                             ; Vortex Tracker II v1.0 PT3 player for 6502
                             ; ORIC 1/ATMOS (6502) version
                             ; Updated for HB-BBC-128 Homebrew Computer by 650
                             ; ScalexTrixx (A.C) - (c)2018
                             ;
                             ; Translated and adapted from ZX Spectrum Player 
                             ; by S.V.Bulba (with Ivan Roshin for some parts/a
                             ; https://bulba.untergrund.net/main_e.htm (c)2004
                             ;
0030 =                       Revision = "0" 
                             ; ===============================================
                             ; REV 0: 
                             ; ======
                             ; rev 0.34 (WK/TS)  - correction / 1.773 (288=x25
                             ;                   => file_end = $8E68
                             ;
                             ; rev 0.33 (WK)     - optimizations: PTDECOD
                             ;                   => file_end = $8E53
                             ;
                             ; rev 0.32 (WK)     - optimizations: PLAY
                             ;                   => file_end = $8F43
                             ;
                             ; rev 0.31 (WK)     - optimizations: CHREGS
                             ;                   => file_end = $8FC4
                             ;
                             ; rev 0.30 (WK)     - New base "full working" ver
                             ;                   - optimizations: zp variables
                             ;                   => file_end = $9027
                             ;
                             ; --------------------------------
                             ; WK: working / TS: test version |
                             ; ===============================================
                             ; TODO:
                             ; - lda ($AC),y -> lda ($AC,x)
                             ; - NOISE Register opt (/2 ?)
                             ; - déplacer / 1.773 avant CHREGS (cf CPC versio
                             ; - dans PD_LOOP: vérifier si des jmp relatifs s
                             ; - fix .bbs address
                             ; - check zero pages addresses
                             ; ===============================================
                             ;
                             ;	ORG $8000
                             ;
                             ; -------------------------------------
                                     bss
                             
00ed =                       	org $ed
                                 
00ed =                       SETUP   ds 1      ; set bit0 to 1, if you want to
                                                ; bit7 is set each time, when 
                             ; "registers" Z80
                             ; A = A
                             ; F = flags
                             
00ee =                       z80_A   ds 1      ; save A
00ef =                       z80_C   ds 1
00f0 =                       z80_B   ds 1
00f1 =                       z80_E   ds 1
00f2 =                       z80_D   ds 1
00f3 =                       z80_L   ds 1
00f4 =                       z80_H   ds 1
AS65 Assembler for R6502 [1.42].                                     Page    8
----------------------------------- ppt3.s -----------------------------------

00f5 =                       z80_IX  ds 2
00f7 =                       z80_AP  ds 1      ; save A'
                             ; temp variable used during play
00f8 =                       val1    ds 2
00fa =                       val2    ds 2
00fc =                       val3    ds 2
00fe =                       val4    ds 2
00f8 =                       TA1 = val1
00f9 =                       TA2 = val1+1
00fa =                       TB1 = val2
00fb =                       TB2 = val2+1
00fc =                       TC1 = val3
00fd =                       TC2 = val3+1
00fe =                       TB3 = val4
00ff =                       TC3 = val4+1
                             ; =====================================
                             ; module PT3 address
                             ;MDLADDR = $2000
                             ; =====================================
                                     code
                             ; For dflat, allow build of code for other locati
                              if RELOCADDR
                                     org RELOCADDR
                              else
8000 =                               org $8000
                              endif
                             
                             ; START = $8000 or RELOCADDR
                             ; START+00 : Initialise a tune and start
                             ; START+03 : Disable tune and stop
                             
8000 :                       START
8000 : 4c0680           [ 3]         jmp _start
8003 :                       STOP
8003 : 4c6280           [ 3]         jmp _stop
                             
                             
8006 :                       _start
                                     ; Now VIA int is on the NMI line!
000c =                       userIrq=12
0480 =                       via1=0x480
                             ; For dflat, assume that A,X provides address of 
                             ;        lda #lo(MDLADDR)                        
                             ;        sta z80_L
                             ;        lda #hi(MDLADDR)
                             ;        sta z80_H
8006 : 85f3             [ 3]         sta z80_L
8008 : 86f4             [ 3]         stx z80_H
800a : 209f80           [ 6] 	jsr INIT
                                     ; Homebre specific - set up 50Hz interrup
800d : 08               [ 3]         php
800e : 78               [ 2]         sei
                                     ; Remember previous user irq
800f : a50c             [ 3]         lda userIrq
8011 : 8d3a80           [ 4]         sta oldIrq
8014 : a50d             [ 3]         lda userIrq+1
8016 : 8d3b80           [ 4]         sta oldIrq+1
                                     ; Instate PT3 irq
8019 : a951             [ 2]         lda #lo(pt3Irq)
801b : 850c             [ 3]         sta userIrq
801d : a980             [ 2]         lda #hi(pt3Irq)
801f : 850d             [ 3]         sta userIrq+1
AS65 Assembler for R6502 [1.42].                                     Page    9
----------------------------------- ppt3.s -----------------------------------

                                     ; Set up timer for 50Hz (20ms) interrupts
                                     ; @5.36MHz it is 107,200 cycles
                                     ; which doesn't fit into 16 bits!
                                     ; so instead set up 100Hz (10ms) interrup
                                     ; which is 53,600 cycles, but only
                                     ; invoke the sound player every other
                                     ; interrupt!
                                     ; 53,600 = 0xd160
8021 : a960             [ 2]         lda #0x60
8023 : 8d8404           [ 4]         sta via1+4
8026 : a9d1             [ 2]         lda #0xd1
8028 : 8d8504           [ 4]         sta via1+5
                                     ; T1 of VIA1 set to continuous
802b : a940             [ 2]         lda #0b01000000
802d : 8d8b04           [ 4]         sta via1+11
                                     ; Enable T1 interrupt
8030 : a9c0             [ 2]         lda #0b11000000
8032 : 8d8e04           [ 4]         sta via1+14
                                     ; Restore P (enables interrupts)
8035 : 28               [ 4]         plp
8036 : 60               [ 6]         rts
                             
                             ;	jmp PLAY                                       
                             ;	jmp MUTE                                       
                                  
8037 : 0000                  CrPsPtr	fcw 0 ; current position in PT3 module
8039 : 00                    intCount fcb 0      ; byte flag to call player on
803a : 0000                  oldIrq fcw 0    ; Remember old IRQ vector
                             
                             ;Identifier
803c : 3d565449492050..      	    db "=VTII PT3 Player r.",Revision,"="
                             
8051 :                       pt3Irq
                                     ;
                                     ; Call pt3 player every interrupt
                                     ; Reset interrupt by reading T1C-L
8051 : ad8404           [ 4]         lda via1+4
                                     ; Call player every other interrupt
8054 : a980             [ 2]         lda #0x80
8056 : 4d3980           [ 4]         eor intCount
8059 : 8d3980           [ 4]         sta intCount
805c : 1003             [ 3]         bpl skipInt 
                                     ; Call the player each tick
805e : 20008a           [ 6]         jsr PLAY
8061 :                       skipInt
8061 : 60               [ 6]         rts
                             
8062 :                       _stop
8062 : 08               [ 3]         php
8063 : 78               [ 2]         sei
                                     ; Disable T1 interrupt
8064 : a940             [ 2]         lda #0b01000000
8066 : 8d8e04           [ 4]         sta via1+14
                                     ; Restore previous irq
8069 : ad3a80           [ 4]         lda oldIrq
806c : 850c             [ 3]         sta userIrq
806e : ad3b80           [ 4]         lda oldIrq+1
8071 : 850d             [ 3]         sta userIrq+1
                                     ; immediately stop sound
8073 : 208d80           [ 6]         jsr MUTE
                                     ; Restore P (enables interrupts)
8076 : 28               [ 4]         plp
AS65 Assembler for R6502 [1.42].                                     Page   10
----------------------------------- ppt3.s -----------------------------------

8077 : 60               [ 6]         rts
                             
8078 :                       CHECKLP
                             	                                                
8078 : a5ed             [ 3]         lda SETUP                                
807a : 0980             [ 2]         ora #%10000000                           
807c : 85ed             [ 3]         sta SETUP
807e : a901             [ 2] 	lda #%00000001                                  
8080 : 24ed             [ 3]         bit SETUP
8082 : d001             [ 3]         bne s1                                   
8084 : 60               [ 6] 	rts
8085 : 68               [ 4] s1	pla                                           
8086 : 68               [ 4]         pla       ; dépile 2 fois puisque rts sh
8087 : eefd8d           [ 6] 	inc DelyCnt                                     
808a : eec18d           [ 6]         inc ANtSkCn                              
808d :                       MUTE	                                            
808d : a900             [ 2]         lda #00                                  
808f : 85f4             [ 3]         sta z80_H                                
8091 : 85f3             [ 3] 	sta z80_L                                       
8093 : 8d0b8e           [ 4] 	sta AYREGS+AmplA                                
8096 : 8d0c8e           [ 4] 	sta AYREGS+AmplB                                
8099 : 8d0d8e           [ 4]         sta AYREGS+AmplC
809c : 4cf18b           [ 3] 	jmp ROUT                                        
                             
809f :                       INIT
809f :                       _init
809f : a5f3             [ 3] 	lda z80_L                                       
80a1 : 8daa83           [ 4] 	sta MODADDR+1
80a4 : 8ded86           [ 4]         sta MDADDR2+1
80a7 : 85f5             [ 3]         sta z80_IX
80a9 : 48               [ 3]         pha
80aa : a5f4             [ 3]         lda z80_H
80ac : 8db083           [ 4]         sta MODADDR+7
80af : 8df386           [ 4]         sta MDADDR2+7
80b2 : 85f6             [ 3]         sta z80_IX+1
80b4 : 48               [ 3]         pha
80b5 : a964             [ 2]         lda #lo(100)                             
80b7 : 85f1             [ 3]         sta z80_E
80b9 : a900             [ 2]         lda #00
80bb : 85f2             [ 3]         sta z80_D
80bd : a8               [ 2]         tay
80be : 18               [ 2] 	clc                                             
80bf : a5f1             [ 3]         lda z80_E
80c1 : 65f3             [ 3]         adc z80_L
80c3 : 85f3             [ 3]         sta z80_L
80c5 : a5f4             [ 3]         lda z80_H
80c7 : 6900             [ 2]         adc #00
80c9 : 85f4             [ 3]         sta z80_H
80cb : b1f3             [ 5]         lda (z80_L),y                            
80cd : 8d198b           [ 4] 	sta Delay+1                                     
80d0 : a5f1             [ 3]         lda z80_E
80d2 : 65f3             [ 3]         adc z80_L
80d4 : 85f3             [ 3]         sta z80_L
80d6 : 8d3780           [ 4]         sta CrPsPtr                              
80d9 : a5f4             [ 3]         lda z80_H
80db : 6900             [ 2]         adc #00
80dd : 85f4             [ 3]         sta z80_H    
80df : 8d3880           [ 4]         sta CrPsPtr+1
80e2 : a066             [ 2] 	ldy #102               
80e4 : b1f5             [ 5]         lda (z80_IX),y
80e6 : 85f1             [ 3]         sta z80_E
80e8 : 18               [ 2] 	clc                                             
AS65 Assembler for R6502 [1.42].                                     Page   11
----------------------------------- ppt3.s -----------------------------------

80e9 : 65f3             [ 3]         adc z80_L
80eb : 85f3             [ 3]         sta z80_L
80ed : a5f4             [ 3]         lda z80_H
80ef : 6900             [ 2]         adc #00
80f1 : 85f4             [ 3]         sta z80_H       
80f3 : e6f3             [ 5] 	inc z80_L                                       
80f5 : d002             [ 3]         bne s2
80f7 : e6f4             [ 5]         inc z80_H
80f9 : a5f3             [ 3] s2	lda z80_L                                     
80fb : 8d508a           [ 4]         sta LPosPtr+1
80fe : a5f4             [ 3]         lda z80_H
8100 : 8d548a           [ 4]         sta LPosPtr+5
8103 : 68               [ 4] 	pla                                             
8104 : 85f2             [ 3]         sta z80_D
8106 : 68               [ 4]         pla
8107 : 85f1             [ 3]         sta z80_E
8109 : a067             [ 2] 	ldy #103               
810b : b1f5             [ 5]         lda (z80_IX),y
810d : 18               [ 2] 	clc                                             
810e : 65f1             [ 3]         adc z80_E
8110 : 8d778a           [ 4]         sta PatsPtr+1   
8113 : a068             [ 2]         ldy #104                  
8115 : b1f5             [ 5]         lda (z80_IX),y
8117 : 65f2             [ 3]         adc z80_D
8119 : 8d7e8a           [ 4]         sta PatsPtr+8
811c : a9a9             [ 2]         lda #lo(169)                             
811e : 18               [ 2]         clc                                      
811f : 65f1             [ 3]         adc z80_E
8121 : 8ddc86           [ 4]         sta OrnPtrs+1   
8124 : a900             [ 2]         lda #00
8126 : 65f2             [ 3]         adc z80_D
8128 : 8de386           [ 4]         sta OrnPtrs+8
812b : a969             [ 2]         lda #lo(105)                             
812d : 18               [ 2]         clc                                      
812e : 65f1             [ 3]         adc z80_E
8130 : 8d9983           [ 4]         sta SamPtrs+1
8133 : a900             [ 2]         lda #00
                                     ;INIT zeroes from VARS to VAR0END-1 (area
8135 : a06c             [ 2]         ldy #(VAR0END-VARS-1)
8137 :                       LOOP_LDIR 
8137 : 99a68d           [ 5]         sta VARS,y
813a : 88               [ 2]         dey         ; (carry not modified)
813b : 10fa             [ 3]         bpl LOOP_LDIR
                                     ; A = #00  
813d : 65f2             [ 3]         adc z80_D
813f : 8da083           [ 4]         sta SamPtrs+8                            
8142 : a5ed             [ 3]         lda SETUP                                
8144 : 297f             [ 2]         and #%01111111
8146 : 85ed             [ 3]         sta SETUP
                                     
8148 : a944             [ 2] 	lda #lo(T1_)
814a : 85f1             [ 3]         sta z80_E
814c : a98d             [ 2]         lda #hi(T1_)
814e : 85f2             [ 3]         sta z80_D
8150 : a901             [ 2]         lda #$01                                 
8152 : 8dfd8d           [ 4] 	sta DelyCnt                                     
8155 : 8dc18d           [ 4]         sta ANtSkCn
8158 : 8dde8d           [ 4]         sta BNtSkCn
815b : 8dfb8d           [ 4]         sta CNtSkCn
815e : a9f0             [ 2]         lda #$F0
8160 : 8dc28d           [ 4] 	sta AVolume                                     
8163 : 8ddf8d           [ 4] 	sta BVolume                                     
AS65 Assembler for R6502 [1.42].                                     Page   12
----------------------------------- ppt3.s -----------------------------------

8166 : 8dfc8d           [ 4] 	sta CVolume                                     
8169 : a940             [ 2]         lda #lo(EMPTYSAMORN)                     
816b : 85f3             [ 3]         sta z80_L
816d : 8d1e8a           [ 4]         sta AdInPtA+1
8170 : 8db38d           [ 4]         sta AOrnPtr
8173 : 8dd08d           [ 4]         sta BOrnPtr
8176 : 8ded8d           [ 4]         sta COrnPtr
8179 : 8db58d           [ 4]         sta ASamPtr
817c : 8dd28d           [ 4]         sta BSamPtr
817f : 8def8d           [ 4]         sta CSamPtr
8182 : a98d             [ 2]         lda #hi(EMPTYSAMORN)
8184 : 85f4             [ 3]         sta z80_H
8186 : 8d228a           [ 4] 	sta AdInPtA+5                                   
8189 : 8db48d           [ 4] 	sta AOrnPtr+1                                   
818c : 8dd18d           [ 4] 	sta BOrnPtr+1                                   
818f : 8dee8d           [ 4] 	sta COrnPtr+1                                   
8192 : 8db68d           [ 4] 	sta ASamPtr+1                                   
8195 : 8dd38d           [ 4] 	sta BSamPtr+1                                   
8198 : 8df08d           [ 4] 	sta CSamPtr+1                                   
                             	    			                                         
                                     
819b : a00d             [ 2] 	ldy #13                    
819d : b1f5             [ 5]         lda (z80_IX),y
819f : 38               [ 2]         sec                                      
81a0 : e930             [ 2]         sbc #$30        ; ascii value - 30 = vers
81a2 : 9004             [ 3] 	bcc L20         ; inverse (pour SUB aussi)      
81a4 : c90a             [ 2] 	cmp #10                                         
81a6 : 9002             [ 3] 	bcc L21         ; < 10                          
81a8 :                       L20	    
81a8 : a906             [ 2]         lda #6          ; version par defaut si i
81aa :                       L21	    
81aa : 8d5185           [ 4]         sta Version+1                            
81ad : 48               [ 3] 	pha             ; save version nb
81ae : c904             [ 2]         cmp #4          ; version 4 ?            
81b0 : 9003             [ 3]         bcc s7b         ; < 4 (inverse carry)
81b2 : 18               [ 2]         clc
81b3 : 9001             [ 3]         bcc s8b         ; always
81b5 : 38               [ 2] s7b     sec
81b6 : a063             [ 2] s8b     ldy #99                 
81b8 : b1f5             [ 5]         lda (z80_IX),y  
81ba : 2a               [ 2]         rol a           ; carry !                
81bb : 2907             [ 2] 	and #7          ; clear all bit except 0-1-2    
81bd : aa               [ 2]         tax             ; save A
                             ;NoteTableCreator (c) Ivan Roshin
                             ;A - NoteTableNumber*2+VersionForNoteTable
                             ;(xx1b - 3.xx..3.4r, xx0b - 3.4x..3.6x..VTII1.0)
                             
81be : a9f0             [ 2]      	lda #lo(NT_DATA)											    
81c0 : 85f3             [ 3]      	sta z80_L
81c2 : a98c             [ 2]      	lda #hi(NT_DATA)
81c4 : 85f4             [ 3]      	sta z80_H
81c6 : a5f1             [ 3]      	lda z80_E													
81c8 : 85ef             [ 3]      	sta z80_C
81ca : a5f2             [ 3]      	lda z80_D
81cc : 85f0             [ 3]      	sta z80_B
81ce : a900             [ 2]      	lda #00
81d0 : a8               [ 2]         tay           ; ldy #00	        
81d1 : 85f2             [ 3]      	sta z80_D
81d3 : 8a               [ 2]      	txa           ; restore A									
81d4 : 0a               [ 2]      	asl a															
81d5 : 85f1             [ 3]      	sta z80_E													
81d7 : 18               [ 2]      	clc                                        
AS65 Assembler for R6502 [1.42].                                     Page   13
----------------------------------- ppt3.s -----------------------------------

81d8 : 65f3             [ 3]         adc z80_L
81da : 85f3             [ 3]         sta z80_L
81dc : a5f2             [ 3]         lda z80_D
81de : 65f4             [ 3]         adc z80_H
81e0 : 85f4             [ 3]         sta z80_H													
81e2 : b1f3             [ 5]      	lda (z80_L),y												
81e4 : 85f1             [ 3]      	sta z80_E
81e6 : e6f3             [ 5]      	inc z80_L                                  
81e8 : d002             [ 3]         bne s9b
81ea : e6f4             [ 5]         inc z80_H
81ec :                       s9b 
81ec : 46f1             [ 5] 	lsr z80_E											    				     				
81ee : b004             [ 3] 	bcs sb		; si c = 0 => $EA (NOP) / si c = 1 => $1
81f0 : a9ea             [ 2] sa  	lda #$EA 	; -> $EA (NOP)
81f2 : d002             [ 3]         bne sb1		; always	
81f4 : a918             [ 2] sb	lda #$18	; -> $18 (clc) 									
81f6 : 8d6882           [ 4] sb1	sta L3		            									
81f9 : a5f1             [ 3] 	lda z80_E													
81fb : a6f3             [ 3] 	ldx z80_L
81fd : 85f3             [ 3] 	sta z80_L
81ff : 86f1             [ 3] 	stx z80_E
8201 : a5f2             [ 3] 	lda z80_D
8203 : a6f4             [ 3] 	ldx z80_H
8205 : 85f4             [ 3] 	sta z80_H
8207 : 86f2             [ 3] 	stx z80_D
8209 : 18               [ 2] 	clc                                             
820a : a5ef             [ 3]     	lda z80_C
820c : 65f3             [ 3]     	adc z80_L
820e : 85f3             [ 3]     	sta z80_L
8210 : a5f0             [ 3]     	lda z80_B
8212 : 65f4             [ 3]     	adc z80_H
8214 : 85f4             [ 3]     	sta z80_H
                             
8216 : b1f1             [ 5] 	lda (z80_E),y												
8218 : 18               [ 2] 	clc                                             
8219 : 6900             [ 2]         adc #lo(T_)
821b : 85ef             [ 3] 	sta z80_C
821d : 48               [ 3]         pha                                      
821e : 698d             [ 2]         adc #hi(T_)                              
8220 : 38               [ 2] 	sec                                             
8221 : e5ef             [ 3]         sbc z80_C
8223 : 85f0             [ 3]         sta z80_B                                
8225 : 48               [ 3] 	pha
                             
8226 : a903             [ 2] 	lda #lo(NT_)											
8228 : 85f1             [ 3] 	sta z80_E
822a : 48               [ 3] 	pha															
822b : a98f             [ 2] 	lda #hi(NT_)
822d : 85f2             [ 3] 	sta z80_D
822f : 48               [ 3] 	pha
8230 : a90c             [ 2] 	lda #12														
8232 : 85f0             [ 3] 	sta z80_B
8234 :                       L1	    
8234 : a5ef             [ 3]         lda z80_C													
8236 : 48               [ 3] 	pha
8237 : a5f0             [ 3] 	lda z80_B
8239 : 48               [ 3] 	pha
823a : b1f3             [ 5] 	lda (z80_L),y												
823c : 85ef             [ 3] 	sta z80_C
823e : e6f3             [ 5] 	inc z80_L                                       
8240 : d002             [ 3]         bne sc
8242 : e6f4             [ 5]         inc z80_H
AS65 Assembler for R6502 [1.42].                                     Page   14
----------------------------------- ppt3.s -----------------------------------

8244 :                       sc     
8244 : a5f3             [ 3] 	lda z80_L												    
8246 : 48               [ 3] 	pha
8247 : a5f4             [ 3] 	lda z80_H
8249 : 48               [ 3] 	pha
824a : b1f3             [ 5] 	lda (z80_L),y												
824c : 85f0             [ 3] 	sta z80_B
                             
824e : a5f1             [ 3] 	lda z80_E       												
8250 : 85f3             [ 3] 	sta z80_L
8252 : 48               [ 3]         pha
8253 : a5f2             [ 3] 	lda z80_D
8255 : 85f4             [ 3] 	sta z80_H
8257 : 48               [ 3]         pha
8258 : a917             [ 2] 	lda #lo(23)		    										
825a : 85f1             [ 3] 	sta z80_E
825c : a900             [ 2] 	lda #hi(23)
825e : 85f2             [ 3] 	sta z80_D
8260 : a908             [ 2] 	lda #8														
8262 : 85f6             [ 3] 	sta z80_IX+1
                                     
8264 :                       L2	    
8264 : 46f0             [ 5]         lsr z80_B													
8266 : 66ef             [ 5] 	ror z80_C													
8268 :                       L3	    
8268 : ac                    	fcb $AC			; clc ($18) or NOP ($EA)
8269 : a5ef             [ 3] 	lda z80_C													
826b : 6900             [ 2] 	adc #00  		    								    	
826d : 91f3             [ 5] 	sta (z80_L),y												
826f : e6f3             [ 5] 	inc z80_L                                       
8271 : d002             [ 3]         bne sd
8273 : e6f4             [ 5]         inc z80_H
8275 :                       sd      
8275 : a5f0             [ 3]         lda z80_B													
8277 : 6900             [ 2] 	adc #00 													
8279 : 91f3             [ 5] 	sta (z80_L),y												
827b : 18               [ 2] 	clc                                             
827c : a5f1             [ 3]         lda z80_E
827e : 65f3             [ 3]         adc z80_L
8280 : 85f3             [ 3]         sta z80_L
8282 : a5f2             [ 3]         lda z80_D
8284 : 65f4             [ 3]         adc z80_H
8286 : 85f4             [ 3]         sta z80_H
8288 : c6f6             [ 5] 	dec z80_IX+1											    
828a : d0d8             [ 3] 	bne L2														
                             
828c : 68               [ 4] 	pla															
828d : 85f2             [ 3] 	sta z80_D
828f : 68               [ 4] 	pla         
8290 : 6902             [ 2]         adc #02     
8292 : 85f1             [ 3]         sta z80_E   
8294 : 9002             [ 3]         bcc sf      
8296 : e6f2             [ 5]         inc z80_D 
                             
8298 :                       sf     
8298 : 68               [ 4] 	pla												    	    
8299 : 85f4             [ 3] 	sta z80_H
829b : 68               [ 4] 	pla
829c : 85f3             [ 3] 	sta z80_L
829e : e6f3             [ 5] 	inc z80_L                                       
82a0 : d002             [ 3]         bne sg
82a2 : e6f4             [ 5]         inc z80_H
AS65 Assembler for R6502 [1.42].                                     Page   15
----------------------------------- ppt3.s -----------------------------------

82a4 :                       sg     
82a4 : 68               [ 4] 	pla												    	    
82a5 : 85f0             [ 3] 	sta z80_B
82a7 : 68               [ 4] 	pla
82a8 : 85ef             [ 3] 	sta z80_C
82aa : c6f0             [ 5] 	dec z80_B													
82ac : f003             [ 3] 	beq sg1
82ae : 4c3482           [ 3]         jmp L1
82b1 :                       sg1        
82b1 : 68               [ 4] 	pla															
82b2 : 85f4             [ 3] 	sta z80_H
82b4 : 68               [ 4] 	pla
82b5 : 85f3             [ 3] 	sta z80_L
82b7 : 68               [ 4] 	pla															
82b8 : 85f2             [ 3] 	sta z80_D
82ba : 68               [ 4] 	pla
82bb : 85f1             [ 3] 	sta z80_E
                                     								
82bd : c90c             [ 2] 	cmp #lo(TCOLD_1)		        								
82bf : d005             [ 3]         bne CORR_1													
82c1 : a9fd             [ 2] 	lda #$FD													
82c3 : 8d318f           [ 4] 	sta NT_+$2E									 				
                             
82c6 :                       CORR_1	
82c6 : 18               [ 2]         clc                                      
82c7 : b1f1             [ 5]         lda (z80_E),y																										
82c9 : f037             [ 4] 	beq TC_EXIT													
82cb : 6a               [ 2] 	ror a															
82cc : 08               [ 3] 	php			    ; save carry														
82cd : 0a               [ 2] 	asl a															
82ce : 85ef             [ 3] 	sta z80_C													
82d0 : 18               [ 2] 	clc                                             
82d1 : 65f3             [ 3]         adc z80_L
82d3 : 85f3             [ 3]         sta z80_L
82d5 : a5f0             [ 3]         lda z80_B
82d7 : 65f4             [ 3]         adc z80_H
82d9 : 85f4             [ 3]         sta z80_H                                
82db : 28               [ 4] 	plp             ; restore carry (du ror)	       
82dc : 9007             [ 3] 	bcc CORR_2                                      
82de : b1f3             [ 5] 	lda (z80_L),y												
82e0 : 38               [ 2] 	sec															
82e1 : e902             [ 2] 	sbc #$02
82e3 : 91f3             [ 5] 	sta (z80_L),y
                             	
82e5 :                       CORR_2	
82e5 : b1f3             [ 5]         lda (z80_L),y												
82e7 : 18               [ 2] 	clc			
82e8 : 6901             [ 2] 	adc #$01
82ea : 91f3             [ 5] 	sta (z80_L),y
82ec : 38               [ 2]         sec   		                                 
82ed : a5f3             [ 3] 	lda z80_L                                       
82ef : e5ef             [ 3] 	sbc z80_C
82f1 : 85f3             [ 3] 	sta z80_L
82f3 : a5f4             [ 3] 	lda z80_H
82f5 : e5f0             [ 3] 	sbc z80_B
82f7 : 85f4             [ 3] 	sta z80_H
82f9 : e6f1             [ 5] 	inc z80_E                                       
82fb : d002             [ 3]         bne sh
82fd : e6f2             [ 5]         inc z80_D
82ff :                       sh     
82ff : 4cc682           [ 3] 	jmp CORR_1												    
                             
AS65 Assembler for R6502 [1.42].                                     Page   16
----------------------------------- ppt3.s -----------------------------------

8302 :                       TC_EXIT
8302 : 68               [ 4] 	pla			; restore version number						
                             
                             ;VolTableCreator (c) Ivan Roshin
                             ;A - VersionForVolumeTable (0..4 - 3.xx..3.4x;
                             ;5.. - 3.5x..3.6x..VTII1.0)
                             
8303 : c905             [ 2] 	cmp #5		; version 										
8305 : a911             [ 2] 	lda #lo($11)                                    
8307 : 85f3             [ 3] 	sta z80_L
8309 : a900             [ 2]         lda #hi($11)													
830b : 85f4             [ 3] 	sta z80_H													
830d : 85f2             [ 3] 	sta z80_D                                       
830f : 85f1             [ 3] 	sta z80_E													
8311 : a92a             [ 2] 	lda #$2A	; ($2A = rol A)								    
8313 : b008             [ 3] 	bcs M1		; CP -> carry inverse (CP 5)					
8315 : c6f3             [ 5] 	dec z80_L													
8317 : a5f3             [ 3] 	lda z80_L													
8319 : 85f1             [ 3] 	sta z80_E
831b : a9ea             [ 2] 	lda #$EA	; ($EA = NOP)			    					
831d :                       M1          
831d : 8d4483           [ 4]         sta M2														
8320 : a913             [ 2] 	lda #lo(VT_+16)												
8322 : 85f5             [ 3] 	sta z80_IX
8324 : a98e             [ 2] 	lda #hi(VT_+16)
8326 : 85f6             [ 3] 	sta z80_IX+1
8328 : a910             [ 2] 	lda #$10													
832a : 85ef             [ 3] 	sta z80_C
                             
832c :                       INITV2  
832c : 18               [ 2]         clc
832d : a5f3             [ 3]         lda z80_L													
832f : 48               [ 3] 	pha
8330 : 65f1             [ 3]         adc z80_E
8332 : 85f1             [ 3]         sta z80_E
8334 : a5f4             [ 3] 	lda z80_H
8336 : 48               [ 3] 	pha
8337 : 65f2             [ 3]         adc z80_D
8339 : 85f2             [ 3]         sta z80_D
                             	    
833b : a900             [ 2]         lda #00														
833d : 85f3             [ 3] 	sta z80_L
833f : 85f4             [ 3] 	sta z80_H
8341 : 18               [ 2]         clc
8342 :                       INITV1  
8342 : a5f3             [ 3]         lda z80_L													
8344 :                       M2          
8344 : ac                            fcb $AC	    ; $EA (nop) ou $2A (rol)
8345 : a5f4             [ 3] 	lda z80_H													
8347 : 6900             [ 2] 	adc #00			; + carry                             
8349 : 91f5             [ 5] 	sta (z80_IX),y												
834b : e6f5             [ 5] 	inc z80_IX                                      
834d : d002             [ 3]         bne si
834f : e6f6             [ 5]         inc z80_IX+1
8351 :                       si     
8351 : 18               [ 2] 	clc                                             
8352 : a5f1             [ 3]         lda z80_E
8354 : 65f3             [ 3]         adc z80_L
8356 : 85f3             [ 3]         sta z80_L
8358 : a5f2             [ 3]         lda z80_D
835a : 65f4             [ 3]         adc z80_H
835c : 85f4             [ 3]         sta z80_H
AS65 Assembler for R6502 [1.42].                                     Page   17
----------------------------------- ppt3.s -----------------------------------

835e : e6ef             [ 5] 	inc z80_C												    
8360 : a5ef             [ 3] 	lda z80_C													
8362 : 290f             [ 2] 	and #15														
8364 : 18               [ 2]         clc         ; carry cleared by and
8365 : d0db             [ 3] 	bne INITV1													
                             
8367 : 68               [ 4] 	pla															
8368 : 85f4             [ 3] 	sta z80_H
836a : 68               [ 4] 	pla
836b : 85f3             [ 3] 	sta z80_L
836d : a5f1             [ 3] 	lda z80_E													
836f : c977             [ 2] 	cmp #$77													
8371 : d002             [ 3] 	bne M3														
8373 : e6f1             [ 5] 	inc z80_E													
8375 :                       M3      
8375 : 18               [ 2]         clc                                      
8376 : a5ef             [ 3]         lda z80_C																								
8378 : d0b2             [ 3] 	bne	INITV2													
                             
837a : 4cf18b           [ 3] 	jmp ROUT													
                             ; ===============================================
                             ; Pattern Decoder
837d :                       PD_OrSm	
837d : a014             [ 2]         ldy #Env_En     										    
837f : a900             [ 2] 	lda #00
8381 : 91f5             [ 5] 	sta (z80_IX),y
8383 : 20ce86           [ 6] 	jsr SETORN													
8386 : a000             [ 2] 	ldy #00					; lda ($AC,x)									
8388 : b1ef             [ 5] 	lda (z80_C),y
838a : e6ef             [ 5] 	inc z80_C                                       
838c : d002             [ 3]         bne sj
838e : e6f0             [ 5]         inc z80_B
8390 :                       sj     
8390 : 4a               [ 2] 	lsr a 													    
8391 : 9002             [ 3]         bcc sj1
8393 : 0980             [ 2]         ora #$80
8395 :                       sj1     
8395 :                       PD_SAM	
8395 : 0a               [ 2]         asl a 											    		
8396 :                       PD_SAM_	
8396 : 85f1             [ 3]         sta z80_E													
8398 :                       SamPtrs		
8398 : a9ac             [ 2] 	lda #$AC				
839a : 18               [ 2]         clc
839b : 65f1             [ 3]         adc z80_E
839d : 85f3             [ 3] 	sta z80_L
839f : a9ac             [ 2] 	lda #$AC
83a1 : 6900             [ 2]         adc #00
83a3 : 85f4             [ 3] 	sta z80_H
                             
83a5 : a000             [ 2]         ldy #00
83a7 : b1f3             [ 5] 	lda (z80_L),y
83a9 :                       MODADDR		
83a9 : 69ac             [ 2] 	adc #$AC												
83ab : aa               [ 2] 	tax             ; save
83ac : c8               [ 2] 	iny                                             
83ad : b1f3             [ 5] 	lda (z80_L),y
83af : 69ac             [ 2]         adc #$AC								    			
                             
83b1 : a010             [ 2] 	ldy #SamPtr+1         										
83b3 : 91f5             [ 5] 	sta (z80_IX),y
83b5 : 88               [ 2] 	dey															
AS65 Assembler for R6502 [1.42].                                     Page   18
----------------------------------- ppt3.s -----------------------------------

83b6 : 8a               [ 2] 	txa         
83b7 : 91f5             [ 5] 	sta (z80_IX),y
83b9 : 4c2e84           [ 3] 	jmp PD_LOOP													
                             
83bc :                       PD_VOL	
83bc : 0a               [ 2]         asl a															
83bd : 6900             [ 2]         adc #00
83bf : 0a               [ 2] 	asl a															
83c0 : 6900             [ 2]         adc #00
83c2 : 0a               [ 2] 	asl a															
83c3 : 6900             [ 2]         adc #00
83c5 : 0a               [ 2] 	asl a															
83c6 : 6900             [ 2]         adc #00
83c8 : a01c             [ 2] 	ldy #Volume         										
83ca : 91f5             [ 5] 	sta (z80_IX),y
83cc : 4c3284           [ 3]         jmp PD_LP2													
                             	
83cf :                       PD_EOff	
83cf : a014             [ 2]         ldy #Env_En		    	        							
83d1 : 91f5             [ 5] 	sta (z80_IX),y
83d3 : a000             [ 2] 	ldy #PsInOr   			    					    		
83d5 : 91f5             [ 5] 	sta (z80_IX),y
83d7 : 4c3284           [ 3] 	jmp PD_LP2													
                             
83da :                       PD_SorE	
83da : 38               [ 2]         sec															
83db : e901             [ 2] 	sbc #01
83dd : 85ee             [ 3]         sta z80_A
83df : d011             [ 3] 	bne PD_ENV													
83e1 : a000             [ 2] 	ldy #00			        ; lda ($AC,x)												
83e3 : b1ef             [ 5] 	lda (z80_C),y
83e5 : e6ef             [ 5] 	inc z80_C                                       
83e7 : d002             [ 3]         bne sl
83e9 : e6f0             [ 5]         inc z80_B
83eb :                       sl     
83eb : a011             [ 2] 	ldy #NNtSkp    		        								
83ed : 91f5             [ 5] 	sta (z80_IX),y
83ef : 4c3284           [ 3]         jmp PD_LP2													
                             
83f2 :                       PD_ENV	
83f2 : 209186           [ 6]         jsr SETENV													
83f5 : 4c3284           [ 3] 	jmp PD_LP2													
                             
83f8 :                       PD_ORN	
83f8 : 20ce86           [ 6]         jsr SETORN													
83fb : 4c2e84           [ 3] 	jmp PD_LOOP													
                             
83fe :                       PD_ESAM	
83fe : a014             [ 2]         ldy #Env_En	             									
8400 : 91f5             [ 5] 	sta (z80_IX),y
8402 : a000             [ 2] 	ldy #PsInOr	    		        							
8404 : 91f5             [ 5] 	sta (z80_IX),y
8406 : a5ee             [ 3] 	lda z80_A           
8408 : f003             [ 3]         beq sm														
840a : 209186           [ 6] 	jsr SETENV
840d : a000             [ 2] sm	ldy #00			    ; lda ($AC,x)												
840f : b1ef             [ 5] 	lda (z80_C),y
8411 : e6ef             [ 5] 	inc z80_C                                       
8413 : d002             [ 3]         bne sn
8415 : e6f0             [ 5]         inc z80_B
8417 :                       sn     
8417 : 4c9683           [ 3]         jmp PD_SAM_								     			    
AS65 Assembler for R6502 [1.42].                                     Page   19
----------------------------------- ppt3.s -----------------------------------

                             
841a :                       PTDECOD 
841a : a012             [ 2]         ldy #Note   							    				
841c : b1f5             [ 5] 	lda (z80_IX),y
841e : 8d1385           [ 4] 	sta PrNote+1												
8421 : a006             [ 2] 	ldy #CrTnSl    		    						    		
8423 : b1f5             [ 5] 	lda (z80_IX),y                                  
8425 : 8d5985           [ 4] 	sta PrSlide+1												
8428 : c8               [ 2]         iny 
8429 : b1f5             [ 5] 	lda (z80_IX),y											
842b : 8d6085           [ 4] 	sta PrSlide+8
                             
842e :                       PD_LOOP	
842e : a910             [ 2]         lda #$10													
8430 : 85f1             [ 3] 	sta z80_E
                             	
8432 :                       PD_LP2	
8432 : a000             [ 2]         ldy #00			    ; lda ($AC,x)												
8434 : b1ef             [ 5] 	lda (z80_C),y
8436 : e6ef             [ 5] 	inc z80_C                                       
8438 : d002             [ 3]         bne so
843a : e6f0             [ 5]         inc z80_B
843c :                       so
843c : 18               [ 2] 	clc															
843d : 6910             [ 2] 	adc #$10
843f : 9005             [ 3] 	bcc so1
8441 : 85ee             [ 3]         sta z80_A            
8443 : 4c7d83           [ 3]         jmp PD_OrSm
8446 : 6920             [ 2] so1     adc #$20                                 
8448 : d003             [ 3] 	bne so11													
844a : 4cc584           [ 3]         jmp PD_FIN
844d : 9003             [ 3] so11	bcc so2													    
844f : 4c9583           [ 3]         jmp PD_SAM
8452 : 6910             [ 2] so2	adc #$10                                     
8454 : f04b             [ 3] 	beq PD_REL													
8456 : 9003             [ 3] 	bcc so3 													
8458 : 4cbc83           [ 3]         jmp PD_VOL
845b : 6910             [ 2] so3	adc #$10                                     
845d : d003             [ 3] 	bne so4										    			
845f : 4ccf83           [ 3]         jmp PD_EOff
8462 : 9003             [ 3] so4	bcc	so5												    	
8464 : 4cda83           [ 3] 	jmp PD_SorE
8467 : 6960             [ 2] so5     adc #96                                  
8469 : b041             [ 3] 	bcs PD_NOTE													
846b : 6910             [ 2] 	adc #$10                                        
846d : 9005             [ 3] 	bcc so6
846f : 85ee             [ 3]         sta z80_A												    	
8471 : 4cf883           [ 3]         jmp PD_ORN													
8474 : 6920             [ 2] so6	adc #$20                                     
8476 : b023             [ 3] 	bcs PD_NOIS													 														
8478 : 6910             [ 2] 	adc #$10                                        
847a : 9005             [ 3]         bcc so7
847c : 85ee             [ 3]         sta z80_A												    	
847e : 4cfe83           [ 3]         jmp PD_ESAM
8481 : 0a               [ 2] so7	asl a															
8482 : 85f1             [ 3] 	sta z80_E
8484 : 18               [ 2]         clc                                      
8485 : 691d             [ 2]         adc #lo(SPCCOMS+$FF20)							        
8487 : 85f3             [ 3]         sta z80_L
8489 : a986             [ 2] 	lda #hi(SPCCOMS+$FF20)
848b : 6900             [ 2]         adc #00
848d : 85f4             [ 3] 	sta z80_H
AS65 Assembler for R6502 [1.42].                                     Page   20
----------------------------------- ppt3.s -----------------------------------

                                     ; on doit inverser le PUSH car l'adresse 
848f : a001             [ 2]         ldy #01	
8491 : b1f3             [ 5] 	lda (z80_L),y												
8493 : 48               [ 3] 	pha             ; push D
8494 : 88               [ 2] 	dey                                             
8495 : b1f3             [ 5] 	lda (z80_L),y										        
8497 : 48               [ 3] 	pha             ; push E
8498 : 4c2e84           [ 3] 	jmp PD_LOOP													
                             
849b :                       PD_NOIS									
849b : 8d018e           [ 4]         sta Ns_Base                              
849e : 4c3284           [ 3] 	jmp PD_LP2													
                             
84a1 :                       PD_REL	
84a1 : a015             [ 2]         ldy #Flags   								    			
84a3 : b1f5             [ 5] 	lda (z80_IX),y
84a5 : 29fe             [ 2] 	and #%11111110
84a7 : 91f5             [ 5] 	sta (z80_IX),y
84a9 : 4cb884           [ 3] 	jmp PD_RES													
                             	
84ac :                       PD_NOTE	
84ac : a012             [ 2]         ldy #Note    	 				    						
84ae : 91f5             [ 5] 	sta (z80_IX),y	
84b0 : a015             [ 2] 	ldy #Flags      											
84b2 : b1f5             [ 5] 	lda (z80_IX),y
84b4 : 0901             [ 2] 	ora #%00000001
84b6 : 91f5             [ 5] 	sta (z80_IX),y
                             	    													
84b8 :                       PD_RES												
84b8 : a900             [ 2]         lda #00	
84ba : 85f3             [ 3]         sta z80_L
84bc : 85f4             [ 3] 	sta z80_H
84be : a00b             [ 2] 	ldy #11
84c0 :                       bres
84c0 : 91f5             [ 5] 	sta (z80_IX),y          
84c2 : 88               [ 2] 	dey
84c3 : 10fb             [ 3]         bpl bres
84c5 :                       PD_FIN	
84c5 : a011             [ 2] 	ldy #NNtSkp     						    				
84c7 : b1f5             [ 5] 	lda (z80_IX),y
84c9 : a01b             [ 2] 	ldy #NtSkCn     		    								
84cb : 91f5             [ 5] 	sta (z80_IX),y
84cd : 60               [ 6] 	rts 														
                             
84ce :                       C_PORTM
84ce : a015             [ 2] 	ldy #Flags  												
84d0 : b1f5             [ 5] 	lda (z80_IX),y
84d2 : 29fb             [ 2] 	and #%11111011
84d4 : 91f5             [ 5] 	sta (z80_IX),y
84d6 : a000             [ 2] 	ldy #00			    ; lda ($AC,x)												
84d8 : b1ef             [ 5] 	lda (z80_C),y
84da : a016             [ 2]         ldy #TnSlDl     				    			    		
84dc : 91f5             [ 5] 	sta (z80_IX),y
84de : a005             [ 2]         ldy #TSlCnt	        			    						
84e0 : 91f5             [ 5] 	sta (z80_IX),y
                             
84e2 : 18               [ 2]         clc
84e3 : a5ef             [ 3]         lda z80_C
84e5 : 6903             [ 2]         adc #03
84e7 : 85ef             [ 3]         sta z80_C
84e9 : 9002             [ 3]         bcc st
84eb : e6f0             [ 5]         inc z80_B
AS65 Assembler for R6502 [1.42].                                     Page   21
----------------------------------- ppt3.s -----------------------------------

84ed :                       st     
84ed : a903             [ 2] 	lda #lo(NT_)			; OPT										
84ef : 85f1             [ 3] 	sta z80_E
84f1 : a98f             [ 2] 	lda #hi(NT_)           ; OPT
84f3 : 85f2             [ 3] 	sta z80_D
84f5 : a012             [ 2] 	ldy #Note	        										
84f7 : b1f5             [ 5] 	lda (z80_IX),y
84f9 : a013             [ 2] 	ldy #SlToNt         										
84fb : 91f5             [ 5] 	sta (z80_IX),y
84fd : 0a               [ 2] 	asl a																																											
84fe : 18               [ 2] 	clc                                             
84ff : 65f1             [ 3]         adc z80_E           ; OPT
8501 : 85f3             [ 3]         sta z80_L
8503 : a5f2             [ 3]         lda z80_D           ; OPT
8505 : 6900             [ 2]         adc #00           
8507 : 85f4             [ 3]         sta z80_H
8509 : a000             [ 2]         ldy #00	
850b : b1f3             [ 5] 	lda (z80_L),y 												
850d : 48               [ 3] 	pha	
850e : c8               [ 2] 	iny                                             
850f : b1f3             [ 5] 	lda (z80_L),y 												
8511 : 48               [ 3] 	pha
8512 :                       PrNote	
8512 : a93e             [ 2]         lda #$3E													
8514 : a012             [ 2] 	ldy #Note   					    						
8516 : 91f5             [ 5] 	sta (z80_IX),y
8518 : 0a               [ 2] 	asl a																																			
8519 : 18               [ 2] 	clc                                             
851a : 65f1             [ 3]         adc z80_E           ; OPT
851c : 85f3             [ 3]         sta z80_L
851e : a5f2             [ 3]         lda z80_D           ; OPT
8520 : 6900             [ 2]         adc #00
8522 : 85f4             [ 3]         sta z80_H
8524 : a000             [ 2] 	ldy #00
8526 : b1f3             [ 5]         lda (z80_L),y												
8528 : 85f1             [ 3] 	sta z80_E
852a : c8               [ 2] 	iny                                             
852b : b1f3             [ 5] 	lda (z80_L),y											    
852d : 85f2             [ 3] 	sta z80_D
852f : a019             [ 2] 	ldy #TnDelt 
8531 : 68               [ 4]         pla															
8532 : 85f4             [ 3] 	sta z80_H
8534 : 68               [ 4] 	pla       
8535 : 38               [ 2] 	sec                                             
8536 : e5f1             [ 3]         sbc z80_E
8538 : 85f3             [ 3]         sta z80_L
853a : 91f5             [ 5]         sta (z80_IX),y
853c : a5f4             [ 3]         lda z80_H
853e : e5f2             [ 3]         sbc z80_D
8540 : 85f4             [ 3]         sta z80_H 
8542 : c8               [ 2]         iny                                      
8543 : 91f5             [ 5]         sta (z80_IX),y
8545 : a006             [ 2] 	ldy #CrTnSl                                     
8547 : b1f5             [ 5]         lda (z80_IX),y
8549 : 85f1             [ 3]         sta z80_E
854b : c8               [ 2] 	iny                                             
854c : b1f5             [ 5]         lda (z80_IX),y
854e : 85f2             [ 3]         sta z80_D
8550 :                       Version
8550 : a93e             [ 2] 	lda #$3E                                        
8552 : c906             [ 2] 	cmp #6                                          
8554 : 900f             [ 3] 	bcc OLDPRTM     ; < 6
AS65 Assembler for R6502 [1.42].                                     Page   22
----------------------------------- ppt3.s -----------------------------------

8556 : a006             [ 2]         ldy #CrTnSl                              
8558 :                       PrSlide	
8558 : a9ac             [ 2]         lda #$AC                                 
855a : 85f1             [ 3]         sta z80_E
855c : 91f5             [ 5]         sta (z80_IX),y
855e : c8               [ 2]         iny
855f : a9ac             [ 2]         lda #$AC
8561 : 85f2             [ 3]         sta z80_D
8563 : 91f5             [ 5]         sta (z80_IX),y
                             	                                                
8565 :                       OLDPRTM	
8565 : a000             [ 2]         ldy #00                                  
8567 : b1ef             [ 5]         lda (z80_C),y
8569 : c8               [ 2]         iny                                      
856a : 85f7             [ 3]         sta z80_AP                               
856c : b1ef             [ 5] 	lda (z80_C),y                                   
856e : 85ee             [ 3] 	sta z80_A
8570 : a5ef             [ 3]         lda z80_C
8572 : 18               [ 2]         clc
8573 : 6902             [ 2]         adc #02
8575 : 85ef             [ 3]         sta z80_C
8577 : 9002             [ 3]         bcc sw
8579 : e6f0             [ 5]         inc z80_B
857b :                       sw
857b : a5ee             [ 3] 	lda z80_A                                       
857d : f010             [ 3] 	beq NOSIG                                       
857f : a5f1             [ 3] 	lda z80_E													
8581 : a6f3             [ 3] 	ldx z80_L
8583 : 85f3             [ 3] 	sta z80_L
8585 : 86f1             [ 3] 	stx z80_E
8587 : a5f2             [ 3] 	lda z80_D
8589 : a6f4             [ 3] 	ldx z80_H
858b : 85f4             [ 3] 	sta z80_H
858d : 86f2             [ 3] 	stx z80_D
858f :                       NOSIG	
858f : 38               [ 2]         sec                            
8590 : a5f3             [ 3]         lda z80_L
8592 : e5f1             [ 3]         sbc z80_E
8594 : 85f3             [ 3]         sta z80_L
8596 : a5f4             [ 3]         lda z80_H
8598 : e5f2             [ 3]         sbc z80_D
859a : 85f4             [ 3]         sta z80_H
859c : 1015             [ 3] 	bpl SET_STP                                     
859e : a5ee             [ 3] 	lda z80_A                                       
85a0 : 49ff             [ 2]         eor #$FF                                 
85a2 : a6f7             [ 3]         ldx z80_AP                               
85a4 : 85f7             [ 3]         sta z80_AP
85a6 : 8a               [ 2]         txa
85a7 : 49ff             [ 2] 	eor #$FF                                        
85a9 : 18               [ 2]         clc             
85aa : 6901             [ 2]         adc #01                                  
85ac : aa               [ 2]         tax                                      
85ad : a5f7             [ 3]         lda z80_AP
85af : 86f7             [ 3]         stx z80_AP
85b1 : 85ee             [ 3]         sta z80_A
85b3 :                       SET_STP	
85b3 : a018             [ 2]         ldy #(TSlStp+1)                          
85b5 : a5ee             [ 3]         lda z80_A
85b7 : 91f5             [ 5]         sta (z80_IX),y                           
85b9 : aa               [ 2]         tax                                      
85ba : a5f7             [ 3]         lda z80_AP
85bc : 86f7             [ 3]         stx z80_AP
AS65 Assembler for R6502 [1.42].                                     Page   23
----------------------------------- ppt3.s -----------------------------------

85be : 85ee             [ 3]         sta z80_A
85c0 : 88               [ 2] 	    dey                       
85c1 : 91f5             [ 5]         sta (z80_IX),y
85c3 : a00a             [ 2]         ldy #COnOff                              
85c5 : a900             [ 2]         lda #00
85c7 : 91f5             [ 5]         sta (z80_IX),y
85c9 : 60               [ 6] 	rts                                             
                             
85ca :                       C_GLISS	
85ca : a015             [ 2]         ldy #Flags       											
85cc : b1f5             [ 5] 	lda (z80_IX),y
85ce : 0904             [ 2] 	ora #%00000100
85d0 : 91f5             [ 5] 	sta (z80_IX),y
85d2 : a000             [ 2] 	ldy #00                 ; lda ($AC,x)	          
85d4 : b1ef             [ 5]         lda (z80_C),y
85d6 : 85ee             [ 3]         sta z80_A
85d8 : e6ef             [ 5]         inc z80_C                                
85da : d002             [ 3]         bne sy
85dc : e6f0             [ 5]         inc z80_B
85de :                       sy     
85de : a016             [ 2] 	ldy #TnSlDl                                     
85e0 : 91f5             [ 5]         sta (z80_IX),y
85e2 : 18               [ 2] 	clc                                             
85e3 : a5ee             [ 3]         lda z80_A                                
85e5 : d00d             [ 3] 	bne GL36                                        
85e7 : ad5185           [ 4] 	lda Version+1                                   
85ea : c907             [ 2] 	cmp #7                                          
85ec : b004             [ 3] 	bcs sz                                          
85ee : a900             [ 2]         lda #00         ; si A < 7  , A = 0 ($FF+
85f0 : f002             [ 3]         beq saa
85f2 : a901             [ 2] sz      lda #01         ; si A >= 7 , A = 1 ($00+
85f4 :                       saa	    
85f4 :                       GL36	
85f4 : a005             [ 2]         ldy #TSlCnt                              
85f6 : 91f5             [ 5] 	sta (z80_IX),y                                  
85f8 : a000             [ 2]         ldy #00                                  
85fa : b1ef             [ 5]         lda (z80_C),y
85fc : 85f7             [ 3]         sta z80_AP
85fe : c8               [ 2]         iny
85ff : b1ef             [ 5]         lda (z80_C),y
8601 : 85ee             [ 3]         sta z80_A
8603 : 18               [ 2]         clc
8604 : a5ef             [ 3]         lda z80_C
8606 : 6902             [ 2]         adc #02
8608 : 85ef             [ 3]         sta z80_C                                
860a : 9002             [ 3]         bcc sac
860c : e6f0             [ 5]         inc z80_B
860e :                       sac     
860e : 4cb385           [ 3] 	jmp SET_STP                                     
                             
8611 :                       C_SMPOS	
8611 : a000             [ 2]         ldy #00                  ; lda ($AC,x)	  
8613 : b1ef             [ 5]         lda (z80_C),y
8615 : e6ef             [ 5]         inc z80_C                                
8617 : d002             [ 3]         bne sad
8619 : e6f0             [ 5]         inc z80_B
861b :                       sad     
861b : a001             [ 2] 	ldy #PsInSm                                     
861d : 91f5             [ 5]         sta (z80_IX),y
861f : 60               [ 6] 	rts                                             
                             
8620 :                       C_ORPOS	
AS65 Assembler for R6502 [1.42].                                     Page   24
----------------------------------- ppt3.s -----------------------------------

8620 : a000             [ 2]         ldy #00                 ; lda ($AC,x)	   
8622 : b1ef             [ 5]         lda (z80_C),y
8624 : e6ef             [ 5]         inc z80_C                                
8626 : d002             [ 3]         bne sae
8628 : e6f0             [ 5]         inc z80_B
862a :                       sae     
862a : a000             [ 2] 	ldy #PsInOr                                     
862c : 91f5             [ 5]         sta (z80_IX),y
862e : 60               [ 6] 	rts                                             
                                 
862f :                       C_VIBRT	
862f : a000             [ 2]         ldy #00                 ; lda ($AC,x)	   
8631 : b1ef             [ 5]         lda (z80_C),y
8633 : e6ef             [ 5]         inc z80_C                                
8635 : d002             [ 3]         bne saf
8637 : e6f0             [ 5]         inc z80_B
8639 :                       saf     
8639 : a00b             [ 2] 	ldy #OnOffD                                     
863b : 91f5             [ 5]         sta (z80_IX),y
863d : a00a             [ 2]         ldy #COnOff                              
863f : 91f5             [ 5]         sta (z80_IX),y
8641 : a000             [ 2] 	ldy #00                 ; lda ($AC,x)	          
8643 : b1ef             [ 5]         lda (z80_C),y
8645 : e6ef             [ 5]         inc z80_C                                
8647 : d002             [ 3]         bne sag
8649 : e6f0             [ 5]         inc z80_B
864b : a00c             [ 2] sag     ldy #OffOnD                              
864d : 91f5             [ 5]         sta (z80_IX),y
864f : a900             [ 2]         lda #00                                  
8651 : a005             [ 2]         ldy #TSlCnt                              
8653 : 91f5             [ 5]         sta (z80_IX),y
8655 : a006             [ 2] 	ldy #CrTnSl                                     
8657 : 91f5             [ 5]         sta (z80_IX),y
8659 : c8               [ 2] 	iny                                             
865a : 91f5             [ 5]         sta (z80_IX),y
865c : 60               [ 6] 	rts                                             
                             
865d :                       C_ENGLS	
865d : a000             [ 2]         ldy #00                                  
865f : b1ef             [ 5]         lda (z80_C),y
8661 : 8dde8b           [ 4]         sta Env_Del+1                            
8664 : 8d008e           [ 4] 	sta CurEDel
8667 : c8               [ 2]         iny
8668 : b1ef             [ 5]         lda (z80_C),y
866a : 85f3             [ 3]         sta z80_L                                
866c : 8de38b           [ 4]         sta ESldAdd+1
866f : c8               [ 2]         iny
8670 : b1ef             [ 5]         lda (z80_C),y
8672 : 85f4             [ 3]         sta z80_H                                
8674 : 8deb8b           [ 4] 	sta ESldAdd+9
8677 : 18               [ 2]         clc
8678 : a5ef             [ 3]         lda z80_C 
867a : 6903             [ 2]         adc #03
867c : 85ef             [ 3]         sta z80_C
867e : 9002             [ 3]         bcc sah
8680 : e6f0             [ 5]         inc z80_B
8682 :                       sah	                                             
8682 : 60               [ 6] 	rts                                             
                             
8683 :                       C_DELAY	
8683 : a000             [ 2]         ldy #00                 ; lda ($AC,x)	   
8685 : b1ef             [ 5]         lda (z80_C),y
AS65 Assembler for R6502 [1.42].                                     Page   25
----------------------------------- ppt3.s -----------------------------------

8687 : e6ef             [ 5]         inc z80_C                                
8689 : d002             [ 3]         bne sak
868b : e6f0             [ 5]         inc z80_B
868d :                       sak
868d : 8d198b           [ 4] 	sta Delay+1                                     
8690 : 60               [ 6] 	rts                                             
                             
8691 :                       SETENV	
8691 : a014             [ 2]         ldy #Env_En                              
8693 : a5f1             [ 3]         lda z80_E
8695 : 91f5             [ 5]         sta (z80_IX),y
8697 : a5ee             [ 3]         lda z80_A                ; OPT (inverser 
8699 : 8d108e           [ 4]         sta AYREGS+EnvTp
869c : a000             [ 2] 	ldy #00                                         
869e : b1ef             [ 5]         lda (z80_C),y           
86a0 : 85f4             [ 3] 	sta z80_H                                       
86a2 : 8d128e           [ 4]         sta EnvBase+1                            
86a5 : c8               [ 2] 	iny                                             
86a6 : b1ef             [ 5]         lda (z80_C),y
86a8 : 85f3             [ 3] 	sta z80_L                                       
86aa : 8d118e           [ 4] 	sta EnvBase
86ad : a5ef             [ 3]         lda z80_C
86af : 18               [ 2]         clc
86b0 : 6902             [ 2]         adc #02
86b2 : 85ef             [ 3]         sta z80_C
86b4 : 9002             [ 3]         bcc sam
86b6 : e6f0             [ 5]         inc z80_B                                
86b8 : a900             [ 2] sam	lda #00                                      
86ba : a000             [ 2] 	ldy #PsInOr                                     
86bc : 91f5             [ 5]         sta (z80_IX),y
86be : 8d008e           [ 4] 	sta CurEDel                                     
86c1 : 85f4             [ 3] 	sta z80_H                                       
86c3 : 8dff8d           [ 4]         sta CurESld+1                            
86c6 : 85f3             [ 3] 	sta z80_L                                       
86c8 : 85ee             [ 3]         sta z80_A
86ca : 8dfe8d           [ 4] 	sta CurESld                                     
86cd :                       C_NOP	
86cd : 60               [ 6]         rts                                      
                             
86ce :                       SETORN	
86ce : a5ee             [ 3]         lda z80_A
86d0 : 0a               [ 2]         asl a                                    
86d1 : 85f1             [ 3] 	sta z80_E                                       
86d3 : a900             [ 2] 	lda #00             ; OPT (inutile ?)           
86d5 : 85f2             [ 3]         sta z80_D
86d7 : a000             [ 2] 	ldy #PsInOr                                     
86d9 : 91f5             [ 5]         sta (z80_IX),y
86db :                       OrnPtrs
86db : a9ac             [ 2] 	    lda #$AC           
86dd : 18               [ 2]         clc
86de : 65f1             [ 3]         adc z80_E                                
86e0 : 85f3             [ 3]         sta z80_L
86e2 : a9ac             [ 2]         lda #$AC
86e4 : 6900             [ 2]         adc #00
86e6 : 85f4             [ 3]         sta z80_H
86e8 : a000             [ 2] 	ldy #00                                         
86ea : b1f3             [ 5]         lda (z80_L),y
86ec :                       MDADDR2
86ec : 69ac             [ 2] 	adc #$AC
86ee : aa               [ 2]         tax             ; save
86ef : c8               [ 2] 	iny                                             
86f0 : b1f3             [ 5] 	lda (z80_L),y
AS65 Assembler for R6502 [1.42].                                     Page   26
----------------------------------- ppt3.s -----------------------------------

86f2 : 69ac             [ 2]         adc #$AC                                 
                             	    
86f4 : a00e             [ 2] 	ldy #OrnPtr+1                                   
86f6 : 91f5             [ 5]         sta (z80_IX),y
86f8 : 88               [ 2]         dey
86f9 : 8a               [ 2] 	txa                                             
86fa : 91f5             [ 5]         sta (z80_IX),y
86fc : 60               [ 6] 	rts                                             
                             
                             ;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODU
86fd :                       SPCCOMS 
86fd : cc86                          fcw C_NOP-1
86ff : c985                  	fcw C_GLISS-1
8701 : cd84                  	fcw C_PORTM-1
8703 : 1086                  	fcw C_SMPOS-1
8705 : 1f86                  	fcw C_ORPOS-1
8707 : 2e86                  	fcw C_VIBRT-1
8709 : cc86                  	fcw C_NOP-1
870b : cc86                  	fcw C_NOP-1
870d : 5c86                  	fcw C_ENGLS-1
870f : 8286                  	fcw C_DELAY-1
8711 : cc86                  	fcw C_NOP-1
8713 : cc86                  	fcw C_NOP-1
8715 : cc86                  	fcw C_NOP-1
8717 : cc86                  	fcw C_NOP-1
8719 : cc86                  	fcw C_NOP-1
871b : cc86                  	fcw C_NOP-1
                             ; ===============================================
871d :                       CHREGS	
871d : a900             [ 2]         lda #00                                  
871f : 85ee             [ 3] 	    sta z80_A       ; save
8721 : 8d0d8e           [ 4]         sta Ampl                                 
8724 : a5f3             [ 3] 	    lda z80_L                                   
8726 : 85fc             [ 3]         sta val3                                 
8728 : a5f4             [ 3]         lda z80_H
872a : 85fd             [ 3]         sta val3+1
872c : a015             [ 2]         ldy #Flags                               
872e : a901             [ 2]         lda #%00000001
8730 : 85f8             [ 3]         sta val1
8732 : b1f5             [ 5]         lda (z80_IX),y
8734 : 24f8             [ 3]         bit val1
8736 : d003             [ 3] 	    bne saq
8738 : 4cb489           [ 3]         jmp CH_EXIT                              
873b :                       saq     	
                                                                              
873b : a00d             [ 2] 	    ldy #OrnPtr                                 
873d : b1f5             [ 5]         lda (z80_IX),y
873f : 85f3             [ 3]         sta z80_L
8741 : 85f8             [ 3]         sta val1            ; save L
8743 : c8               [ 2]         iny                                      
8744 : b1f5             [ 5]         lda (z80_IX),y
8746 : 85f4             [ 3]         sta z80_H
8748 : 85f9             [ 3]         sta val1+1          ; save H
                             	                                                
874a : a000             [ 2]         ldy #00
874c : b1f3             [ 5]         lda (z80_L),y                            
874e : 85f1             [ 3]         sta z80_E
8750 : c8               [ 2]         iny
8751 : b1f3             [ 5]         lda (z80_L),y
8753 : 85f2             [ 3]         sta z80_D
8755 : a000             [ 2] 	    ldy #PsInOr                                 
8757 : b1f5             [ 5]         lda (z80_IX),y
AS65 Assembler for R6502 [1.42].                                     Page   27
----------------------------------- ppt3.s -----------------------------------

8759 : 85f3             [ 3] 	    sta z80_L                                   
875b : 85ee             [ 3]         sta z80_A                                
875d : 18               [ 2] 	    clc
875e : a5f8             [ 3]         lda val1
8760 : 65f3             [ 3]         adc z80_L
8762 : 85f3             [ 3]         sta z80_L
8764 : a5f9             [ 3]         lda val1+1
8766 : 6900             [ 2]         adc #00                
8768 : 85f4             [ 3]         sta z80_H                                
876a : a5f3             [ 3]         lda z80_L
876c : 6902             [ 2]         adc #02
876e : 85f3             [ 3]         sta z80_L
8770 : a5f4             [ 3]         lda z80_H
8772 : 6900             [ 2]         adc #00
8774 : 85f4             [ 3]         sta z80_H
8776 : a5ee             [ 3]         lda z80_A                                
8778 : 6901             [ 2]         adc #01
877a : c5f2             [ 3]         cmp z80_D                                
877c : 9003             [ 3] 	    bcc CH_ORPS                                 
877e : 18               [ 2] 	    clc
877f : a5f1             [ 3]         lda z80_E                                
8781 :                       CH_ORPS	
8781 : a000             [ 2]         ldy #PsInOr                              
8783 : 91f5             [ 5]         sta (z80_IX),y
8785 : a012             [ 2] 	    ldy #Note                                   
8787 : b1f5             [ 5]         lda (z80_IX),y
8789 : a000             [ 2] 	    ldy #00                                     
878b : 71f3             [ 5]         adc (z80_L),y       ; adc ($AC,x)	
878d : 1002             [ 3] 	    bpl CH_NTP                                  
878f : a900             [ 2] 	    lda #00                                     
8791 :                       CH_NTP	
8791 : c960             [ 2]         cmp #96                                  
8793 : 9002             [ 3] 	    bcc CH_NOK                                  
8795 : a95f             [ 2] 	    lda #95                                     
8797 :                       CH_NOK	
8797 : 0a               [ 2]         asl a                                    
8798 : 85f7             [ 3]         sta z80_AP                               
879a : a00f             [ 2] 	    ldy #SamPtr                                 
879c : b1f5             [ 5]         lda (z80_IX),y
879e : 85f3             [ 3]         sta z80_L
87a0 : 85f8             [ 3] 	    sta val1            ; save L
87a2 : c8               [ 2]         iny                                      
87a3 : b1f5             [ 5]         lda (z80_IX),y
87a5 : 85f4             [ 3]         sta z80_H
87a7 : 85f9             [ 3]         sta val1+1          ; save H
87a9 : a000             [ 2] 	    ldy #00
87ab : b1f3             [ 5]         lda (z80_L),y                            
87ad : 85f1             [ 3]         sta z80_E   
87af : c8               [ 2]         iny
87b0 : b1f3             [ 5]         lda (z80_L),y
87b2 : 85f2             [ 3]         sta z80_D   
                             
87b4 : a001             [ 2] 	    ldy #PsInSm                                 
87b6 : b1f5             [ 5]         lda (z80_IX),y
87b8 : 85f0             [ 3] 	    sta z80_B                                   
87ba : 0a               [ 2] 	    asl a                                       
87bb : 0a               [ 2] 	    asl a                                       
87bc : 85f3             [ 3] 	    sta z80_L                                   
87be : 18               [ 2]         clc
87bf : 65f8             [ 3]         adc val1
87c1 : 85f3             [ 3]         sta z80_L
87c3 : a5f9             [ 3]         lda val1+1
AS65 Assembler for R6502 [1.42].                                     Page   28
----------------------------------- ppt3.s -----------------------------------

87c5 : 6900             [ 2]         adc #00
87c7 : 85f4             [ 3]         sta z80_H                                
87c9 : a5f3             [ 3]         lda z80_L
87cb : 6902             [ 2]         adc #02
87cd : 85f3             [ 3]         sta z80_L
87cf : a5f4             [ 3]         lda z80_H
87d1 : 6900             [ 2]         adc #00
87d3 : 85f4             [ 3]         sta z80_H
                             
87d5 : a5f0             [ 3] 	    lda z80_B                                   
87d7 : 6901             [ 2]         adc #01
87d9 : c5f2             [ 3] 	    cmp z80_D                                   
87db : 9002             [ 3] 	    bcc CH_SMPS                                 
87dd : a5f1             [ 3] 	    lda z80_E                                   
87df :                       CH_SMPS	
87df : a001             [ 2]         ldy #PsInSm                              
87e1 : 91f5             [ 5]         sta (z80_IX),y
87e3 : a000             [ 2]         ldy #00
87e5 : b1f3             [ 5]         lda (z80_L),y                            
87e7 : 85ef             [ 3]         sta z80_C
87e9 : c8               [ 2]         iny
87ea : b1f3             [ 5]         lda (z80_L),y
87ec : 85f0             [ 3]         sta z80_B
                             
87ee : a008             [ 2]         ldy #TnAcc                               
87f0 : b1f5             [ 5]         lda (z80_IX),y
87f2 : 85f1             [ 3]         sta z80_E
87f4 : c8               [ 2]         iny
87f5 : b1f5             [ 5]         lda (z80_IX),y
87f7 : 85f2             [ 3] 	    sta z80_D                                   
87f9 : 18               [ 2] 	    clc                                         
87fa : a002             [ 2]         ldy #02
87fc : b1f3             [ 5]         lda (z80_L),y                            
87fe : 65f1             [ 3]         adc z80_E
8800 : aa               [ 2]         tax
8801 : c8               [ 2]         iny
8802 : b1f3             [ 5]         lda (z80_L),y
8804 : 65f2             [ 3]         adc z80_D
8806 : 85f4             [ 3]         sta z80_H
8808 : 85f2             [ 3]         sta z80_D
880a : 8a               [ 2]         txa
880b : 85f3             [ 3]         sta z80_L
880d : 85f1             [ 3]         sta z80_E
                             
880f : a940             [ 2]         lda #%01000000                           
8811 : 24f0             [ 3]         bit z80_B
8813 : f00b             [ 3] 	    beq CH_NOAC                                 
8815 : a008             [ 2] 	    ldy #TnAcc                                  
8817 : a5f3             [ 3]         lda z80_L
8819 : 91f5             [ 5]         sta (z80_IX),y
881b : c8               [ 2] 	    iny                                         
881c : a5f4             [ 3]         lda z80_H
881e : 91f5             [ 5]         sta (z80_IX),y
8820 :                       CH_NOAC 												             
8820 : a5f7             [ 3]         lda z80_AP                               
8822 : 85ee             [ 3]         sta z80_A                                
8824 : 85f3             [ 3]         sta z80_L                                
8826 : 18               [ 2]         clc
8827 : a903             [ 2]         lda #lo(NT_)
8829 : 65f3             [ 3]         adc z80_L
882b : 85f3             [ 3]         sta z80_L
882d : a98f             [ 2]         lda #hi(NT_)
AS65 Assembler for R6502 [1.42].                                     Page   29
----------------------------------- ppt3.s -----------------------------------

882f : 6900             [ 2]         adc #00
8831 : 85f4             [ 3]         sta z80_H
8833 : a000             [ 2]         ldy #00
8835 : b1f3             [ 5]         lda (z80_L),y                            
8837 : 65f1             [ 3]         adc z80_E
8839 : aa               [ 2]         tax
883a : c8               [ 2]         iny
883b : b1f3             [ 5]         lda (z80_L),y
883d : 65f2             [ 3]         adc z80_D                                
883f : 85f4             [ 3]         sta z80_H
8841 : 8a               [ 2]         txa
8842 : 85f3             [ 3]         sta z80_L
8844 : 18               [ 2]         clc
8845 : a006             [ 2] 	    ldy #CrTnSl                                 
8847 : b1f5             [ 5]         lda (z80_IX),y
8849 : 85f1             [ 3]         sta z80_E
884b : 65f3             [ 3]         adc z80_L
884d : 85f3             [ 3]         sta z80_L
884f : 85fc             [ 3] 	    sta val3
8851 : c8               [ 2]         iny                                      
8852 : b1f5             [ 5]         lda (z80_IX),y
8854 : 85f2             [ 3]         sta z80_D
8856 : 65f4             [ 3]         adc z80_H
8858 : 85f4             [ 3]         sta z80_H
885a : 85fd             [ 3]         sta val3+1
                             ;CSP_	    
                             	   
885c : a900             [ 2]         lda #00                                  
885e : a005             [ 2] 	    ldy #TSlCnt                                 
8860 : 11f5             [ 5]         ora (z80_IX),y
8862 : 85ee             [ 3] 	    sta z80_A
8864 : d003             [ 3]         bne saq1                                 
8866 : 4ce488           [ 3]         jmp CH_AMP
8869 : b1f5             [ 5] saq1	lda (z80_IX),y                              
886b : 38               [ 2]         sec
886c : e901             [ 2]         sbc #01
886e : 91f5             [ 5]         sta (z80_IX),y
8870 : d072             [ 3] 	    bne CH_AMP                                  
8872 : a016             [ 2] 	    ldy #TnSlDl                                 
8874 : b1f5             [ 5]         lda (z80_IX),y
8876 : a005             [ 2]         ldy #TSlCnt                              
8878 : 91f5             [ 5]         sta (z80_IX),y
887a : 18               [ 2] 	    clc
887b : a017             [ 2]         ldy #TSlStp                              
887d : b1f5             [ 5]         lda (z80_IX),y
887f : 65f1             [ 3]         adc z80_E
8881 : 85f3             [ 3]         sta z80_L
8883 : c8               [ 2] 	    iny                                         
8884 : b1f5             [ 5]         lda (z80_IX),y
8886 : 65f2             [ 3]         adc z80_D
8888 : 85f4             [ 3]         sta z80_H 
888a : 85ee             [ 3] 	    sta z80_A       ; save                      
888c : a007             [ 2] 	    ldy #CrTnSl+1                               
888e : 91f5             [ 5]         sta (z80_IX),y
8890 : 88               [ 2]         dey                                      
8891 : a5f3             [ 3]         lda z80_L
8893 : 91f5             [ 5]         sta (z80_IX),y
8895 : a904             [ 2] 	    lda #%00000100                              
8897 : 85f8             [ 3]         sta val1
8899 : a015             [ 2]         ldy #Flags
889b : b1f5             [ 5]         lda (z80_IX),y
889d : 24f8             [ 3]         bit val1
AS65 Assembler for R6502 [1.42].                                     Page   30
----------------------------------- ppt3.s -----------------------------------

889f : d043             [ 3] 	    bne CH_AMP  	                               
88a1 : a019             [ 2] 	    ldy #TnDelt                                 
88a3 : b1f5             [ 5]         lda (z80_IX),y
88a5 : 85f1             [ 3]         sta z80_E
88a7 : c8               [ 2] 	    iny                                         
88a8 : b1f5             [ 5]         lda (z80_IX),y
88aa : 85f2             [ 3]         sta z80_D
88ac : a5ee             [ 3] 	lda z80_A                                       
88ae : f010             [ 3] 	beq CH_STPP                                     
88b0 : a5f1             [ 3] 	lda z80_E												
88b2 : a6f3             [ 3] 	ldx z80_L
88b4 : 85f3             [ 3] 	sta z80_L
88b6 : 86f1             [ 3] 	stx z80_E
88b8 : a5f2             [ 3] 	lda z80_D
88ba : a6f4             [ 3] 	ldx z80_H
88bc : 85f4             [ 3] 	sta z80_H
88be : 86f2             [ 3] 	stx z80_D
88c0 :                       CH_STPP
88c0 : 38               [ 2]         sec           ; carry = 0 becoze And A   
88c1 : a5f3             [ 3]         lda z80_L
88c3 : e5f1             [ 3]         sbc z80_E
88c5 : 85f3             [ 3]         sta z80_L
88c7 : a5f4             [ 3]         lda z80_H
88c9 : e5f2             [ 3]         sbc z80_D
88cb : 85f4             [ 3]         sta z80_H
88cd : 3015             [ 3]         bmi CH_AMP                               
88cf : a013             [ 2] 	ldy #SlToNt                                     
88d1 : b1f5             [ 5]         lda (z80_IX),y
88d3 : a012             [ 2] 	ldy #Note                                       
88d5 : 91f5             [ 5]         sta (z80_IX),y
88d7 : a900             [ 2] 	lda #00                                         
88d9 : a005             [ 2] 	ldy #TSlCnt                                     
88db : 91f5             [ 5]         sta (z80_IX),y
88dd : a006             [ 2] 	ldy #CrTnSl                                     
88df : 91f5             [ 5]         sta (z80_IX),y
88e1 : c8               [ 2]         iny                                      
88e2 : 91f5             [ 5]         sta (z80_IX),y
                             
88e4 :                       CH_AMP	
88e4 : a002             [ 2]         ldy #CrAmSl                              
88e6 : b1f5             [ 5]         lda (z80_IX),y
88e8 : 85ee             [ 3] 	    sta z80_A       ; save
88ea : a980             [ 2]         lda #%10000000                           
88ec : 24ef             [ 3]         bit z80_C
88ee : f021             [ 4] 	    beq CH_NOAM                                 
88f0 : a940             [ 2] 	    lda #%01000000                              
88f2 : 24ef             [ 3]         bit z80_C
88f4 : f00c             [ 4] 	    beq CH_AMIN                                 
88f6 : a5ee             [ 3] 	    lda z80_A                                   
88f8 : c90f             [ 2]         cmp #15
88fa : f015             [ 4] 	    beq CH_NOAM                                 
88fc : 18               [ 2] 	    clc                                         
88fd : 6901             [ 2]         adc #01
88ff : 4c0b89           [ 3] 	    jmp CH_SVAM                                 
8902 :                       CH_AMIN	
8902 : a5ee             [ 3]         lda z80_A                                
8904 : c9f1             [ 2]         cmp #$F1            ; -15
8906 : f009             [ 3] 	    beq CH_NOAM                                 
8908 : 38               [ 2] 	    sec                                         
8909 : e901             [ 2]         sbc #01
890b :                       CH_SVAM	
890b : a002             [ 2]         ldy #CrAmSl                              
AS65 Assembler for R6502 [1.42].                                     Page   31
----------------------------------- ppt3.s -----------------------------------

890d : 91f5             [ 5]         sta (z80_IX),y
890f : 85ee             [ 3]         sta z80_A
8911 :                       CH_NOAM	
8911 : a5ee             [ 3]         lda z80_A
8913 : 85f3             [ 3]         sta z80_L                                
8915 : a5f0             [ 3] 	    lda z80_B                                   
8917 : 290f             [ 2] 	    and #15                                     
8919 : 18               [ 2] 	    clc                                         
891a : 65f3             [ 3]         adc z80_L
891c : 1002             [ 3] 	    bpl CH_APOS                                 
891e : a900             [ 2] 	    lda #00                                     
8920 :                       CH_APOS	
8920 : c910             [ 2]         cmp #16                                  
8922 : 9002             [ 3] 	    bcc CH_VOL                                  
8924 : a90f             [ 2] 	    lda #15                                     
8926 :                       CH_VOL	
8926 : a01c             [ 2]         ldy #Volume                              
8928 : 11f5             [ 5]         ora (z80_IX),y
892a : 85f3             [ 3] 	    sta z80_L
892c : 18               [ 2]         clc                                      
892d : a903             [ 2] 	lda #lo(VT_)                                    
892f : 85f1             [ 3]         sta z80_E
8931 : 65f3             [ 3]         adc z80_L
8933 : 85f3             [ 3]         sta z80_L
8935 : a98e             [ 2]         lda #hi(VT_)
8937 : 85f2             [ 3]         sta z80_D
8939 : 6900             [ 2]         adc #00
893b : 85f4             [ 3]         sta z80_H
893d : a000             [ 2] 	    ldy #00                                     
893f : b1f3             [ 5]         lda (z80_L),y       ; lda ($AC,x)	
8941 : 85ee             [ 3]         sta z80_A       ; save
8943 :                       CH_ENV	
8943 : a901             [ 2]         lda #%00000001                           
8945 : 24ef             [ 3]         bit z80_C
8947 : d008             [ 3] 	    bne CH_NOEN                                 
8949 : a014             [ 2] 	    ldy #Env_En                                 
894b : a5ee             [ 3]         lda z80_A
894d : 11f5             [ 5]         ora (z80_IX),y
894f : 85ee             [ 3]         sta z80_A
                             
8951 :                       CH_NOEN	
8951 : a5ee             [ 3]         lda z80_A
8953 : 8d0d8e           [ 4]         sta Ampl                                 
8956 : a5ef             [ 3]         lda z80_C                                
8958 : 85ee             [ 3]         sta z80_A
895a : a980             [ 2]         lda #%10000000                           
895c : 24f0             [ 3]         bit z80_B
895e : f034             [ 3] 	    beq NO_ENSL                                 
8960 : a5ee             [ 3]         lda z80_A
8962 : 2a               [ 2]         rol a                                    
8963 : 2a               [ 2] 	    rol a                                       
8964 : c980             [ 2] 	    cmp #$80                                    
8966 : 6a               [ 2]         ror a
8967 : c980             [ 2] 	    cmp #$80                                    
8969 : 6a               [ 2]         ror a
896a : c980             [ 2] 	    cmp #$80                                    
896c : 6a               [ 2]         ror a
896d : a004             [ 2] 	    ldy #CrEnSl                                 
896f : 18               [ 2]         clc
8970 : 71f5             [ 5]         adc (z80_IX),y
8972 : 85ee             [ 3]         sta z80_A
8974 : a920             [ 2]         lda #%00100000                           
AS65 Assembler for R6502 [1.42].                                     Page   32
----------------------------------- ppt3.s -----------------------------------

8976 : 24f0             [ 3]         bit z80_B
8978 : f006             [ 3] 	    beq NO_ENAC                                 
897a : a004             [ 2] 	    ldy #CrEnSl                                 
897c : a5ee             [ 3]         lda z80_A
897e : 91f5             [ 5]         sta (z80_IX),y
8980 :                       NO_ENAC	
8980 : a997             [ 2]         lda #lo(AddToEn+1)       ; OPT ?         
8982 : 85f3             [ 3]         sta z80_L
8984 : a98b             [ 2]         lda #hi(AddToEn+1)
8986 : 85f4             [ 3]         sta z80_H
8988 : a5ee             [ 3]         lda z80_A
898a : a000             [ 2]         ldy #00                                  
                             		                                               
898c : 18               [ 2]         clc
898d : 71f3             [ 5]         adc (z80_L),y           ; OPT ?
898f : 91f3             [ 5]         sta (z80_L),y                            
8991 : 4cad89           [ 3] 	    jmp CH_MIX                                  
8994 :                       NO_ENSL 
8994 : a5ee             [ 3]         lda z80_A
8996 : 6a               [ 2]         ror a                                    
8997 : a003             [ 2] 	    ldy #CrNsSl                                 
8999 : 18               [ 2]         clc
899a : 71f5             [ 5]         adc (z80_IX),y
899c : 8d028e           [ 4] 	    sta AddToNs                                 
899f : 85ee             [ 3]         sta z80_A       ; save
89a1 : a920             [ 2] 	    lda #%00100000                              
89a3 : 24f0             [ 3]         bit z80_B
89a5 : f006             [ 3] 	    beq CH_MIX                                  
89a7 : a003             [ 2] 	    ldy #CrNsSl                                 
89a9 : a5ee             [ 3]         lda z80_A
89ab : 91f5             [ 5]         sta (z80_IX),y
89ad :                       CH_MIX	
89ad : a5f0             [ 3]         lda z80_B                                
89af : 6a               [ 2] 	    ror a                                       
89b0 : 2948             [ 2] 	    and #$48                                    
89b2 : 85ee             [ 3]         sta z80_A
89b4 :                       CH_EXIT	
89b4 : a90a             [ 2]         lda #lo(AYREGS+Mixer)                    
89b6 : 85f3             [ 3]         sta z80_L
89b8 : a98e             [ 2]         lda #hi(AYREGS+Mixer)
89ba : 85f4             [ 3]         sta z80_H
89bc : a5ee             [ 3] 	    lda z80_A
89be : a000             [ 2]         ldy #00                                  
89c0 : 11f3             [ 5]         ora (z80_L),y       ; ora ($AC,x)	
89c2 : 4a               [ 2] 	    lsr a                                       
89c3 : 9002             [ 3]         bcc saq2
89c5 : 0980             [ 2]         ora #$80
89c7 : 91f3             [ 5] saq2	sta (z80_L),y                               
89c9 : a5fd             [ 3] 	    lda val3+1                                  
89cb : 85f4             [ 3]         sta z80_H
89cd : a5fc             [ 3]         lda val3 
89cf : 85f3             [ 3]         sta z80_L
89d1 : a900             [ 2] 	    lda #00                                     
89d3 : a00a             [ 2] 	    ldy #COnOff                                 
89d5 : 11f5             [ 5]         ora (z80_IX),y
89d7 : 85ee             [ 3] 	    sta z80_A       ; save
89d9 : d001             [ 3]         bne sas                                  
89db : 60               [ 6]         rts
89dc : a00a             [ 2] sas 	ldy #COnOff                                 
89de : b1f5             [ 5]         lda (z80_IX),y
89e0 : 38               [ 2]         sec
89e1 : e901             [ 2]         sbc #01
AS65 Assembler for R6502 [1.42].                                     Page   33
----------------------------------- ppt3.s -----------------------------------

89e3 : 91f5             [ 5]         sta (z80_IX),y
89e5 : f001             [ 3] 	    beq sat                                     
89e7 : 60               [ 6]         rts
89e8 : a015             [ 2] sat 	ldy #Flags                                  
89ea : a5ee             [ 3]         lda z80_A
89ec : 51f5             [ 5]         eor (z80_IX),y                           
89ee : 91f5             [ 5]         sta (z80_IX),y                           
89f0 : 6a               [ 2] 	    ror a                                       
89f1 : a00b             [ 2] 	    ldy #OnOffD                                 
89f3 : b1f5             [ 5]         lda (z80_IX),y
89f5 : b004             [ 3] 	    bcs CH_ONDL                                 
89f7 : a00c             [ 2] 	    ldy #OffOnD                                 
89f9 : b1f5             [ 5]         lda (z80_IX),y
89fb :                       CH_ONDL	
89fb : a00a             [ 2]         ldy #COnOff                              
89fd : 91f5             [ 5]         sta (z80_IX),y
89ff : 60               [ 6]         rts                                      
                             ; ===============================================
8a00 :                       PLAY    
8a00 : a900             [ 2]         lda #00                                  
8a02 : 8d978b           [ 4] 	    sta AddToEn+1                               
8a05 : 8d0a8e           [ 4] 	    sta AYREGS+Mixer                            
8a08 : a9ff             [ 2] 	    lda #$FF                                    
8a0a : 8d108e           [ 4] 	    sta AYREGS+EnvTp                            
8a0d : cefd8d           [ 6] 	    dec DelyCnt                                 
8a10 : f003             [ 3] 	    beq sat1                                    
8a12 : 4c1d8b           [ 3]         jmp PL2
8a15 : cec18d           [ 6] sat1	dec ANtSkCn                                 
8a18 : f003             [ 3] 	    beq sat2                                    
8a1a : 4cd48a           [ 3]         jmp PL1B
8a1d :                       AdInPtA
8a1d : a901             [ 2] sat2	lda #01                                     
8a1f : 85ef             [ 3]         sta z80_C
8a21 : a901             [ 2]         lda #01
8a23 : 85f0             [ 3]         sta z80_B
8a25 : a000             [ 2] 	    ldy #00                                     
8a27 : b1ef             [ 5]         lda (z80_C),y       ; lda ($AC,x)	       
8a29 : f003             [ 3] 	    beq sat3            ; test 0                
8a2b : 4cbf8a           [ 3]         jmp PL1A
8a2e : 85f2             [ 3] sat3	sta z80_D                                   
8a30 : 8d018e           [ 4] 	    sta Ns_Base                                 
8a33 : ad3780           [ 4] 	    lda CrPsPtr                                 
8a36 : 85f3             [ 3]         sta z80_L
8a38 : ad3880           [ 4]         lda CrPsPtr+1
8a3b : 85f4             [ 3]         sta z80_H
8a3d : e6f3             [ 5] 	    inc z80_L                                   
8a3f : d002             [ 3]         bne sar
8a41 : e6f4             [ 5]         inc z80_H
8a43 :                       sar                                              
8a43 : b1f3             [ 5]         lda (z80_L),y                            
8a45 : 18               [ 2] 	    clc                                         
8a46 : 6901             [ 2]         adc #01
8a48 : 85ee             [ 3]         sta z80_A
8a4a : d014             [ 3]         bne PLNLP                                
8a4c : 207880           [ 6] 	    jsr CHECKLP                                 
8a4f :                       LPosPtr
8a4f : a9ac             [ 2] 	    lda #$AC                                    
8a51 : 85f3             [ 3]         sta z80_L
8a53 : a9ac             [ 2]         lda #$AC
8a55 : 85f4             [ 3]         sta z80_H
8a57 : a000             [ 2] 	    ldy #00                 ; OPT ?             
8a59 : b1f3             [ 5]         lda (z80_L),y       ; lda ($AC,x)	       
AS65 Assembler for R6502 [1.42].                                     Page   34
----------------------------------- ppt3.s -----------------------------------

8a5b : 18               [ 2] 	    clc                                         
8a5c : 6901             [ 2]         adc #01
8a5e : 85ee             [ 3]         sta z80_A           ; save
8a60 :                       PLNLP	
8a60 : a5f3             [ 3]         lda z80_L                                
8a62 : 8d3780           [ 4]         sta CrPsPtr
8a65 : a5f4             [ 3]         lda z80_H
8a67 : 8d3880           [ 4]         sta CrPsPtr+1
8a6a : a5ee             [ 3] 	    lda z80_A                                   
8a6c : 38               [ 2]         sec
8a6d : e901             [ 2]         sbc #01
8a6f : 0a               [ 2] 	    asl a                                       
8a70 : 85f1             [ 3] 	    sta z80_E                                   
8a72 : 85ee             [ 3]         sta z80_A
8a74 : 26f2             [ 5] 	    rol z80_D                                   
8a76 :                       PatsPtr
8a76 : a9ac             [ 2] 	    lda #$AC
8a78 : 18               [ 2]         clc
8a79 : 65f1             [ 3]         adc z80_E                                
8a7b : 85f3             [ 3]         sta z80_L
8a7d : a9ac             [ 2]         lda #$AC
8a7f : 65f2             [ 3]         adc z80_D
8a81 : 85f4             [ 3]         sta z80_H
                             	    
8a83 : adaa83           [ 4] 	    lda MODADDR+1                               
8a86 : 85f1             [ 3]         sta z80_E
8a88 : adb083           [ 4]         lda MODADDR+7
8a8b : 85f2             [ 3]         sta z80_D
                                                    	                         
8a8d : a000             [ 2] 	    ldy #00                 ; OPT ?
8a8f : b1f3             [ 5]         lda (z80_L),y           ; lda ($AC,x)	   
8a91 : 18               [ 2]         clc                                      
8a92 : 65f1             [ 3]         adc z80_E               ; OPT (adc MODADD
8a94 : 85ef             [ 3]         sta z80_C
8a96 : c8               [ 2]         iny
8a97 : b1f3             [ 5]         lda (z80_L),y
8a99 : 65f2             [ 3]         adc z80_D               ; OPT (adc MODADD
8a9b : 85f0             [ 3]         sta z80_B   
8a9d : c8               [ 2]         iny
8a9e : b1f3             [ 5]         lda (z80_L),y                            
8aa0 : 18               [ 2]         clc                     ; OPT ?
8aa1 : 65f1             [ 3]         adc z80_E               ; IDEM...
8aa3 : 8de28a           [ 4]         sta AdInPtB+1   
8aa6 : c8               [ 2]         iny
8aa7 : b1f3             [ 5]         lda (z80_L),y
8aa9 : 65f2             [ 3]         adc z80_D
8aab : 8de68a           [ 4]         sta AdInPtB+5     
8aae : c8               [ 2]         iny
8aaf : b1f3             [ 5]         lda (z80_L),y                            
8ab1 : 18               [ 2]         clc
8ab2 : 65f1             [ 3]         adc z80_E               ; IDEM
8ab4 : 8d048b           [ 4]         sta AdInPtC+1   
8ab7 : c8               [ 2]         iny
8ab8 : b1f3             [ 5]         lda (z80_L),y
8aba : 65f2             [ 3]         adc z80_D
8abc : 8d088b           [ 4]         sta AdInPtC+5
                                                                              
8abf :                       PSP_	
                             
8abf :                       PL1A	
8abf : a9a6             [ 2]         lda #lo(ChanA)                           
8ac1 : 85f5             [ 3]         sta z80_IX
AS65 Assembler for R6502 [1.42].                                     Page   35
----------------------------------- ppt3.s -----------------------------------

8ac3 : a98d             [ 2]         lda #hi(ChanA)
8ac5 : 85f6             [ 3]         sta z80_IX+1
8ac7 : 201a84           [ 6] 	jsr PTDECOD                                     
8aca : a5ef             [ 3] 	lda z80_C                                       
8acc : 8d1e8a           [ 4]         sta AdInPtA+1
8acf : a5f0             [ 3]         lda z80_B
8ad1 : 8d228a           [ 4]         sta AdInPtA+5
                             
8ad4 :                       PL1B	
8ad4 : cede8d           [ 6]         dec BNtSkCn                              
8ad7 : d01d             [ 3] 	bne PL1C                                        
8ad9 : a9c3             [ 2] 	lda #lo(ChanB)                                  
8adb : 85f5             [ 3]         sta z80_IX
8add : a98d             [ 2]         lda #hi(ChanB)
8adf : 85f6             [ 3]         sta z80_IX+1
8ae1 :                       AdInPtB
8ae1 : a901             [ 2] 	lda #01                                         
8ae3 : 85ef             [ 3]         sta z80_C
8ae5 : a901             [ 2]         lda #01
8ae7 : 85f0             [ 3]         sta z80_B
8ae9 : 201a84           [ 6] 	jsr PTDECOD                                     
8aec : a5ef             [ 3] 	lda z80_C                                       
8aee : 8de28a           [ 4]         sta AdInPtB+1
8af1 : a5f0             [ 3]         lda z80_B
8af3 : 8de68a           [ 4]         sta AdInPtB+5
                             
8af6 :                       PL1C	
8af6 : cefb8d           [ 6]         dec CNtSkCn                              
8af9 : d01d             [ 4] 	bne PL1D                                        
8afb : a9e0             [ 2] 	lda #lo(ChanC)                                  
8afd : 85f5             [ 3]         sta z80_IX
8aff : a98d             [ 2]         lda #hi(ChanC)
8b01 : 85f6             [ 3]         sta z80_IX+1
8b03 :                       AdInPtC
8b03 : a901             [ 2] 	lda #01                                         
8b05 : 85ef             [ 3]         sta z80_C
8b07 : a901             [ 2]         lda #01
8b09 : 85f0             [ 3]         sta z80_B
8b0b : 201a84           [ 6] 	jsr PTDECOD                                     
8b0e : a5ef             [ 3] 	lda z80_C                                       
8b10 : 8d048b           [ 4]         sta AdInPtC+1
8b13 : a5f0             [ 3]         lda z80_B
8b15 : 8d088b           [ 4]         sta AdInPtC+5
                             
8b18 :                       Delay
8b18 :                       PL1D	
8b18 : a93e             [ 2]         lda #$3E                                 
8b1a : 8dfd8d           [ 4] 	    sta DelyCnt                                 
                             
8b1d :                       PL2	
8b1d : a9a6             [ 2]         lda #lo(ChanA)                           
8b1f : 85f5             [ 3]         sta z80_IX
8b21 : a98d             [ 2]         lda #hi(ChanA)
8b23 : 85f6             [ 3]         sta z80_IX+1
8b25 : ad038e           [ 4] 	    lda AYREGS+TonA                             
8b28 : 85f3             [ 3]         sta z80_L
8b2a : ad048e           [ 4]         lda AYREGS+TonA+1
8b2d : 85f4             [ 3]         sta z80_H
8b2f : 201d87           [ 6] 	    jsr CHREGS                                  
8b32 : a5f3             [ 3] 	    lda z80_L                                   
8b34 : 8d038e           [ 4]         sta AYREGS+TonA
8b37 : a5f4             [ 3]         lda z80_H
AS65 Assembler for R6502 [1.42].                                     Page   36
----------------------------------- ppt3.s -----------------------------------

8b39 : 8d048e           [ 4]         sta AYREGS+TonA+1
8b3c : ad0d8e           [ 4] 	    lda Ampl                                    
8b3f : 8d0b8e           [ 4] 	    sta AYREGS+AmplA                            
                             	
8b42 : a9c3             [ 2]         lda #lo(ChanB)                           
8b44 : 85f5             [ 3]         sta z80_IX
8b46 : a98d             [ 2]         lda #hi(ChanB)
8b48 : 85f6             [ 3]         sta z80_IX+1
8b4a : ad058e           [ 4] 	    lda AYREGS+TonB                             
8b4d : 85f3             [ 3]         sta z80_L
8b4f : ad068e           [ 4]         lda AYREGS+TonB+1
8b52 : 85f4             [ 3]         sta z80_H
8b54 : 201d87           [ 6] 	    jsr CHREGS                                  
8b57 : a5f3             [ 3] 	    lda z80_L                                   
8b59 : 8d058e           [ 4]         sta AYREGS+TonB
8b5c : a5f4             [ 3]         lda z80_H
8b5e : 8d068e           [ 4]         sta AYREGS+TonB+1
8b61 : ad0d8e           [ 4] 	    lda Ampl                                    
8b64 : 8d0c8e           [ 4] 	    sta AYREGS+AmplB                            
                             	    
8b67 : a9e0             [ 2]         lda #lo(ChanC)                           
8b69 : 85f5             [ 3]         sta z80_IX
8b6b : a98d             [ 2]         lda #hi(ChanC)
8b6d : 85f6             [ 3]         sta z80_IX+1
8b6f : ad078e           [ 4] 	    lda AYREGS+TonC                             
8b72 : 85f3             [ 3]         sta z80_L
8b74 : ad088e           [ 4]         lda AYREGS+TonC+1
8b77 : 85f4             [ 3]         sta z80_H
8b79 : 201d87           [ 6] 	    jsr CHREGS                                  
8b7c : a5f3             [ 3] 	    lda z80_L                                   
8b7e : 8d078e           [ 4]         sta AYREGS+TonC
8b81 : a5f4             [ 3]         lda z80_H
8b83 : 8d088e           [ 4]         sta AYREGS+TonC+1
                             
8b86 : ad018e           [ 4] 	    lda Ns_Base_AddToNs                         
8b89 : 85f3             [ 3]         sta z80_L
8b8b : ad028e           [ 4]         lda Ns_Base_AddToNs+1
8b8e : 85f4             [ 3]         sta z80_H                                
8b90 : 18               [ 2] 	    clc                                         
8b91 : 65f3             [ 3]         adc z80_L
8b93 : 8d098e           [ 4] 	    sta AYREGS+Noise                            
                             
8b96 :                       AddToEn
8b96 : a93e             [ 2] 	    lda #$3E                                    
8b98 : 85f1             [ 3] 	    sta z80_E                                   
8b9a : 0a               [ 2] 	    asl a                                       
8b9b : 9004             [ 3] 	    bcc sau                                     
8b9d : a9ff             [ 2]         lda #$FF
8b9f : d002             [ 3]         bne sau1      ; always
8ba1 : a900             [ 2] sau     lda #00
8ba3 : 85f2             [ 3] sau1	sta z80_D                                   
8ba5 : ad128e           [ 4]         lda EnvBase+1
8ba8 : 85f4             [ 3]         sta z80_H           ; OPT ?
8baa : ad118e           [ 4]         lda EnvBase                              
8bad : 85f3             [ 3]         sta z80_L           ; OPT ?
8baf : 18               [ 2] 	    clc                                         
8bb0 : 65f1             [ 3]         adc z80_E
8bb2 : 85f3             [ 3]         sta z80_L
8bb4 : a5f2             [ 3]         lda z80_D
8bb6 : 65f4             [ 3]         adc z80_H           ; OPT ?
8bb8 : 85f4             [ 3]         sta z80_H 
8bba : adff8d           [ 4]         lda CurESld+1
AS65 Assembler for R6502 [1.42].                                     Page   37
----------------------------------- ppt3.s -----------------------------------

8bbd : 85f2             [ 3]         sta z80_D
8bbf : adfe8d           [ 4]         lda CurESld                              
8bc2 : 85f1             [ 3]         sta z80_E
8bc4 : 18               [ 2] 	    clc                                         
8bc5 : 65f3             [ 3]         adc z80_L
8bc7 : 8d0e8e           [ 4]         sta AYREGS+Env                           
8bca : a5f2             [ 3]         lda z80_D
8bcc : 65f4             [ 3]         adc z80_H
8bce : 8d0f8e           [ 4] 	    sta AYREGS+Env+1                            
                             
8bd1 : a900             [ 2]         lda #00                                  
8bd3 : 0d008e           [ 4]         ora CurEDel         ; OPT ?              
8bd6 : f019             [ 3] 	    beq ROUT                                    
8bd8 : ce008e           [ 6] 	    dec CurEDel                                 
8bdb : d014             [ 3] 	    bne ROUT                                    
8bdd :                       Env_Del
8bdd : a93e             [ 2] 	    lda #$3E                                    
8bdf : 8d008e           [ 4] 	    sta CurEDel                                 
8be2 :                       ESldAdd
8be2 : a9ac             [ 2] 	    lda #$AC                                    
8be4 : 18               [ 2]         clc
8be5 : 65f1             [ 3]         adc z80_E       
8be7 : 8dfe8d           [ 4]         sta CurESld
8bea : a9ac             [ 2]         lda #$AC
8bec : 65f2             [ 3]         adc z80_D
8bee : 8dff8d           [ 4] 	    sta CurESld+1
                             ; ===============================================
                             
8bf1 :                       ROUT
8bf1 : ae048e           [ 4]         ldx AYREGS+1    ; hi ToneA
8bf4 : ad038e           [ 4]         lda AYREGS+0    ; lo ToneA
8bf7 : 207a8c           [ 6]         jsr FIX16BITS
                                     
8bfa : a901             [ 2]         lda #01             
8bfc : 20c98c           [ 6]         jsr snd_set
8bff : 98               [ 2]         tya
8c00 : aa               [ 2]         tax
8c01 : a900             [ 2]         lda #00
8c03 : 20c98c           [ 6]         jsr snd_set
                             
8c06 : ae068e           [ 4]         ldx AYREGS+3    ; hi ToneA
8c09 : ad058e           [ 4]         lda AYREGS+2    ; lo ToneA
8c0c : 207a8c           [ 6]         jsr FIX16BITS 
                             
8c0f : a903             [ 2]         lda #03             
8c11 : 20c98c           [ 6]         jsr snd_set
8c14 : 98               [ 2]         tya
8c15 : aa               [ 2]         tax
8c16 : a902             [ 2]         lda #02             
8c18 : 20c98c           [ 6]         jsr snd_set
                             
8c1b : ae088e           [ 4]         ldx AYREGS+5    ; hi ToneA
8c1e : ad078e           [ 4]         lda AYREGS+4    ; lo ToneA
8c21 : 207a8c           [ 6]         jsr FIX16BITS 
                             
8c24 : a905             [ 2]         lda #05             
8c26 : 20c98c           [ 6]         jsr snd_set
8c29 : 98               [ 2]         tya
8c2a : aa               [ 2]         tax
8c2b : a904             [ 2]         lda #04             
8c2d : 20c98c           [ 6]         jsr snd_set
                             
AS65 Assembler for R6502 [1.42].                                     Page   38
----------------------------------- ppt3.s -----------------------------------

8c30 : ad098e           [ 4]         lda AYREGS+6    ; data
                                     ;jsr FIX8BITS
8c33 : 4a               [ 2]         lsr a             ; /2 
8c34 : aa               [ 2]         tax
8c35 : a906             [ 2]         lda #06             
8c37 : 20c98c           [ 6]         jsr snd_set
                             
8c3a : ae0a8e           [ 4]         ldx AYREGS+7    ; data
8c3d : a907             [ 2]         lda #07
8c3f : 20c98c           [ 6]         jsr snd_set
                             
8c42 : ae0b8e           [ 4]         ldx AYREGS+8    ; data
8c45 : a908             [ 2]         lda #08             
8c47 : 20c98c           [ 6]         jsr snd_set
                             
8c4a : ae0c8e           [ 4]         ldx AYREGS+9    ; data
8c4d : a909             [ 2]         lda #09             
8c4f : 20c98c           [ 6]         jsr snd_set
                             
8c52 : ae0d8e           [ 4]         ldx AYREGS+10   ; data
8c55 : a90a             [ 2]         lda #10             
8c57 : 20c98c           [ 6]         jsr snd_set
                             
8c5a : ae0f8e           [ 4]         ldx AYREGS+12   ; hi Env
8c5d : ad0e8e           [ 4]         lda AYREGS+11   ; lo Env
8c60 : 207a8c           [ 6]         jsr FIX16BITS 
                             
8c63 : a90c             [ 2]         lda #12             
8c65 : 20c98c           [ 6]         jsr snd_set
8c68 : 98               [ 2]         tya
8c69 : aa               [ 2]         tax
8c6a : a90b             [ 2]         lda #11             
8c6c : 20c98c           [ 6]         jsr snd_set
                             
                                     ; shunte R13 si $FF (Y=13) => plus géné
8c6f : ae108e           [ 4]         ldx AYREGS+13
8c72 : 3005             [ 3]         bmi FIN_RTS
8c74 : a90d             [ 2]         lda #13
8c76 : 20c98c           [ 6]         jsr snd_set
8c79 :                       FIN_RTS
8c79 : 60               [ 6]         rts
                             ; -------------------------------------
8c7a :                       FIX16BITS       ; INT(256*2*1000/1773) = 289 = 25
                                             ; IN:  register A is low byte
                                             ;      register X is high byte
                                             ; OUT: register Y is low byte
                                             ;      register X is high byte
                             
                                     ; x256
8c7a : 86f8             [ 3]         stx TA1
8c7c : 85fa             [ 3]         sta TB1
8c7e : 86fb             [ 3]         stx TB2
8c80 : 85fd             [ 3]         sta TC2
8c82 : 86fe             [ 3]         stx TB3
8c84 : 85ff             [ 3]         sta TC3
8c86 : a900             [ 2]         lda #00
8c88 : 85f9             [ 3]         sta TA2
                                     
                                     ; x32
8c8a : 06fd             [ 5]         asl TC2
8c8c : 26fb             [ 5]         rol TB2
8c8e : 26f9             [ 5]         rol TA2
AS65 Assembler for R6502 [1.42].                                     Page   39
----------------------------------- ppt3.s -----------------------------------

8c90 : 06fd             [ 5]         asl TC2
8c92 : 26fb             [ 5]         rol TB2
8c94 : 26f9             [ 5]         rol TA2
8c96 : 06fd             [ 5]         asl TC2
8c98 : 26fb             [ 5]         rol TB2
8c9a : 26f9             [ 5]         rol TA2
8c9c : 06fd             [ 5]         asl TC2
8c9e : 26fb             [ 5]         rol TB2
8ca0 : 26f9             [ 5]         rol TA2
8ca2 : 06fd             [ 5]         asl TC2
8ca4 : 26fb             [ 5]         rol TB2
8ca6 : 26f9             [ 5]         rol TA2
                                     
                                     ; x32 + x01
8ca8 : 18               [ 2]         clc
8ca9 : a5ff             [ 3]         lda TC3
8cab : 65fd             [ 3]         adc TC2
                                     ; sta TC2
8cad : a5fe             [ 3]         lda TB3
8caf : 65fb             [ 3]         adc TB2
8cb1 : 85fb             [ 3]         sta TB2
8cb3 : a5f9             [ 3]         lda TA2
8cb5 : 6900             [ 2]         adc #00
8cb7 : 85f9             [ 3]         sta TA2
                             
                                     ; + x256 
8cb9 : 18               [ 2]         clc         
8cba : a5fb             [ 3]         lda TB2
8cbc : 65fa             [ 3]         adc TB1
8cbe : a8               [ 2]         tay         ; sta TB1
8cbf : a5f9             [ 3]         lda TA2
8cc1 : 65f8             [ 3]         adc TA1
                                     ; sta TA1
                             
                                     ; / 2 (16bits)
8cc3 : 4a               [ 2]         lsr a         ; lsr TA1
8cc4 : aa               [ 2]         tax         ; ldx TA1
8cc5 : 98               [ 2]         tya         ; lda TB1     
8cc6 : 6a               [ 2]         ror a         ; ror TB1
8cc7 : a8               [ 2]         tay         ; ldy TB1
8cc8 : 60               [ 6]         rts 
                             
                             ; HB-BBC-128 settings:
                             ;* AY-3-8910 definitions
                             ;* The sound chip is accessed through VIA 2
0480 =                       IO_1		= 0x0480
0000 =                       PRB		= 0x00
0001 =                       PRA		= 0x01
0002 =                       DDRB		= 0x02
0003 =                       DDRA		= 0x03
0481 =                       SND_ADBUS	= IO_1+PRA
0480 =                       SND_MODE	= IO_1+PRB
                             
0040 =                       SND_SELREAD		= 0x40
0002 =                       SND_SELWRITE		= 0x02
0042 =                       SND_SELSETADDR		= (SND_SELREAD|SND_SELWRITE)
00bd =                       SND_DESELECT_MASK	= (0xff-SND_SELREAD-SND_SELWRIT
                             
                             
                             ;****************************************
                             ;* snd_set
                             ;* Set AY register A to value X
AS65 Assembler for R6502 [1.42].                                     Page   40
----------------------------------- ppt3.s -----------------------------------

                             ;* Input : A = Reg no, X = Value
                             ;* Output : None
                             ;* Regs affected : None
                             ;****************************************
8cc9 :                       snd_set
8cc9 : 48               [ 3]         pha
                             
8cca : a9ff             [ 2] 	lda #0xff			; Set Port A to output
8ccc : 8d8304           [ 4] 	sta IO_1 + DDRA
                             
8ccf : 68               [ 4]         pla
8cd0 : 8d8104           [ 4] 	sta SND_ADBUS			; Put A on the sound bus (A = re
                             
8cd3 : ad8004           [ 4] 	lda SND_MODE			; Need to preserve contents of ot
8cd6 : 29bd             [ 2] 	and #SND_DESELECT_MASK	        ; Mask off mode b
8cd8 : 0942             [ 2] 	ora #SND_SELSETADDR		; Select AY mode to latch a
8cda : 8d8004           [ 4] 	sta SND_MODE			; This write will process the dat
                             
8cdd : 29bd             [ 2] 	and #SND_DESELECT_MASK	        ; Mask off mode b
8cdf : 8d8004           [ 4] 	sta SND_MODE			; This write will deselect the AY
                             	
8ce2 : 8e8104           [ 4] 	stx SND_ADBUS			; Put X on the sound bus (X = va
8ce5 : 0902             [ 2] 	ora #SND_SELWRITE		; Select mode for writing dat
8ce7 : 8d8004           [ 4] 	sta SND_MODE			; This write will process the dat
                             	
8cea : 29bd             [ 2] 	and #SND_DESELECT_MASK	        ; Mask off mode b
8cec : 8d8004           [ 4] 	sta SND_MODE			; This write will deselect the AY
                             
8cef : 60               [ 6] 	rts
                             
                             ; ===============================================
8cf0 :                       NT_DATA	
8cf0 : 64                            fcb (T_NEW_0-T1_)*2
8cf1 : 2a                    	    fcb TCNEW_0-T_
8cf2 : 65                    	    fcb (T_OLD_0-T1_)*2+1
8cf3 : 00                    	    fcb TCOLD_0-T_
8cf4 : 01                    	    fcb (T_NEW_1-T1_)*2+1
8cf5 : 0c                    	    fcb TCNEW_1-T_
8cf6 : 01                    	    fcb (T_OLD_1-T1_)*2+1
8cf7 : 0c                    	    fcb TCOLD_1-T_
8cf8 : 94                    	    fcb (T_NEW_2-T1_)*2
8cf9 : 35                    	    fcb TCNEW_2-T_
8cfa : 30                    	    fcb (T_OLD_2-T1_)*2
8cfb : 0e                    	    fcb TCOLD_2-T_
8cfc : 60                    	    fcb (T_NEW_3-T1_)*2
8cfd : 20                    	    fcb TCNEW_3-T_
8cfe : 60                    	    fcb (T_OLD_3-T1_)*2
8cff : 21                    	    fcb TCOLD_3-T_
                             
8d00 :                       T_
                             
8d00 : 0105090b0d0f1315      TCOLD_0	fcb $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$
8d08 : 19253d00              	    fcb $18+1,$24+1,$3C+1,0
8d0c : 5d00                  TCOLD_1	fcb $5C+1,0
8d0e : 31374d535f7182..      TCOLD_2	fcb $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$
8d17 : 9ea0a6a8aaacae..      	    fcb $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
8d20 : 57                    TCNEW_3	fcb $56+1
8d21 : 1f2325292d2f33..      TCOLD_3	fcb $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$
8d2a : 1d2123272b2d3155      TCNEW_0	fcb $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$
8d32 : bdbf00                	    fcb $BC+1,$BE+1,0
8d0c =                       TCNEW_1 = TCOLD_1
8d35 : 1b2125292b3b4d5f      TCNEW_2	fcb $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$
AS65 Assembler for R6502 [1.42].                                     Page   41
----------------------------------- ppt3.s -----------------------------------

8d3d : bbbdbf00              	    fcb $BA+1,$BC+1,$BE+1,0
                             
8d40 =                       EMPTYSAMORN = *-1
8d41 : 010090                	    fcb 1,0,$90 ;delete #90 if you don't need de
                             
                             ;first 12 values of tone tables
                             
8d44 :                       T1_ 	
8d44 : f01d                          fcw $1DF0
8d46 : 201c                          fcw $1C20
8d48 : c01a                          fcw $1AC0
8d4a : 0019                          fcw $1900
8d4c : b017                          fcw $17B0
8d4e : 5016                          fcw $1650
8d50 : 1015                          fcw $1510
8d52 : e013                          fcw $13E0
                             
8d54 : c012                          fcw $12C0
8d56 : c011                          fcw $11C0
8d58 : b010                          fcw $10B0
8d5a : c00f                          fcw $0FC0
8d5c : 7c1a                          fcw $1A7C
8d5e : 0019                          fcw $1900
8d60 : 9817                          fcw $1798
8d62 : 4416                          fcw $1644
                             
8d64 : 0415                          fcw $1504
8d66 : d813                          fcw $13D8
8d68 : b812                          fcw $12B8
8d6a : ac11                          fcw $11AC
8d6c : b010                          fcw $10B0
8d6e : c00f                          fcw $0FC0
8d70 : dc0e                          fcw $0EDC
8d72 : 080e                          fcw $0E08
                             
8d74 : b419                          fcw $19B4
8d76 : 4418                          fcw $1844
8d78 : e616                          fcw $16E6
8d7a : 9e15                          fcw $159E
8d7c : 6614                          fcw $1466
8d7e : 4213                          fcw $1342
8d80 : 2e12                          fcw $122E
8d82 : 2811                          fcw $1128
                             
8d84 : 3210                          fcw $1032
8d86 : 480f                          fcw $0F48
8d88 : 6e0e                          fcw $0E6E
8d8a : 9e0d                          fcw $0D9E
8d8c : da0c                          fcw $0CDA
8d8e : 201a                          fcw $1A20
8d90 : aa18                          fcw $18AA
8d92 : 4817                          fcw $1748
                             
8d94 : f815                          fcw $15F8
8d96 : be14                          fcw $14BE
8d98 : 9413                          fcw $1394
8d9a : 7a12                          fcw $127A
8d9c : 7011                          fcw $1170
8d9e : 7610                          fcw $1076
8da0 : 8a0f                          fcw $0F8A
8da2 : aa0e                          fcw $0EAA
                             
AS65 Assembler for R6502 [1.42].                                     Page   42
----------------------------------- ppt3.s -----------------------------------

8da4 : d80d                          fcw $0DD8
                             
8d44 =                       T_OLD_1	= T1_
8d5c =                       T_OLD_2	= T_OLD_1+24
8d74 =                       T_OLD_3	= T_OLD_2+24
8d76 =                       T_OLD_0	= T_OLD_3+2
8d76 =                       T_NEW_0	= T_OLD_0
8d44 =                       T_NEW_1	= T_OLD_1
8d8e =                       T_NEW_2	= T_NEW_0+24
8d74 =                       T_NEW_3	= T_OLD_3
                             
8da6 =                       FILE_END =*
                             ; ===========================
                             
8da6 :                       .bss        ; uninitialized data stuff
                             
                             ;vars from here can be stripped
                             ;you can move VARS to any other address
                             
8da6 :                       VARS
                             ;ChannelsVars
                             
                             ; STRUCT "CHP"
0000 =                       PsInOr	= 0
0001 =                       PsInSm	= 1
0002 =                       CrAmSl  = 2
0003 =                       CrNsSl	= 3
0004 =                       CrEnSl	= 4
0005 =                       TSlCnt	= 5
0006 =                       CrTnSl	= 6
0008 =                       TnAcc	= 8
000a =                       COnOff	= 10
000b =                       OnOffD	= 11
000c =                       OffOnD	= 12
000d =                       OrnPtr	= 13
000f =                       SamPtr	= 15
0011 =                       NNtSkp	= 17
0012 =                       Note	= 18
0013 =                       SlToNt	= 19
0014 =                       Env_En	= 20
0015 =                       Flags	= 21
0016 =                       TnSlDl	= 22
0017 =                       TSlStp	= 23
0019 =                       TnDelt	= 25
001b =                       NtSkCn	= 27
001c =                       Volume	= 28
                             ; end STRUCT
                             
                             ; CHANNEL A
8da6 :                       ChanA	
                             ;reset group
8da6 : 00                    APsInOr	fcb 0
8da7 : 00                    APsInSm	fcb 0
8da8 : 00                    ACrAmSl	fcb 0
8da9 : 00                    ACrNsSl	fcb 0
8daa : 00                    ACrEnSl	fcb 0
8dab : 00                    ATSlCnt	fcb 0
8dac : 0000                  ACrTnSl	fcw 0
8dae : 0000                  ATnAcc	fcw 0
8db0 : 00                    ACOnOff	fcb 0
                             ;reset group
                             
AS65 Assembler for R6502 [1.42].                                     Page   43
----------------------------------- ppt3.s -----------------------------------

8db1 : 00                    AOnOffD	fcb 0
                             
8db2 : 00                    AOffOnD	fcb 0
8db3 : 0000                  AOrnPtr	fcw 0
8db5 : 0000                  ASamPtr	fcw 0
8db7 : 00                    ANNtSkp	fcb 0
8db8 : 00                    ANote	fcb 0
8db9 : 00                    ASlToNt	fcb 0
8dba : 00                    AEnv_En	fcb 0
8dbb : 00                    AFlags	fcb 0
                              ;Enabled - 0,SimpleGliss - 2
8dbc : 00                    ATnSlDl	fcb 0
8dbd : 0000                  ATSlStp	fcw 0
8dbf : 0000                  ATnDelt	fcw 0
8dc1 : 00                    ANtSkCn	fcb 0
8dc2 : 00                    AVolume	fcb 0
                             	
                             ; CHANNEL B
8dc3 :                       ChanB
                             ;reset group
8dc3 : 00                    BPsInOr	fcb 0
8dc4 : 00                    BPsInSm	fcb 0
8dc5 : 00                    BCrAmSl	fcb 0
8dc6 : 00                    BCrNsSl	fcb 0
8dc7 : 00                    BCrEnSl	fcb 0
8dc8 : 00                    BTSlCnt	fcb 0
8dc9 : 0000                  BCrTnSl	fcw 0
8dcb : 0000                  BTnAcc	fcw 0
8dcd : 00                    BCOnOff	fcb 0
                             ;reset group
                             
8dce : 00                    BOnOffD	fcb 0
                             
8dcf : 00                    BOffOnD	fcb 0
8dd0 : 0000                  BOrnPtr	fcw 0
8dd2 : 0000                  BSamPtr	fcw 0
8dd4 : 00                    BNNtSkp	fcb 0
8dd5 : 00                    BNote	fcb 0
8dd6 : 00                    BSlToNt	fcb 0
8dd7 : 00                    BEnv_En	fcb 0
8dd8 : 00                    BFlags	fcb 0
                              ;Enabled - 0,SimpleGliss - 2
8dd9 : 00                    BTnSlDl	fcb 0
8dda : 0000                  BTSlStp	fcw 0
8ddc : 0000                  BTnDelt	fcw 0
8dde : 00                    BNtSkCn	fcb 0
8ddf : 00                    BVolume	fcb 0
                             
                             ; CHANNEL C
8de0 :                       ChanC
                             ;reset group
8de0 : 00                    CPsInOr	fcb 0
8de1 : 00                    CPsInSm	fcb 0
8de2 : 00                    CCrAmSl	fcb 0
8de3 : 00                    CCrNsSl	fcb 0
8de4 : 00                    CCrEnSl	fcb 0
8de5 : 00                    CTSlCnt	fcb 0
8de6 : 0000                  CCrTnSl	fcw 0
8de8 : 0000                  CTnAcc	fcw 0
8dea : 00                    CCOnOff	fcb 0
                             ;reset group
                             
AS65 Assembler for R6502 [1.42].                                     Page   44
----------------------------------- ppt3.s -----------------------------------

8deb : 00                    COnOffD	fcb 0
                             
8dec : 00                    COffOnD	fcb 0
8ded : 0000                  COrnPtr	fcw 0
8def : 0000                  CSamPtr	fcw 0
8df1 : 00                    CNNtSkp	fcb 0
8df2 : 00                    CNote	fcb 0
8df3 : 00                    CSlToNt	fcb 0
8df4 : 00                    CEnv_En	fcb 0
8df5 : 00                    CFlags	fcb 0
                              ;Enabled - 0,SimpleGliss - 2
8df6 : 00                    CTnSlDl	fcb 0
8df7 : 0000                  CTSlStp	fcw 0
8df9 : 0000                  CTnDelt	fcw 0
8dfb : 00                    CNtSkCn	fcb 0
8dfc : 00                    CVolume	fcb 0
                             
                             ; ------------
                             
                             ;GlobalVars
8dfd : 00                    DelyCnt	fcb 0
8dfe : 0000                  CurESld	fcw 0
8e00 : 00                    CurEDel	fcb 0
8e01 :                       Ns_Base_AddToNs
8e01 : 00                    Ns_Base	fcb 0
8e02 : 00                    AddToNs	fcb 0
                             
                             ; ===========================
8e03 :                       AYREGS ; AY registers
                             
0000 =                       TonA	= 0
0002 =                       TonB	= 2
0004 =                       TonC	= 4
0006 =                       Noise	= 6
0007 =                       Mixer	= 7
0008 =                       AmplA	= 8
0009 =                       AmplB	= 9
000a =                       AmplC	= 10
000b =                       Env	    = 11
000d =                       EnvTp	= 13
                             ; ---
                             
8e0d =                       Ampl	= AYREGS+AmplC
                             ; ===========================
8e03 : 00000000000000..      VT_	ds 256 ;CreatedVolumeTableAddress
                             
8e11 =                       EnvBase	= VT_+14
8e13 =                       VAR0END	= VT_+16 ;INIT zeroes from VARS to VAR0EN
                             
                             ; ===========================
8f03 : 00000000000000..      NT_	ds 192 ;CreatedNoteTableAddress
                             
8fc3 =                       VARS_END = *
                             
No errors in pass 2.
Wrote binary from address $8000 through $8fc2.
Total size 4035 bytes.
