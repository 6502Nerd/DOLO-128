AS65 Assembler for R6502 [1.42].                                     Page    1
---------------------------------- bank2.s -----------------------------------

-------------------------------- Symbol Table --------------------------------

              Symbol   Value        Decimal

                 ACR : $000b             11   *
               BANK2 : $0001              1
    bankjsr_nul_addr : $c000          49152   *
    bankjsr_nul_bank : $0000              0   *
            bank_num : $c000          49152
             buf_adr : $0047             71
              buf_ef : $004a             74
              buf_sz : $0049             73
     CMD_ERR_NOERROR : $0000              0   *
    CMD_ERR_NOTFOUND : $0001              1   *
        CMD_ERR_PARM : $0002              2   *
         CMD_ERR_VAL : $0003              3   *
           CRSR_DOWN : $000a             10   *
           CRSR_LEFT : $0008              8   *
          CRSR_RIGHT : $0009              9   *
             CRSR_UP : $000b             11   *
        call_irq_brk : $c73b          51003
     call_irq_master : $c738          51000
   call_irq_usercia0 : $c741          51009
   call_irq_usercia1 : $c744          51012
    call_irq_uservdp : $c73e          51006
     call_nmi_master : $c6fb          50939
       con_bin_digit : $c915          51477
        con_bin_done : $c92b          51499
         con_bin_err : $c935          51509
         con_bin_jmp : $c8b3          51379
        con_bin_to_a : $c90d          51469
    con_bin_to_a_int : $c911          51473
         con_dec_jmp : $c8a7          51367
        con_dec_to_a : $c937          51511
    con_dec_to_a_int : $c93b          51515
       con_hex_digit : $c8d6          51414
        con_hex_done : $c903          51459
         con_hex_err : $c901          51457
         con_hex_jmp : $c8ad          51373
  con_hex_skip_x_f_1 : $c8e3          51427
        con_hex_to_a : $c8ce          51406
    con_hex_to_a_int : $c8d2          51410
           con_n_err : $c8b6          51382
       con_n_not_dec : $c8aa          51370
       con_n_not_hex : $c8b0          51376
          con_n_to_a : $c898          51352
   con_n_to_a_detect : $c8b8          51384
                DDRA : $0003              3   *
                DDRB : $0002              2   *
         DFERR_ABORT : $0012             18   *
         DFERR_BREAK : $000d             13   *
           DFERR_DIM : $0003              3   *
         DFERR_FNAME : $000b             11   *
     DFERR_IMMEDIATE : $0007              7   *
       DFERR_NEXTFOR : $000a             10   *
        DFERR_NODATA : $000e             14   *
          DFERR_NOIF : $0009              9   *
        DFERR_NOLINE : $0010             16   *
         DFERR_NOORG : $0014             20   *
        DFERR_NOPROC : $0005              5   *
            DFERR_OK : $0000              0   *
      DFERR_PROCPARM : $0006              6   *
AS65 Assembler for R6502 [1.42].                                     Page    2
---------------------------------- bank2.s -----------------------------------

      DFERR_QUANTITY : $0013             19   *
        DFERR_RETURN : $0011             17   *
       DFERR_STRLONG : $000c             12   *
        DFERR_SYNTAX : $0001              1   *
      DFERR_TYPEMISM : $0002              2   *
    DFERR_UNCLOSEDIF : $0008              8   *
         DFERR_UNTIL : $0004              4   *
          DFERR_WEND : $000f             15   *
          DFRT_ABORT : $0089            137   *
            DFRT_ASM : $0097            151   *
           DFRT_DATA : $0096            150   *
            DFRT_DEF : $0086            134   *
           DFRT_ELSE : $0093            147   *
         DFRT_ELSEIF : $0095            149   *
         DFRT_ENDDEF : $0087            135   *
          DFRT_ENDIF : $0094            148   *
            DFRT_FOR : $008e            142   *
             DFRT_IF : $0092            146   *
           DFRT_NEXT : $008f            143   *
         DFRT_REPEAT : $008c            140   *
         DFRT_RETURN : $0088            136   *
           DFRT_WEND : $0091            145   *
          DFRT_WHILE : $0090            144   *
            DFST_INT : $0003              3   *
            DFST_PTR : $00ff            255   *
            DFST_STR : $0004              4   *
            DFTK_BYT : $0020             32   *
         DFTK_BYTBIN : $0007              7   *
         DFTK_BYTDEC : $0005              5   *
         DFTK_BYTHEX : $0006              6   *
            DFTK_CHR : $0000              0   *
            DFTK_EOL : $0000              0   *
         DFTK_ESCVAL : $0020             32   *
            DFTK_FLT : $0080            128   *
             DFTK_FN : $0002              2   *
            DFTK_INT : $0010             16   *
         DFTK_INTBIN : $000b             11   *
         DFTK_INTDEC : $0009              9   *
         DFTK_INTHEX : $000a             10   *
             DFTK_KW : $0001              1   *
         DFTK_LINLEN : $0000              0   *
         DFTK_LINNUM : $0001              1   *
             DFTK_OP : $0008              8   *
          DFTK_OPMSK : $0007              7   *
           DFTK_PROC : $0012             18   *
          DFTK_RESVC : $000c             12   *
          DFTK_RESVD : $000d             13   *
          DFTK_RESVE : $000e             14   *
          DFTK_RESVF : $000f             15   *
          DFTK_RESV1 : $0001              1   *
          DFTK_RESV2 : $0002              2   *
          DFTK_RESV3 : $0003              3   *
          DFTK_RESV4 : $0004              4   *
          DFTK_RESV8 : $0008              8   *
          DFTK_RTMSK : $00f8            248   *
          DFTK_STEND : $001f             31   *
            DFTK_STR : $0040             64   *
         DFTK_STRLIT : $0010             16   *
          DFTK_STROP : $0004              4   *
          DFTK_TOKEN : $0080            128   *
            DFTK_VAR : $0011             17   *
        DFTK_VARPARM : $0026             38   *
AS65 Assembler for R6502 [1.42].                                     Page    3
---------------------------------- bank2.s -----------------------------------

           DFVVT_BYT : $0002              2   *
          DFVVT_DIM1 : $0003              3   *
          DFVVT_DIM2 : $0004              4   *
           DFVVT_FLT : $0008              8   *
            DFVVT_HI : $0002              2   *
           DFVVT_INT : $0001              1   *
            DFVVT_LO : $0001              1   *
          DFVVT_PROC : $0040             64   *
           DFVVT_PTR : $0080            128   *
           DFVVT_STR : $0004              4   *
            DFVVT_SZ : $0008              8   *
          DFVVT_TYPE : $0000              0   *
           DF_MEMTOP : $c000          49152   *
        DF_PROGSTART : $0000              0   *
          dflat_zp_s : $009d            157
     dflat_zp_save_e : $00e3            227
     dflat_zp_save_s : $009d            157
          df_asmadmd : $00de            222
           df_asmlen : $00e2            226
         df_asmopcde : $00df            223
         df_asmoprnd : $00e0            224
           df_asmopt : $00dd            221
            df_asmpc : $00db            219
            df_brkpc : $00a4            164
           df_brkval : $00a6            166
         df_checkkey : $009d            157
         df_checkmsk : $009e            158
          df_currdat : $00d6            214
          df_currlin : $00c8            200
         df_curstidx : $00c2            194
           df_datoff : $00d8            216
           df_eolidx : $00c0            192
           df_exeoff : $00ca            202
           df_ifnest : $00d5            213
            df_immed : $00a0            160
          df_linbuff : $0a00           2560
          df_lineidx : $00d4            212
          df_lineptr : $00d2            210
           df_linoff : $00be            190
           df_memtop : $0c67           3175
          df_nextlin : $00cb            203
         df_nxtstidx : $00c1            193
          df_parmtop : $00b9            185
               df_pc : $00a2            162
           df_prgend : $00a9            169
          df_prgstrt : $00a7            167
         df_procargs : $00ce            206
          df_procloc : $00cf            207
         df_procmode : $00cd            205
          df_procptr : $00d0            208
              df_raw : $0a00           2560
              df_rnd : $00d9            217
          df_rtspace : $0b00           2816
           df_rtstck : $0b00           2816
           df_rtstop : $00b8            184
         df_sevalptr : $00bc            188
               df_sp : $00a1            161
          df_starend : $00b6            182
         df_starstrt : $00b4            180
          df_strbuff : $00ba            186
           df_stridx : $00bb            187
           df_symini : $00c6            198
AS65 Assembler for R6502 [1.42].                                     Page    4
---------------------------------- bank2.s -----------------------------------

           df_symoff : $00c5            197
           df_symtab : $00c3            195
          df_tmpptra : $00e3            227
          df_tmpptrb : $00e5            229
          df_tmpptrc : $00e7            231
          df_tmpptrd : $00e9            233
          df_tmpptre : $00eb            235
              df_tok : $0a80           2688
          df_tokbuff : $0a80           2688
           df_tokoff : $00bf            191
           df_varcnt : $00b3            179
           df_vntend : $00ad            173
          df_vntstrt : $00ab            171
           df_vvtend : $00b1            177
          df_vvtstrt : $00af            175
               errno : $009f            159
         FATFileDesc : $0020             32
      FAT_AccessDate : $0012             18
            FAT_Attr : $000b             11
        FAT_Attr_Dir : $0010             16   *
      FAT_CreateDate : $0010             16
        FAT_Createms : $000d             13
      FAT_CreateTime : $000e             14
         FAT_EAIndex : $0014             20
             FAT_Ext : $0008              8
        FAT_FileSize : $001c             28
      FAT_FirstClust : $001a             26
         FAT_ModDate : $0018             24
         FAT_ModTime : $0016             22
            FAT_Name : $0000              0
            FAT_Resv : $000c             12
             FH_Attr : $000d             13
        FH_CurrClust : $0012             18
          FH_CurrSec : $0015             21
        FH_DirOffset : $0021             33
          FH_DirSect : $001d             29
         FH_FileMode : $002c             44
       FH_FirstClust : $0023             35
         FH_FSpecPtr : $002d             45
        FH_LastClust : $0025             37
             FH_Name : $0000              0
          FH_Pointer : $0019             25
      FH_SectCounter : $0014             20
             FH_Size : $000e             14
         FH_TimeDate : $0027             39
          FileHandle : $002f             47
    FS_BLK_FLG_FLUSH : $0002              2   *
     FS_BLK_FLG_LOAD : $0001              1   *
          FS_ERR_EOF : $0001              1   *
        FS_FILEMODER : $0001              1   *
        FS_FILEMODEW : $0080            128   *
         FS_FOLDERCH : $002f             47   *
  fh_create_skip_dir : $d3d7          54231
           fh_handle : $0056             86
         fs_bootsect : $0c31           3121
            fs_chdir : $d4d7          54487
     fs_chdir_direct : $d4bf          54463
fs_chdir_direct_sect : $d4ce          54478
        fs_chdir_fin : $d513          54547
       fs_chdir_find : $d4f5          54517
  fs_chdir_not_found : $d514          54548
       fs_chdir_root : $d4df          54495
AS65 Assembler for R6502 [1.42].                                     Page    5
---------------------------------- bank2.s -----------------------------------

          fs_chdir_w : $d515          54549
 fs_check_curr_clust : $d21a          53786
fs_check_empty_sector : $d217          53783
       fs_close_done : $d46f          54383
    fs_close_filedir : $d42e          54318
          fs_close_w : $d470          54384
fs_create_copy_fspec : $d3dd          54237
fs_create_copy_fspec_done : $d3e7          54247
    fs_create_dirptr : $d40a          54282
    fs_create_fd_err : $d406          54278
   fs_create_filedir : $d3c3          54211
         fs_datasect : $0c3d           3133
           fs_delete : $d47a          54394
     fs_delete_clust : $d491          54417
       fs_delete_fin : $d4b0          54448
         fs_delete_w : $d4b1          54449
         fs_dirclust : $0c45           3141
         fs_direntry : $0c11           3089
          fs_dirsect : $0c41           3137
  fs_dir_check_entry : $cf96          53142
  fs_dir_clear_entry : $d08d          53389
fs_dir_copy_entry_sd_byte : $d309          54025
fs_dir_copy_sd_entry_byte : $cfc2          53186
    fs_dir_curr_sect : $d2f5          54005
fs_dir_dirsect_fh_byte : $d066          53350
      fs_dir_do_attr : $d0bc          53436
  fs_dir_entry_clust : $d0d3          53459
 fs_dir_entry_next_w : $d006          53254
fs_dir_entry_to_fhandle : $d010          53264
fs_dir_entry_to_fh_byte : $d077          53367
  fs_dir_entry_to_sd : $d07f          53375
fs_dir_entry_to_sd_byte : $d081          53377
 fs_dir_fhandle_done : $d685          54917
fs_dir_fhandle_dotype : $d5f5          54773
 fs_dir_fhandle_name : $d5e6          54758
fs_dir_fhandle_pad_spc : $d5c9          54729
  fs_dir_fhandle_str : $d5bc          54716
fs_dir_fhandle_to_entry : $d089          53385
 fs_dir_fhandle_type : $d601          54785
fs_dir_fhandle_zeros : $d676          54902
fs_dir_fhandle_zskip : $d680          54912
fs_dir_fh_dirsect_byte : $d0f2          53490
      fs_dir_fh_size : $d0c3          53443
fs_dir_fh_to_entry_byte : $d102          53506
          fs_dir_fil : $d5b9          54713
          fs_dir_fin : $cfcf          53199
 fs_dir_find_another : $cfb8          53176
   fs_dir_find_entry : $cf95          53141
 fs_dir_find_entry_w : $cfd0          53200
 fs_dir_found_active : $cfc0          53184
  fs_dir_found_empty : $cfca          53194
   fs_dir_get_fh_dot : $d0ae          53422
fs_dir_get_fh_name_ch : $d097          53399
fs_dir_get_fs_name_ch : $d014          53268
     fs_dir_inc_sect : $cff0          53232
    fs_dir_next_done : $d005          53253
   fs_dir_next_entry : $cfda          53210
     fs_dir_notfound : $cfbd          53181
   fs_dir_root_start : $cf75          53109
 fs_dir_root_start_w : $cf8b          53131
   fs_dir_save_entry : $d2f3          54003
       fs_dir_set_sd : $cf77          53111
AS65 Assembler for R6502 [1.42].                                     Page    6
---------------------------------- bank2.s -----------------------------------

     fs_dir_skip_ext : $d0b3          53427
fs_dir_skip_fs_dot_ch : $d026          53286
fs_dir_skip_fs_name_ch : $d029          53289
          fs_dir_str : $d5b6          54710
          fs_fatsect : $0c35           3125
 fs_find_active_slot : $cfb0          53168
  fs_find_check_name : $d31f          54047
 fs_find_empty_clust : $d207          53767
    fs_find_init_fat : $d20f          53775
       fs_find_named : $d315          54037
        fs_find_next : $d330          54064
   fs_flush_cpy_sect : $d1f8          53752
  fs_flush_curr_sect : $d1f4          53748
   fs_getbyte_sd_buf : $cf2d          53037
fs_getbyte_sd_buf_hi : $cf36          53046
   fs_getword_sd_buf : $cf4a          53066
fs_getword_sd_buf_hi : $cf56          53078
      fs_get_add_fat : $d269          53865
         fs_get_byte : $d16c          53612
       fs_get_byte_w : $d18d          53645
 fs_get_data_sect_m5 : $d1b9          53689
fs_get_FAT_clust_sect : $d25a          53850
 fs_get_next_cluster : $d10a          53514
    fs_get_root_sect : $d1d8          53720
      fs_get_set_EOF : $d177          53623
     fs_get_skip_EOF : $d17d          53629
   fs_get_start_data : $d1ca          53706
fs_get_start_sect_data : $d1a7          53671
fs_get_start_sect_root : $d1d6          53718
     fs_inc_curr_sec : $d24a          53834
      fs_inc_fh_sect : $d152          53586
          fs_inc_fin : $d146          53574
  fs_inc_load_sector : $d163          53603
      fs_inc_pointer : $d133          53555
 fs_inc_pointer_byte : $d138          53560
    fs_inc_sector_ov : $d147          53575
     fs_inc_sec_byte : $d24f          53839
fs_inc_skip_sec_wrap : $d15c          53596
     fs_init_add_fat : $ced7          52951
        fs_init_data : $cef7          52983
            fs_isEOF : $d11a          53530
          fs_isEOF_w : $d129          53545
       fs_is_eof_cmp : $d11c          53532
    fs_load_cpy_sect : $d1e5          53733
   fs_load_curr_sect : $d1e1          53729
            fs_mkdir : $d523          54563
        fs_mkdir_fin : $d5a7          54695
         fs_mkdir_ok : $d52d          54573
          fs_mkdir_w : $d5a8          54696
fs_mkdir_zero_cluster : $d55b          54619
fs_mkdir_zero_sector : $d547          54599
       fs_name_found : $d335          54069
   fs_name_not_found : $d337          54071
   fs_next_fat_entry : $d23b          53819
    fs_next_fat_sect : $d245          53829
           fs_notEOF : $d127          53543
       fs_open_found : $d341          54081
fs_open_init_pointer : $d351          54097
   fs_open_not_found : $d35b          54107
        fs_open_read : $d339          54073
      fs_open_read_w : $d35c          54108
       fs_open_write : $d418          54296
AS65 Assembler for R6502 [1.42].                                     Page    7
---------------------------------- bank2.s -----------------------------------

     fs_open_write_w : $d420          54304
   fs_putbyte_sd_buf : $cf3a          53050
fs_putbyte_sd_buf_hi : $cf45          53061
   fs_putword_sd_buf : $cf5d          53085
fs_putword_sd_buf_hi : $cf6c          53100
         fs_put_byte : $d29e          53918
       fs_put_byte_w : $d2e9          53993
       fs_put_do_put : $d2d0          53968
          fs_put_fin : $d2e7          53991
     fs_put_inc_size : $d2d8          53976
fs_put_inc_size_byte : $d2dd          53981
     fs_put_skip_err : $d2a8          53928
         fs_rootsect : $0c39           3129
          fs_scratch : $0c47           3143
           fs_setEOF : $d125          53541
   fs_skip_load_sect : $d16b          53611
    fs_stamptimedate : $d36a          54122
 fs_stamptimedate_ms : $d37c          54140
         fs_to_upper : $d195          53653
    fs_to_upper_done : $d1a6          53670
      fs_to_upper_nz : $d19c          53660
 fs_update_FAT_entry : $d278          53880
     fs_util_num_bcd : $d686          54918
   fs_util_num_bcd_a : $d69c          54940
  fs_util_num_bcd_xa : $d68e          54926
          gr_cur_off : $0006              6
          gr_cur_ptr : $0009              9
            gr_cur_x : $0007              7
            gr_cur_y : $0008              8
         gr_geom_tmp : $000e             14
           gr_pixcol : $000d             13
          gr_pixmask : $000c             12
          gr_pixmode : $000b             11
           gr_screen : $0010             16
         gr_screen_h : $0005              5
      gr_screen_size : $0002              2
     gr_screen_start : $0000              0
         gr_screen_w : $0004              4
         gr_scrngeom : $0023             35
                 IER : $000e             14   *
                 IFR : $000d             13   *
             IFR_CA1 : $0002              2   *
             IFR_CA2 : $0001              1   *
                IO_0 : $0400           1024   *
                IO_1 : $0480           1152   *
                IO_2 : $0500           1280   *
                IO_3 : $0580           1408   *
                IO_4 : $0600           1536   *
                IO_5 : $0680           1664   *
                IO_6 : $0700           1792   *
                IO_7 : $0780           1920   *
       inc_kb_timers : $c7f6          51190
            infinity : $c69f          50847
                init : $cae8          51944
         init_acmd41 : $cba4          52132
           init_cmd0 : $cb9b          52123
          init_cmd16 : $cbae          52142
             init_fs : $ce68          52840
    init_fs_clr_sect : $ce89          52873
          init_fs_do : $ce7a          52858
   init_fs_get_part1 : $ce95          52885
            init_irq : $c70f          50959
AS65 Assembler for R6502 [1.42].                                     Page    8
---------------------------------- bank2.s -----------------------------------

            init_nmi : $c6f2          50930
            init_ram : $cb43          52035
       init_ram_fill : $cb55          52053
       init_ram_skip : $cb5a          52058
          init_ram_1 : $cb4d          52045
         init_sdcard : $cb62          52066
     init_sdcard_try : $cb78          52088
      init_sd_failed : $cbb1          52145
        init_sd_next : $cba4          52132
       init_sd_pulse : $cb90          52112
              init_2 : $caee          51950
             int_brk : $0006              6
         int_do_read : $c7ad          51117
             int_irq : $0004              4
      int_kb_handler : $c7a2          51106
         int_keys_up : $c7b9          51129
             int_nmi : $0002              2
       int_skip_scan : $c7b3          51123
             int_str : $caad          51885
          int_to_bcd : $ca1a          51738
      int_to_bcd_bit : $ca33          51763
 int_to_bcd_skip_neg : $ca28          51752
          int_to_str : $ca94          51860
       int_to_str_ch : $ca7f          51839
   int_to_str_ch_fin : $ca93          51859
      int_to_str_fin : $cacc          51916
       int_to_str_nz : $ca8c          51852
 int_to_str_skip_neg : $caa8          51880
        int_usercia0 : $000a             10
        int_usercia1 : $000c             12
         int_uservdp : $0008              8
         int_vdp_fin : $c7ef          51183
     int_vdp_handler : $c7c4          51140
    io_active_device : $c545          50501
            io_block : $0c01           3073
            io_close : $c569          50537
          io_close_f : $0008              8
        io_copy_data : $c54c          50508
          io_default : $0c00           3072
           io_delete : $c56c          50540
            io_del_f : $000a             10
          io_devices : $c5c0          50624
          io_device0 : $c5c0          50624
          io_device1 : $c5d0          50640
          io_device2 : $c5e0          50656
          io_do_echo : $c58b          50571
             io_ext1 : $000c             12
             io_ext2 : $000e             14
         io_get_byte : $0000              0
           io_get_ch : $c55d          50525
    io_get_line_byte : $c578          50552
    io_get_line_done : $c5a4          50596
             io_init : $c526          50470
 io_init_set_default : $c53b          50491
          io_null_op : $c5be          50622
           io_open_r : $0004              4
        io_open_read : $c563          50531
           io_open_w : $0006              6
       io_open_write : $c566          50534
       io_print_done : $c5bc          50620
       io_print_line : $c5ab          50603
  io_print_line_byte : $c5b2          50610
AS65 Assembler for R6502 [1.42].                                     Page    9
---------------------------------- bank2.s -----------------------------------

         io_put_byte : $0002              2
           io_put_ch : $c560          50528
        io_read_line : $c56f          50543
      io_set_default : $c542          50498
        io_skip_echo : $c58e          50574
     io_skip_special : $c599          50585
           io_struct : $0010             16
                 irq : $c749          51017
             irq_brk : $c777          51063
      irq_check_cia0 : $c76b          51051
       irq_check_vdp : $c75d          51037
             irq_fin : $c773          51059
           KB_CAPSLK : $0001              1   *
             KB_COLA : $0008              8   *
             KB_COLB : $0010             16   *
             KB_COLC : $0020             32   *
             KB_COLD : $0040             64   *
         KB_DEBOUNCE : $0002              2   *
               KB_EN : $0080            128   *
             KB_LED0 : $0002              2   *
             KB_LED1 : $0004              4   *
             KB_LED2 : $0008              8   *
          KB_REP_DEL : $0014             20   *
          KB_REP_TIM : $0003              3   *
             KB_ROWA : $0001              1   *
             KB_ROWB : $0002              2   *
             KB_ROWC : $0004              4   *
          KB_SHIFTLK : $0002              2   *
                KB_W : $0001              1   *
             kb_code : $0035             53
              kb_deb : $0037             55
         kb_debounce : $003b             59
             kb_last : $0034             52
          kb_pressed : $003c             60
              kb_raw : $0033             51
              kb_rep : $0038             56
          kb_rep_del : $003a             58
          kb_rep_tim : $0039             57
             kb_stat : $0036             54
         kernel_init : $caf4          51956
      kernel_skip_nv : $cb21          52001
         kernel_test : $cb03          51971
          long_delay : $c803          51203
        long_delay_1 : $c809          51209
       MBR_BootPart1 : $01c6            454   *
    MBR_BytesPerSect : $000b             11   *
            MBR_Code : $0000              0   *
          MBR_DrvNum : $0024             36   *
         MBR_ExeCode : $003e             62   *
         MBR_ExeMark : $01fe            510   *
          MBR_ExtSig : $0026             38   *
       MBR_FATCopies : $0010             16   *
         MBR_FATName : $0036             54   *
       MBR_MediaDesc : $0015             21   *
        MBR_NumHeads : $001a             26   *
      MBR_NumHidSect : $001c             28   *
         MBR_NumSect : $0020             32   *
         MBR_OEMName : $0003              3   *
        MBR_ResvSect : $000e             14   *
     MBR_RootEntries : $0011             17   *
    MBR_SectPerClust : $000d             13   *
      MBR_SectPerFAT : $0016             22   *
AS65 Assembler for R6502 [1.42].                                     Page   10
---------------------------------- bank2.s -----------------------------------

      MBR_SectPerTrk : $0018             24   *
           MBR_SerNo : $0027             39   *
         MBR_SmlSect : $0013             19   *
         MBR_VolName : $002b             43   *
              MM_DIS : $0020             32   *
               MM_X0 : $0010             16   *
               MM_X1 : $0020             32   *
               MM_Y0 : $0040             64   *
               MM_Y1 : $0080            128   *
                main : $c69f          50847
        mem_clr_byte : $c845          51269
           mem_start : $0c69           3177
         mod_sz_io_e : $c5f0          50672
         mod_sz_io_s : $c526          50470
     mod_sz_kernel_e : $cb62          52066
     mod_sz_kernel_s : $c526          50470
     mod_sz_sdcard_e : $ce68          52840
     mod_sz_sdcard_s : $cb62          52066
      mod_sz_sd_fs_e : $d6d5          54997
      mod_sz_sd_fs_s : $ce68          52840
     msg_hello_world : $c6a5          50853
 msg_initialising_fs : $d6a5          54949
       msg_noinit_fs : $d6bb          54971
             NUM_ANY : $0000              0   *
             NUM_BIN : $0003              3   *
             NUM_DEC : $0001              1   *
             NUM_HEX : $0002              2   *
           NV_COLOUR : $000f             15   *
             NV_MODE : $000e             14   *
            NV_RAMSZ : $003f             63   *
                 nmi : $c6fb          50939
             nmi_fin : $c70d          50957
        null_handler : $c748          51016
            null_irq : $c747          51015
               num_a : $0085            133
               num_b : $0089            137
             num_buf : $0095            149
             num_tmp : $0091            145
               num_x : $008d            141
                 PCR : $000c             12   *
                 PRA : $0001              1   *
                PRAH : $000f             15   *
                 PRB : $0000              0   *
        print_a_to_d : $cad7          51927
     print_a_to_d_ch : $cadc          51932
    print_a_to_d_fin : $cae7          51943
           RAM_ZMASK : $00cf            207   *
           ROM_ZMASK : $003f             63   *
            RTC_ADDR : $0600           1536   *
              RTC_AF : $0020             32   *
             RTC_AIE : $0020             32   *
            RTC_DATA : $0601           1537   *
             RTC_DAY : $0007              7   *
              RTC_DM : $0004              4   *
             RTC_DOW : $0006              6   *
             RTC_DSE : $0001              1   *
             RTC_DV0 : $0010             16   *
             RTC_DV1 : $0020             32   *
             RTC_DV2 : $0040             64   *
              RTC_HR : $0004              4   *
             RTC_HRA : $0005              5   *
            RTC_IRQF : $0080            128   *
AS65 Assembler for R6502 [1.42].                                     Page   11
---------------------------------- bank2.s -----------------------------------

             RTC_MIN : $0002              2   *
            RTC_MINA : $0003              3   *
             RTC_MTH : $0008              8   *
              RTC_PF : $0040             64   *
             RTC_PIE : $0040             64   *
            RTC_REGA : $000a             10   *
            RTC_REGB : $000b             11   *
            RTC_REGC : $000c             12   *
            RTC_REGD : $000d             13   *
             RTC_RS0 : $0010             16   *
             RTC_RS1 : $0020             32   *
             RTC_RS2 : $0040             64   *
             RTC_RS3 : $0080            128   *
             RTC_SEC : $0000              0   *
            RTC_SECA : $0001              1   *
             RTC_SET : $0080            128   *
            RTC_SQWE : $0080            128   *
              RTC_UF : $0010             16   *
             RTC_UIE : $0010             16   *
             RTC_UIP : $0080            128   *
             RTC_VRT : $0080            128   *
              RTC_YR : $0009              9   *
            RTC_2412 : $0002              2   *
               SD_CD : $0004              4   *
              SD_CLK : $0001              1   *
               SD_CS : $0008              8   *
               SD_DI : $0010             16   *
               SD_DO : $0080            128   *
             SD_MISO : $0080            128   *
             SD_MOSI : $0010             16   *
              SD_REG : $0480           1152   *
             SER_CMD : $0582           1410   *
             SER_CTL : $0583           1411   *
            SER_DATA : $0580           1408   *
            SER_DCDB : $0020             32   *
            SER_DSRB : $0040             64   *
             SER_DTR : $0001              1   *
              SER_FE : $0002              2   *
             SER_IRD : $0002              2   *
             SER_IRQ : $0080            128   *
            SER_OVRN : $0004              4   *
              SER_PE : $0001              1   *
             SER_PMC : $00c0            192   *
            SER_PMC0 : $0040             64   *
            SER_PMC1 : $0080            128   *
             SER_PME : $0020             32   *
             SER_RCS : $0010             16   *
            SER_RDRF : $0008              8   *
             SER_REM : $0010             16   *
           SER_RESET : $0581           1409   *
             SER_SBN : $0080            128   *
             SER_SBR : $000f             15   *
            SER_SBR0 : $0001              1   *
            SER_SBR1 : $0002              2   *
            SER_SBR2 : $0004              4   *
            SER_SBR3 : $0008              8   *
          SER_STATUS : $0581           1409   *
            SER_TDRE : $0010             16   *
             SER_TIC : $000c             12   *
            SER_TIC0 : $0004              4   *
            SER_TIC1 : $0008              8   *
              SER_WL : $0060             96   *
AS65 Assembler for R6502 [1.42].                                     Page   12
---------------------------------- bank2.s -----------------------------------

             SER_WL0 : $0020             32   *
             SER_WL1 : $0040             64   *
          SER_19200B : $000f             15   *
           SER_9600B : $000e             14   *
           SND_ADBUS : $0481           1153   *
   SND_DESELECT_MASK : $00bd            189   *
            SND_MODE : $0480           1152   *
       SND_REG_CHAPH : $0001              1   *
       SND_REG_CHAPL : $0000              0   *
      SND_REG_CHAVOL : $0008              8   *
       SND_REG_CHBPH : $0003              3   *
       SND_REG_CHBPL : $0002              2   *
      SND_REG_CHBVOL : $000a             10   *
       SND_REG_CHCPH : $0005              5   *
       SND_REG_CHCPL : $0004              4   *
        SND_REG_CHNP : $0006              6   *
         SND_REG_CTL : $0007              7   *
      SND_REG_ENVCYC : $000d             13   *
       SND_REG_ENVPH : $000c             12   *
       SND_REG_ENVPL : $000b             11   *
         SND_REG_IOA : $000e             14   *
         SND_REG_IOB : $000f             15   *
         SND_SELREAD : $0040             64   *
      SND_SELSETADDR : $0042             66   *
        SND_SELWRITE : $0002              2   *
                  SR : $000a             10   *
               SWBRK : <macro>
             scratch : $0900           2304
           sd_acmd41 : $ce62          52834
             sd_addr : $0052             82
              sd_buf : $0200            512
             sd_busy : $cc92          52370
        sd_cmd17addr : $cd56          52566
            sd_cmd55 : $ce56          52822
            sd_cmd58 : $ce5c          52828
           sd_endcmd : $cbd9          52185
          sd_getbyte : $cc09          52233
      sd_getrespbyte : $cc83          52355
        sd_getrespR1 : $cd36          52534
       sd_getrespR17 : $cd85          52613
 sd_getrespR17block1 : $cd98          52632
 sd_getrespR17block2 : $cda2          52642
  sd_getrespR17token : $cd8f          52623
   sd_getrespR17_fin : $cdb0          52656
           sd_isbusy : $cc97          52375
       sd_isbusy_fin : $cc9e          52382
       sd_msg_failed : $ce3d          52797
 sd_msg_initialising : $ce26          52774
           sd_respff : $cc86          52358
      sd_resptimeout : $cc90          52368
             sd_sect : $004e             78
         sd_sendbyte : $cbe9          52201
         sd_sendcmd0 : $ccaa          52394
        sd_sendcmd16 : $cd10          52496
        sd_sendcmd17 : $cd3a          52538
        sd_sendcmd24 : $cdb3          52659
        sd_sendcmd41 : $ccee          52462
        sd_sendcmd55 : $cccc          52428
              sd_shi : $004d             77
      sd_shiftoutbit : $cbf2          52210
      sd_shiftskiplo : $cbfa          52218
              sd_slo : $004c             76
AS65 Assembler for R6502 [1.42].                                     Page   13
---------------------------------- bank2.s -----------------------------------

         sd_startcmd : $cbbf          52159
           sd_status : $004b             75
    sd_waitforn0byte : $cca0          52384
sd_waitforn0byte_fin : $cca9          52393
sd_waitforwritecomplete : $ce1d          52765
     sd_writeblock_1 : $cdff          52735
     sd_writeblock_2 : $ce09          52745
             ser_buf : $0800           2048
           ser_first : $000e             14
            ser_last : $000f             15
          skip_a_f_1 : $c859          51289
          skip_a_f_2 : $c868          51304
         skip_kb_deb : $c7fc          51196
         skip_kb_rep : $c802          51202
          skip_x_f_1 : $c875          51317
          skip_x_f_2 : $c88a          51338
             snd_get : $c668          50792
        snd_get_joy0 : $c699          50841
             snd_set : $c641          50753
          str_a_to_d : $cad6          51926
          str_a_to_x : $c84d          51277
   str_d_digits_done : $c986          51590
         str_d_error : $c9a7          51623
      str_d_find_end : $c944          51524
     str_d_found_end : $c951          51537
        str_d_powers : $c9a9          51625
 str_d_process_digit : $c95d          51549
      str_d_skip_neg : $c99d          51613
          str_x_to_a : $c86a          51306
      str_x_to_a_err : $c896          51350
     str_x_to_a_errl : $c895          51349
                T1CH : $0005              5   *
                T1CL : $0004              4   *
                T1LH : $0007              7   *
                T1LL : $0006              6   *
                T2CH : $0009              9   *
                T2CL : $0008              8   *
               tmp_a : $0041             65
               tmp_b : $0043             67
           tmp_bank1 : $0000              0
           tmp_bank2 : $0001              1
               tmp_c : $003d             61
               tmp_d : $0045             69
              tmp_v1 : $003f             63
     twos_complement : $ca0d          51725
twos_complement_skip_X : $ca19          51737
             UTF_ACK : $0006              6   *
             UTF_BEL : $0007              7   *
             UTF_BRK : $001a             26   *
              UTF_CR : $000d             13   *
             UTF_DEL : $007f            127   *
             UTF_ETB : $0017             23   *
             UTF_ETX : $0003              3   *
              UTF_FF : $000c             12   *
            UTF_NACK : $0015             21   *
             UTF_SOH : $0001              1   *
         UTF_SPECIAL : $0020             32   *
       update_timers : $c7f0          51184
          utilPrintA : $c828          51240
       utilPrintCRLF : $c820          51232
        utilPrintSPC : $c818          51224
        util_clr_mem : $c83d          51261
AS65 Assembler for R6502 [1.42].                                     Page   14
---------------------------------- bank2.s -----------------------------------

            VDP_ADDR : $0501           1281   *
           VDP_FLASH : $0010             16   *
       VDP_LONGDELAY : $0003              3   *
           VDP_MODE0 : $0500           1280   *
           VDP_MODE1 : $0501           1281   *
      VDP_SHORTDELAY : $0001              1   *
          VDP_STATUS : $0501           1281   *
            VDP_VRAM : $0500           1280   *
        vdp_addr_col : $0002              2
        vdp_addr_nme : $0000              0
        vdp_addr_pat : $0004              4
        vdp_addr_spa : $0006              6
        vdp_addr_spp : $0008              8
     vdp_addr_struct : $000c             12
            vdp_base : $0017             23
           vdp_blank : $0015             21
        vdp_bord_col : $000a             10
          vdp_curoff : $0012             18
         vdp_curstat : $0013             19
          vdp_curval : $0014             20
           vdp_delay : $0016             22
           vdp_gmode : $000b             11
         vdp_int_cnt : $0010             16
        vdp_mem_wait : $c60b          50699
    vdp_mem_wait_end : $c613          50707
   vdp_mem_wait_loop : $c610          50704
            vdp_peek : $c637          50743
            vdp_poke : $c62a          50730
         vdp_rd_addr : $c615          50709
         vdp_rd_vram : $c620          50720
         vdp_wr_addr : $c5fd          50685
          vdp_wr_reg : $c5f0          50672
         vdp_wr_vram : $c625          50725
         word_to_bcd : $ca50          51792
     word_to_bcd_bit : $ca62          51810
             ztmp_16 : $0085            133
          _adcZPByte : <macro>
          _adcZPWord : <macro>
          _addZPWord : <macro>
            _bankjsr : <macro>
            _bankram : <macro>
       _bankram_fast : <macro>
          _bank2_end : $d6d5          54997
        _bank2_start : $c000          49152   *
                _bcc : <macro>
                _bcs : <macro>
      _cmd_immediate : $c50e          50446
           _code_end : $d6d5          54997
         _code_start : $c001          49153
       _command_line : $c2b6          49846
          _cpu_stack : $0100            256
          _cpyZPWord : <macro>
          _decZPWord : <macro>
         _decZPWordA : <macro>
            _df_init : $c02e          49198
    _df_ost_peekType : <macro>
        _df_pg_dflat : $c046          49222
      _end_zero_page : $00ed            237
         _fs_chdir_w : $c05e          49246
         _fs_close_w : $c0a6          49318
        _fs_delete_w : $c08e          49294
_fs_dir_entry_next_w : $c136          49462
AS65 Assembler for R6502 [1.42].                                     Page   15
---------------------------------- bank2.s -----------------------------------

 _fs_dir_fhandle_str : $c4c6          50374
_fs_dir_find_entry_w : $c11e          49438
_fs_dir_root_start_w : $c14e          49486
      _fs_get_byte_w : $c0be          49342
         _fs_mkdir_w : $c076          49270
     _fs_open_read_w : $c0d6          49366
    _fs_open_write_w : $c0ee          49390
      _fs_put_byte_w : $c106          49414
           _get_byte : $c166          49510
             _gr_box : $c316          49942
          _gr_circle : $c32e          49966
             _gr_cls : $c2ce          49870
             _gr_get : $c38e          50062
         _gr_get_key : $c196          49558
           _gr_hchar : $c35e          50014
      _gr_init_hires : $c2e6          49894
     _gr_init_screen : $c1c6          49606
            _gr_line : $c2fe          49918
            _gr_plot : $c346          49990
           _gr_point : $c376          50038
        _gr_put_byte : $c1ae          49582
         _gr_set_cur : $c3a6          50086
          _incZPWord : <macro>
          _init_acia : $c1de          49630
          _init_cia0 : $c1f6          49654
          _init_cia1 : $c20e          49678
            _init_fs : $c226          49702
      _init_keyboard : $c26e          49774
        _init_sdcard : $c23e          49726
           _init_snd : $c256          49750
        _kb_read_dip : $c29e          49822
        _kb_read_raw : $c286          49798
          _OSVectors : $c001          49153
       _PushFalseJmp : <macro>
        _PushTrueJmp : <macro>
             _printA : <macro>
             _printC : <macro>
            _printCA : <macro>
          _printCRLF : <macro>
            _println : <macro>
        _println_low : <macro>
          _printmsgA : <macro>
            _pullAXY : <macro>
            _pushAXY : <macro>
           _put_byte : $c17e          49534
       _restore_bank : $c01c          49180
    _rtc_gettimedate : $c466          50278
           _rtc_init : $c44e          50254
         _rtc_nvread : $c496          50326
        _rtc_nvwrite : $c4ae          50350
    _rtc_setdatetime : $c47e          50302
          _sbcZPByte : <macro>
       _sd_sendcmd17 : $c4de          50398
       _sd_sendcmd24 : $c4f6          50422
            _sendcmd : <macro>
       _snd_get_joy0 : $c3d6          50134
       _snd_get_note : $c3be          50110
            _snd_set : $c3ee          50158
          _subZPWord : <macro>
           _vdp_init : $c436          50230
           _vdp_peek : $c406          50182
           _vdp_poke : $c41e          50206
AS65 Assembler for R6502 [1.42].                                     Page   16
---------------------------------- bank2.s -----------------------------------

          __65SC02__ : $0001              1

899 labels used

5745 lines read, no errors in pass 1.
No errors in pass 2.
Wrote binary from address $c000 through $ffff.
Total size 16384 bytes.
