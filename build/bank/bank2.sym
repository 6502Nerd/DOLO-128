AS65 Assembler for R6502 [1.42].                                     Page    1
---------------------------------- bank2.s -----------------------------------

-------------------------------- Symbol Table --------------------------------

              Symbol   Value        Decimal

                 ACR : $000b             11   *
               BANK2 : $0001              1
    bankjsr_nul_addr : $c000          49152   *
    bankjsr_nul_bank : $0000              0   *
            bank_num : $c000          49152
             buf_adr : $003b             59
              buf_ef : $003e             62
              buf_sz : $003d             61
     CMD_ERR_NOERROR : $0000              0   *
    CMD_ERR_NOTFOUND : $0001              1   *
        CMD_ERR_PARM : $0002              2   *
         CMD_ERR_VAL : $0003              3   *
           CRSR_DOWN : $000a             10   *
           CRSR_LEFT : $0008              8   *
          CRSR_RIGHT : $0009              9   *
             CRSR_UP : $000b             11   *
        call_irq_brk : $c7e8          51176
     call_irq_master : $c7e5          51173
   call_irq_usercia0 : $c7ee          51182
   call_irq_usercia1 : $c7f1          51185
    call_irq_uservdp : $c7eb          51179
     call_nmi_master : $c777          51063
       con_bin_digit : $c9ba          51642
        con_bin_done : $c9d0          51664
         con_bin_err : $c9da          51674
         con_bin_jmp : $c958          51544
        con_bin_to_a : $c9b2          51634
    con_bin_to_a_int : $c9b6          51638
         con_dec_jmp : $c94c          51532
        con_dec_to_a : $c9dc          51676
    con_dec_to_a_int : $c9e0          51680
       con_hex_digit : $c97b          51579
        con_hex_done : $c9a8          51624
         con_hex_err : $c9a6          51622
         con_hex_jmp : $c952          51538
  con_hex_skip_x_f_1 : $c988          51592
        con_hex_to_a : $c973          51571
    con_hex_to_a_int : $c977          51575
           con_n_err : $c95b          51547
       con_n_not_dec : $c94f          51535
       con_n_not_hex : $c955          51541
          con_n_to_a : $c93d          51517
   con_n_to_a_detect : $c95d          51549
                DDRA : $0003              3   *
                DDRB : $0002              2   *
         DFERR_ABORT : $0012             18   *
         DFERR_BREAK : $000d             13   *
           DFERR_DIM : $0003              3   *
         DFERR_FNAME : $000b             11   *
     DFERR_IMMEDIATE : $0007              7   *
       DFERR_NEXTFOR : $000a             10   *
        DFERR_NODATA : $000e             14   *
          DFERR_NOIF : $0009              9   *
        DFERR_NOLINE : $0010             16   *
         DFERR_NOORG : $0014             20   *
        DFERR_NOPROC : $0005              5   *
            DFERR_OK : $0000              0   *
      DFERR_PROCPARM : $0006              6   *
AS65 Assembler for R6502 [1.42].                                     Page    2
---------------------------------- bank2.s -----------------------------------

      DFERR_QUANTITY : $0013             19   *
        DFERR_RETURN : $0011             17   *
       DFERR_STRLONG : $000c             12   *
        DFERR_SYNTAX : $0001              1   *
      DFERR_TYPEMISM : $0002              2   *
    DFERR_UNCLOSEDIF : $0008              8   *
         DFERR_UNTIL : $0004              4   *
          DFERR_WEND : $000f             15   *
          DFRT_ABORT : $0089            137   *
            DFRT_ASM : $0097            151   *
           DFRT_DATA : $0096            150   *
            DFRT_DEF : $0086            134   *
           DFRT_ELSE : $0093            147   *
         DFRT_ELSEIF : $0095            149   *
         DFRT_ENDDEF : $0087            135   *
          DFRT_ENDIF : $0094            148   *
            DFRT_FOR : $008e            142   *
             DFRT_IF : $0092            146   *
           DFRT_NEXT : $008f            143   *
         DFRT_REPEAT : $008c            140   *
         DFRT_RETURN : $0088            136   *
           DFRT_WEND : $0091            145   *
          DFRT_WHILE : $0090            144   *
            DFST_INT : $0003              3   *
            DFST_PTR : $00ff            255   *
            DFST_STR : $0004              4   *
            DFTK_BYT : $0020             32   *
         DFTK_BYTBIN : $0007              7   *
         DFTK_BYTDEC : $0005              5   *
         DFTK_BYTHEX : $0006              6   *
            DFTK_CHR : $0000              0   *
            DFTK_EOL : $0000              0   *
         DFTK_ESCVAL : $0020             32   *
            DFTK_FLT : $0080            128   *
             DFTK_FN : $0002              2   *
            DFTK_INT : $0010             16   *
         DFTK_INTBIN : $000b             11   *
         DFTK_INTDEC : $0009              9   *
         DFTK_INTHEX : $000a             10   *
             DFTK_KW : $0001              1   *
         DFTK_LINLEN : $0000              0   *
         DFTK_LINNUM : $0001              1   *
             DFTK_OP : $0008              8   *
          DFTK_OPMSK : $0007              7   *
           DFTK_PROC : $0012             18   *
          DFTK_RESVC : $000c             12   *
          DFTK_RESVD : $000d             13   *
          DFTK_RESVE : $000e             14   *
          DFTK_RESVF : $000f             15   *
          DFTK_RESV1 : $0001              1   *
          DFTK_RESV2 : $0002              2   *
          DFTK_RESV3 : $0003              3   *
          DFTK_RESV4 : $0004              4   *
          DFTK_RESV8 : $0008              8   *
          DFTK_RTMSK : $00f8            248   *
          DFTK_STEND : $001f             31   *
            DFTK_STR : $0040             64   *
         DFTK_STRLIT : $0010             16   *
          DFTK_STROP : $0004              4   *
          DFTK_TOKEN : $0080            128   *
            DFTK_VAR : $0011             17   *
        DFTK_VARPARM : $0026             38   *
AS65 Assembler for R6502 [1.42].                                     Page    3
---------------------------------- bank2.s -----------------------------------

           DFVVT_BYT : $0002              2   *
          DFVVT_DIM1 : $0003              3   *
          DFVVT_DIM2 : $0004              4   *
           DFVVT_FLT : $0008              8   *
            DFVVT_HI : $0002              2   *
           DFVVT_INT : $0001              1   *
            DFVVT_LO : $0001              1   *
          DFVVT_PROC : $0040             64   *
           DFVVT_PTR : $0080            128   *
           DFVVT_STR : $0004              4   *
            DFVVT_SZ : $0008              8   *
          DFVVT_TYPE : $0000              0   *
           DF_MEMTOP : $c000          49152   *
        DF_PROGSTART : $0000              0   *
          dflat_zp_s : $0091            145
     dflat_zp_save_e : $00d7            215
     dflat_zp_save_s : $0091            145
          df_asmadmd : $00d2            210
           df_asmlen : $00d6            214
         df_asmopcde : $00d3            211
         df_asmoprnd : $00d4            212
           df_asmopt : $00d1            209
            df_asmpc : $00cf            207
            df_brkpc : $0098            152
           df_brkval : $009a            154
         df_checkkey : $0091            145
         df_checkmsk : $0092            146
          df_currdat : $00ca            202
          df_currlin : $00bc            188
         df_curstidx : $00b6            182
           df_datoff : $00cc            204
           df_eolidx : $00b4            180
           df_exeoff : $00be            190
           df_ifnest : $00c9            201
            df_immed : $0094            148
          df_linbuff : $0a00           2560
          df_lineidx : $00c8            200
          df_lineptr : $00c6            198
           df_linoff : $00b2            178
           df_memtop : $0cb4           3252
          df_nextlin : $00bf            191
         df_nxtstidx : $00b5            181
          df_parmtop : $00ad            173
               df_pc : $0096            150
           df_prgend : $009d            157
          df_prgstrt : $009b            155
         df_procargs : $00c2            194
          df_procloc : $00c3            195
         df_procmode : $00c1            193
          df_procptr : $00c4            196
              df_raw : $0a00           2560
              df_rnd : $00cd            205
          df_rtspace : $0b00           2816
           df_rtstck : $0b00           2816
           df_rtstop : $00ac            172
         df_sevalptr : $00b0            176
               df_sp : $0095            149
          df_starend : $00aa            170
         df_starstrt : $00a8            168
          df_strbuff : $00ae            174
           df_stridx : $00af            175
           df_symini : $00ba            186
AS65 Assembler for R6502 [1.42].                                     Page    4
---------------------------------- bank2.s -----------------------------------

           df_symoff : $00b9            185
           df_symtab : $00b7            183
          df_tmpptra : $00d7            215
          df_tmpptrb : $00d9            217
          df_tmpptrc : $00db            219
          df_tmpptrd : $00dd            221
          df_tmpptre : $00df            223
              df_tok : $0a80           2688
          df_tokbuff : $0a80           2688
           df_tokoff : $00b3            179
           df_varcnt : $00a7            167
           df_vntend : $00a1            161
          df_vntstrt : $009f            159
           df_vvtend : $00a5            165
          df_vvtstrt : $00a3            163
               errno : $0093            147
         FATFileDesc : $0020             32
      FAT_AccessDate : $0012             18
            FAT_Attr : $000b             11
        FAT_Attr_Dir : $0010             16   *
      FAT_CreateDate : $0010             16
        FAT_Createms : $000d             13
      FAT_CreateTime : $000e             14
         FAT_EAIndex : $0014             20
             FAT_Ext : $0008              8
        FAT_FileSize : $001c             28
      FAT_FirstClust : $001a             26
         FAT_ModDate : $0018             24
         FAT_ModTime : $0016             22
            FAT_Name : $0000              0
            FAT_Resv : $000c             12
             FH_Attr : $000d             13
        FH_CurrClust : $0012             18
          FH_CurrSec : $0015             21
        FH_DirOffset : $0021             33
          FH_DirSect : $001d             29
         FH_FileMode : $002c             44
       FH_FirstClust : $0023             35
         FH_FSpecPtr : $002d             45
        FH_LastClust : $0025             37
             FH_Name : $0000              0
          FH_Pointer : $0019             25
      FH_SectCounter : $0014             20
             FH_Size : $000e             14
         FH_TimeDate : $0027             39
          FileHandle : $002f             47
    FS_BLK_FLG_FLUSH : $0002              2   *
     FS_BLK_FLG_LOAD : $0001              1   *
          FS_ERR_EOF : $0001              1   *
        FS_FILEMODER : $0001              1   *
        FS_FILEMODEW : $0080            128   *
         FS_FOLDERCH : $002f             47   *
  fh_create_skip_dir : $d47f          54399
           fh_handle : $004a             74
         fs_bootsect : $0c7e           3198
            fs_chdir : $d57f          54655
     fs_chdir_direct : $d567          54631
fs_chdir_direct_sect : $d576          54646
        fs_chdir_fin : $d5bb          54715
       fs_chdir_find : $d59d          54685
  fs_chdir_not_found : $d5bc          54716
       fs_chdir_root : $d587          54663
AS65 Assembler for R6502 [1.42].                                     Page    5
---------------------------------- bank2.s -----------------------------------

          fs_chdir_w : $d5bd          54717
 fs_check_curr_clust : $d2c2          53954
fs_check_empty_sector : $d2bf          53951
       fs_close_done : $d517          54551
    fs_close_filedir : $d4d6          54486
          fs_close_w : $d518          54552
fs_create_copy_fspec : $d485          54405
fs_create_copy_fspec_done : $d48f          54415
    fs_create_dirptr : $d4b2          54450
    fs_create_fd_err : $d4ae          54446
   fs_create_filedir : $d46b          54379
         fs_datasect : $0c8a           3210
           fs_delete : $d522          54562
     fs_delete_clust : $d539          54585
       fs_delete_fin : $d558          54616
         fs_delete_w : $d559          54617
         fs_dirclust : $0c92           3218
         fs_direntry : $0c5e           3166
          fs_dirsect : $0c8e           3214
  fs_dir_check_entry : $d03e          53310
  fs_dir_clear_entry : $d135          53557
fs_dir_copy_entry_sd_byte : $d3b1          54193
fs_dir_copy_sd_entry_byte : $d06a          53354
    fs_dir_curr_sect : $d39d          54173
fs_dir_dirsect_fh_byte : $d10e          53518
      fs_dir_do_attr : $d164          53604
  fs_dir_entry_clust : $d17b          53627
 fs_dir_entry_next_w : $d0ae          53422
fs_dir_entry_to_fhandle : $d0b8          53432
fs_dir_entry_to_fh_byte : $d11f          53535
  fs_dir_entry_to_sd : $d127          53543
fs_dir_entry_to_sd_byte : $d129          53545
 fs_dir_fhandle_done : $d72d          55085
fs_dir_fhandle_dotype : $d69d          54941
 fs_dir_fhandle_name : $d68e          54926
fs_dir_fhandle_pad_spc : $d671          54897
  fs_dir_fhandle_str : $d664          54884
fs_dir_fhandle_to_entry : $d131          53553
 fs_dir_fhandle_type : $d6a9          54953
fs_dir_fhandle_zeros : $d71e          55070
fs_dir_fhandle_zskip : $d728          55080
fs_dir_fh_dirsect_byte : $d19a          53658
      fs_dir_fh_size : $d16b          53611
fs_dir_fh_to_entry_byte : $d1aa          53674
          fs_dir_fil : $d661          54881
          fs_dir_fin : $d077          53367
 fs_dir_find_another : $d060          53344
   fs_dir_find_entry : $d03d          53309
 fs_dir_find_entry_w : $d078          53368
 fs_dir_found_active : $d068          53352
  fs_dir_found_empty : $d072          53362
   fs_dir_get_fh_dot : $d156          53590
fs_dir_get_fh_name_ch : $d13f          53567
fs_dir_get_fs_name_ch : $d0bc          53436
     fs_dir_inc_sect : $d098          53400
    fs_dir_next_done : $d0ad          53421
   fs_dir_next_entry : $d082          53378
     fs_dir_notfound : $d065          53349
   fs_dir_root_start : $d01d          53277
 fs_dir_root_start_w : $d033          53299
   fs_dir_save_entry : $d39b          54171
       fs_dir_set_sd : $d01f          53279
AS65 Assembler for R6502 [1.42].                                     Page    6
---------------------------------- bank2.s -----------------------------------

     fs_dir_skip_ext : $d15b          53595
fs_dir_skip_fs_dot_ch : $d0ce          53454
fs_dir_skip_fs_name_ch : $d0d1          53457
          fs_dir_str : $d65e          54878
          fs_fatsect : $0c82           3202
 fs_find_active_slot : $d058          53336
  fs_find_check_name : $d3c7          54215
 fs_find_empty_clust : $d2af          53935
    fs_find_init_fat : $d2b7          53943
       fs_find_named : $d3bd          54205
        fs_find_next : $d3d8          54232
   fs_flush_cpy_sect : $d2a0          53920
  fs_flush_curr_sect : $d29c          53916
   fs_getbyte_sd_buf : $cfd5          53205
fs_getbyte_sd_buf_hi : $cfde          53214
   fs_getword_sd_buf : $cff2          53234
fs_getword_sd_buf_hi : $cffe          53246
      fs_get_add_fat : $d311          54033
         fs_get_byte : $d214          53780
       fs_get_byte_w : $d235          53813
 fs_get_data_sect_m5 : $d261          53857
fs_get_FAT_clust_sect : $d302          54018
 fs_get_next_cluster : $d1b2          53682
    fs_get_root_sect : $d280          53888
      fs_get_set_EOF : $d21f          53791
     fs_get_skip_EOF : $d225          53797
   fs_get_start_data : $d272          53874
fs_get_start_sect_data : $d24f          53839
fs_get_start_sect_root : $d27e          53886
     fs_inc_curr_sec : $d2f2          54002
      fs_inc_fh_sect : $d1fa          53754
          fs_inc_fin : $d1ee          53742
  fs_inc_load_sector : $d20b          53771
      fs_inc_pointer : $d1db          53723
 fs_inc_pointer_byte : $d1e0          53728
    fs_inc_sector_ov : $d1ef          53743
     fs_inc_sec_byte : $d2f7          54007
fs_inc_skip_sec_wrap : $d204          53764
     fs_init_add_fat : $cf7f          53119
        fs_init_data : $cf9f          53151
            fs_isEOF : $d1c2          53698
          fs_isEOF_w : $d1d1          53713
       fs_is_eof_cmp : $d1c4          53700
    fs_load_cpy_sect : $d28d          53901
   fs_load_curr_sect : $d289          53897
            fs_mkdir : $d5cb          54731
        fs_mkdir_fin : $d64f          54863
         fs_mkdir_ok : $d5d5          54741
          fs_mkdir_w : $d650          54864
fs_mkdir_zero_cluster : $d603          54787
fs_mkdir_zero_sector : $d5ef          54767
       fs_name_found : $d3dd          54237
   fs_name_not_found : $d3df          54239
   fs_next_fat_entry : $d2e3          53987
    fs_next_fat_sect : $d2ed          53997
           fs_notEOF : $d1cf          53711
       fs_open_found : $d3e9          54249
fs_open_init_pointer : $d3f9          54265
   fs_open_not_found : $d403          54275
        fs_open_read : $d3e1          54241
      fs_open_read_w : $d404          54276
       fs_open_write : $d4c0          54464
AS65 Assembler for R6502 [1.42].                                     Page    7
---------------------------------- bank2.s -----------------------------------

     fs_open_write_w : $d4c8          54472
   fs_putbyte_sd_buf : $cfe2          53218
fs_putbyte_sd_buf_hi : $cfed          53229
   fs_putword_sd_buf : $d005          53253
fs_putword_sd_buf_hi : $d014          53268
         fs_put_byte : $d346          54086
       fs_put_byte_w : $d391          54161
       fs_put_do_put : $d378          54136
          fs_put_fin : $d38f          54159
     fs_put_inc_size : $d380          54144
fs_put_inc_size_byte : $d385          54149
     fs_put_skip_err : $d350          54096
         fs_rootsect : $0c86           3206
          fs_scratch : $0c94           3220
           fs_setEOF : $d1cd          53709
   fs_skip_load_sect : $d213          53779
    fs_stamptimedate : $d412          54290
 fs_stamptimedate_ms : $d424          54308
         fs_to_upper : $d23d          53821
    fs_to_upper_done : $d24e          53838
      fs_to_upper_nz : $d244          53828
 fs_update_FAT_entry : $d320          54048
     fs_util_num_bcd : $d72e          55086
   fs_util_num_bcd_a : $d744          55108
  fs_util_num_bcd_xa : $d736          55094
          gr_cur_off : $0006              6
          gr_cur_ptr : $0009              9
            gr_cur_x : $0007              7
            gr_cur_y : $0008              8
         gr_geom_tmp : $000e             14
           gr_pixcol : $000d             13
          gr_pixmask : $000c             12
          gr_pixmode : $000b             11
           gr_screen : $0010             16
         gr_screen_h : $0005              5
      gr_screen_size : $0002              2
     gr_screen_start : $0000              0
         gr_screen_w : $0004              4
         gr_scrngeom : $0017             23
                 IER : $000e             14   *
                 IFR : $000d             13   *
             IFR_CA1 : $0002              2   *
             IFR_CA2 : $0001              1   *
                IO_0 : $0400           1024   *
                IO_1 : $0480           1152   *
                IO_2 : $0500           1280   *
                IO_3 : $0580           1408   *
                IO_4 : $0600           1536   *
                IO_5 : $0680           1664   *
                IO_6 : $0700           1792   *
                IO_7 : $0780           1920   *
       inc_kb_timers : $c89b          51355
            infinity : $c70f          50959
                init : $cb8d          52109
         init_acmd41 : $cc4c          52300
           init_cmd0 : $cc43          52291
          init_cmd16 : $cc56          52310
             init_fs : $cf10          53008
    init_fs_clr_sect : $cf31          53041
          init_fs_do : $cf22          53026
   init_fs_get_part1 : $cf3d          53053
            init_irq : $c7bc          51132
AS65 Assembler for R6502 [1.42].                                     Page    8
---------------------------------- bank2.s -----------------------------------

            init_nmi : $c762          51042
            init_ram : $cbeb          52203
       init_ram_fill : $cbfd          52221
       init_ram_skip : $cc02          52226
          init_ram_1 : $cbf5          52213
         init_sdcard : $cc0a          52234
     init_sdcard_try : $cc20          52256
      init_sd_failed : $cc59          52313
        init_sd_next : $cc4c          52300
       init_sd_pulse : $cc38          52280
              init_2 : $cb93          52115
             int_brk : $0c04           3076
         int_do_read : $c852          51282
             int_irq : $0c02           3074
      int_kb_handler : $c847          51271
         int_keys_up : $c85e          51294
             int_nmi : $0c00           3072
       int_skip_scan : $c858          51288
             int_str : $cb52          52050
          int_to_bcd : $cabf          51903
      int_to_bcd_bit : $cad8          51928
 int_to_bcd_skip_neg : $cacd          51917
          int_to_str : $cb39          52025
       int_to_str_ch : $cb24          52004
   int_to_str_ch_fin : $cb38          52024
      int_to_str_fin : $cb71          52081
       int_to_str_nz : $cb31          52017
 int_to_str_skip_neg : $cb4d          52045
        int_usercia0 : $0c08           3080
        int_usercia1 : $0c0a           3082
         int_uservdp : $0c06           3078
         int_vdp_fin : $c894          51348
     int_vdp_handler : $c869          51305
    io_active_device : $c5a5          50597
            io_block : $0c4e           3150
            io_close : $c5c9          50633
          io_close_f : $0008              8
        io_copy_data : $c5ac          50604
          io_default : $0c4d           3149
           io_delete : $c5cc          50636
            io_del_f : $000a             10
          io_devices : $c620          50720
          io_device0 : $c620          50720
          io_device1 : $c630          50736
          io_device2 : $c640          50752
          io_do_echo : $c5eb          50667
             io_ext1 : $000c             12
             io_ext2 : $000e             14
         io_get_byte : $0000              0
           io_get_ch : $c5bd          50621
    io_get_line_byte : $c5d8          50648
    io_get_line_done : $c604          50692
             io_init : $c586          50566
 io_init_set_default : $c59b          50587
          io_null_op : $c61e          50718
           io_open_r : $0004              4
        io_open_read : $c5c3          50627
           io_open_w : $0006              6
       io_open_write : $c5c6          50630
       io_print_done : $c61c          50716
       io_print_line : $c60b          50699
  io_print_line_byte : $c612          50706
AS65 Assembler for R6502 [1.42].                                     Page    9
---------------------------------- bank2.s -----------------------------------

         io_put_byte : $0002              2
           io_put_ch : $c5c0          50624
        io_read_line : $c5cf          50639
      io_set_default : $c5a2          50594
        io_skip_echo : $c5ee          50670
     io_skip_special : $c5f9          50681
           io_struct : $0010             16
                 irq : $c7f6          51190
             irq_brk : $c81c          51228
      irq_check_cia0 : $c810          51216
       irq_check_vdp : $c802          51202
             irq_fin : $c818          51224
           KB_CAPSLK : $0001              1   *
             KB_COLA : $0008              8   *
             KB_COLB : $0010             16   *
             KB_COLC : $0020             32   *
             KB_COLD : $0040             64   *
         KB_DEBOUNCE : $0002              2   *
               KB_EN : $0080            128   *
             KB_LED0 : $0002              2   *
             KB_LED1 : $0004              4   *
             KB_LED2 : $0008              8   *
          KB_REP_DEL : $0014             20   *
          KB_REP_TIM : $0003              3   *
             KB_ROWA : $0001              1   *
             KB_ROWB : $0002              2   *
             KB_ROWC : $0004              4   *
          KB_SHIFTLK : $0002              2   *
                KB_W : $0001              1   *
             kb_code : $0029             41
              kb_deb : $002b             43
         kb_debounce : $002f             47
             kb_last : $0028             40
          kb_pressed : $0030             48
              kb_raw : $0027             39
              kb_rep : $002c             44
          kb_rep_del : $002e             46
          kb_rep_tim : $002d             45
             kb_stat : $002a             42
         kernel_init : $cb99          52121
      kernel_skip_nv : $cbc9          52169
         kernel_test : $cbab          52139
          long_delay : $c8a8          51368
        long_delay_1 : $c8ae          51374
       MBR_BootPart1 : $01c6            454   *
    MBR_BytesPerSect : $000b             11   *
            MBR_Code : $0000              0   *
          MBR_DrvNum : $0024             36   *
         MBR_ExeCode : $003e             62   *
         MBR_ExeMark : $01fe            510   *
          MBR_ExtSig : $0026             38   *
       MBR_FATCopies : $0010             16   *
         MBR_FATName : $0036             54   *
       MBR_MediaDesc : $0015             21   *
        MBR_NumHeads : $001a             26   *
      MBR_NumHidSect : $001c             28   *
         MBR_NumSect : $0020             32   *
         MBR_OEMName : $0003              3   *
        MBR_ResvSect : $000e             14   *
     MBR_RootEntries : $0011             17   *
    MBR_SectPerClust : $000d             13   *
      MBR_SectPerFAT : $0016             22   *
AS65 Assembler for R6502 [1.42].                                     Page   10
---------------------------------- bank2.s -----------------------------------

      MBR_SectPerTrk : $0018             24   *
           MBR_SerNo : $0027             39   *
         MBR_SmlSect : $0013             19   *
         MBR_VolName : $002b             43   *
              MM_DIS : $0020             32   *
               MM_X0 : $0010             16   *
               MM_X1 : $0020             32   *
               MM_Y0 : $0040             64   *
               MM_Y1 : $0080            128   *
                main : $c70f          50959
        mem_clr_byte : $c8ea          51434
           mem_start : $0cb6           3254
         mod_sz_io_e : $c650          50768
         mod_sz_io_s : $c586          50566
     mod_sz_kernel_e : $cc0a          52234
     mod_sz_kernel_s : $c586          50566
     mod_sz_sdcard_e : $cf10          53008
     mod_sz_sdcard_s : $cc0a          52234
      mod_sz_sd_fs_e : $d77d          55165
      mod_sz_sd_fs_s : $cf10          53008
     msg_hello_world : $c715          50965
 msg_initialising_fs : $d74d          55117
       msg_noinit_fs : $d763          55139
             NUM_ANY : $0000              0   *
             NUM_BIN : $0003              3   *
             NUM_DEC : $0001              1   *
             NUM_HEX : $0002              2   *
           NV_COLOUR : $000f             15   *
             NV_MODE : $000e             14   *
            NV_RAMSZ : $003f             63   *
                 nmi : $c777          51063
             nmi_fin : $c7ba          51130
       nmi_skip_acia : $c789          51081
        null_handler : $c7f5          51189
            null_irq : $c7f4          51188
               num_a : $0079            121
               num_b : $007d            125
             num_buf : $0089            137
             num_tmp : $0085            133
               num_x : $0081            129
                 PCR : $000c             12   *
                 PRA : $0001              1   *
                PRAH : $000f             15   *
                 PRB : $0000              0   *
        print_a_to_d : $cb7c          52092
     print_a_to_d_ch : $cb81          52097
    print_a_to_d_fin : $cb8c          52108
             pt3_int : $0c4c           3148
           RAM_ZMASK : $00cf            207   *
           ROM_ZMASK : $003f             63   *
            RTC_ADDR : $0600           1536   *
              RTC_AF : $0020             32   *
             RTC_AIE : $0020             32   *
            RTC_DATA : $0601           1537   *
             RTC_DAY : $0007              7   *
              RTC_DM : $0004              4   *
             RTC_DOW : $0006              6   *
             RTC_DSE : $0001              1   *
             RTC_DV0 : $0010             16   *
             RTC_DV1 : $0020             32   *
             RTC_DV2 : $0040             64   *
              RTC_HR : $0004              4   *
AS65 Assembler for R6502 [1.42].                                     Page   11
---------------------------------- bank2.s -----------------------------------

             RTC_HRA : $0005              5   *
            RTC_IRQF : $0080            128   *
             RTC_MIN : $0002              2   *
            RTC_MINA : $0003              3   *
             RTC_MTH : $0008              8   *
              RTC_PF : $0040             64   *
             RTC_PIE : $0040             64   *
            RTC_REGA : $000a             10   *
            RTC_REGB : $000b             11   *
            RTC_REGC : $000c             12   *
            RTC_REGD : $000d             13   *
             RTC_RS0 : $0010             16   *
             RTC_RS1 : $0020             32   *
             RTC_RS2 : $0040             64   *
             RTC_RS3 : $0080            128   *
             RTC_SEC : $0000              0   *
            RTC_SECA : $0001              1   *
             RTC_SET : $0080            128   *
            RTC_SQWE : $0080            128   *
              RTC_UF : $0010             16   *
             RTC_UIE : $0010             16   *
             RTC_UIP : $0080            128   *
             RTC_VRT : $0080            128   *
              RTC_YR : $0009              9   *
            RTC_2412 : $0002              2   *
            ram_code : $0c0c           3084
               SD_CD : $0004              4   *
              SD_CLK : $0001              1   *
               SD_CS : $0008              8   *
               SD_DI : $0010             16   *
               SD_DO : $0080            128   *
             SD_MISO : $0080            128   *
             SD_MOSI : $0010             16   *
              SD_REG : $0480           1152   *
             SER_CMD : $0582           1410   *
             SER_CTL : $0583           1411   *
            SER_DATA : $0580           1408   *
            SER_DCDB : $0020             32   *
            SER_DSRB : $0040             64   *
             SER_DTR : $0001              1   *
              SER_FE : $0002              2   *
             SER_IRD : $0002              2   *
             SER_IRQ : $0080            128   *
            SER_OVRN : $0004              4   *
              SER_PE : $0001              1   *
             SER_PMC : $00c0            192   *
            SER_PMC0 : $0040             64   *
            SER_PMC1 : $0080            128   *
             SER_PME : $0020             32   *
             SER_RCS : $0010             16   *
            SER_RDRF : $0008              8   *
             SER_REM : $0010             16   *
           SER_RESET : $0581           1409   *
             SER_SBN : $0080            128   *
             SER_SBR : $000f             15   *
            SER_SBR0 : $0001              1   *
            SER_SBR1 : $0002              2   *
            SER_SBR2 : $0004              4   *
            SER_SBR3 : $0008              8   *
          SER_STATUS : $0581           1409   *
            SER_TDRE : $0010             16   *
             SER_TIC : $000c             12   *
AS65 Assembler for R6502 [1.42].                                     Page   12
---------------------------------- bank2.s -----------------------------------

            SER_TIC0 : $0004              4   *
            SER_TIC1 : $0008              8   *
              SER_WL : $0060             96   *
             SER_WL0 : $0020             32   *
             SER_WL1 : $0040             64   *
          SER_19200B : $000f             15   *
           SER_9600B : $000e             14   *
           SND_ADBUS : $0481           1153   *
   SND_DESELECT_MASK : $00bd            189   *
            SND_MODE : $0480           1152   *
       SND_REG_CHAPH : $0001              1   *
       SND_REG_CHAPL : $0000              0   *
      SND_REG_CHAVOL : $0008              8   *
       SND_REG_CHBPH : $0003              3   *
       SND_REG_CHBPL : $0002              2   *
      SND_REG_CHBVOL : $000a             10   *
       SND_REG_CHCPH : $0005              5   *
       SND_REG_CHCPL : $0004              4   *
        SND_REG_CHNP : $0006              6   *
         SND_REG_CTL : $0007              7   *
      SND_REG_ENVCYC : $000d             13   *
       SND_REG_ENVPH : $000c             12   *
       SND_REG_ENVPL : $000b             11   *
         SND_REG_IOA : $000e             14   *
         SND_REG_IOB : $000f             15   *
         SND_SELREAD : $0040             64   *
      SND_SELSETADDR : $0042             66   *
        SND_SELWRITE : $0002              2   *
                  SR : $000a             10   *
               SWBRK : <macro>
             scratch : $0900           2304
           sd_acmd41 : $cf0a          53002
             sd_addr : $0046             70
              sd_buf : $0200            512
             sd_busy : $cd3a          52538
        sd_cmd17addr : $cdfe          52734
            sd_cmd55 : $cefe          52990
            sd_cmd58 : $cf04          52996
           sd_endcmd : $cc81          52353
          sd_getbyte : $ccb1          52401
      sd_getrespbyte : $cd2b          52523
        sd_getrespR1 : $cdde          52702
       sd_getrespR17 : $ce2d          52781
 sd_getrespR17block1 : $ce40          52800
 sd_getrespR17block2 : $ce4a          52810
  sd_getrespR17token : $ce37          52791
   sd_getrespR17_fin : $ce58          52824
           sd_isbusy : $cd3f          52543
       sd_isbusy_fin : $cd46          52550
       sd_msg_failed : $cee5          52965
 sd_msg_initialising : $cece          52942
           sd_respff : $cd2e          52526
      sd_resptimeout : $cd38          52536
             sd_sect : $0042             66
         sd_sendbyte : $cc91          52369
         sd_sendcmd0 : $cd52          52562
        sd_sendcmd16 : $cdb8          52664
        sd_sendcmd17 : $cde2          52706
        sd_sendcmd24 : $ce5b          52827
        sd_sendcmd41 : $cd96          52630
        sd_sendcmd55 : $cd74          52596
              sd_shi : $0041             65
AS65 Assembler for R6502 [1.42].                                     Page   13
---------------------------------- bank2.s -----------------------------------

      sd_shiftoutbit : $cc9a          52378
      sd_shiftskiplo : $cca2          52386
              sd_slo : $0040             64
         sd_startcmd : $cc67          52327
           sd_status : $003f             63
    sd_waitforn0byte : $cd48          52552
sd_waitforn0byte_fin : $cd51          52561
sd_waitforwritecomplete : $cec5          52933
     sd_writeblock_1 : $cea7          52903
     sd_writeblock_2 : $ceb1          52913
             ser_buf : $0800           2048
           ser_first : $0002              2
            ser_last : $0003              3
          skip_a_f_1 : $c8fe          51454
          skip_a_f_2 : $c90d          51469
         skip_kb_deb : $c8a1          51361
         skip_kb_rep : $c8a7          51367
          skip_x_f_1 : $c91a          51482
          skip_x_f_2 : $c92f          51503
             snd_get : $c6c8          50888
        snd_get_joy0 : $c6f9          50937
  snd_get_joy0_retry : $c6fb          50939
             snd_set : $c6a1          50849
          str_a_to_d : $cb7b          52091
          str_a_to_x : $c8f2          51442
   str_d_digits_done : $ca2b          51755
         str_d_error : $ca4c          51788
      str_d_find_end : $c9e9          51689
     str_d_found_end : $c9f6          51702
        str_d_powers : $ca4e          51790
 str_d_process_digit : $ca02          51714
      str_d_skip_neg : $ca42          51778
          str_x_to_a : $c90f          51471
      str_x_to_a_err : $c93b          51515
     str_x_to_a_errl : $c93a          51514
                T1CH : $0005              5   *
                T1CL : $0004              4   *
                T1LH : $0007              7   *
                T1LL : $0006              6   *
                T2CH : $0009              9   *
                T2CL : $0008              8   *
               tmp_a : $0035             53
               tmp_b : $0037             55
           tmp_bank1 : $0000              0
           tmp_bank2 : $0001              1
               tmp_c : $0031             49
               tmp_d : $0039             57
              tmp_v1 : $0033             51
     twos_complement : $cab2          51890
twos_complement_skip_X : $cabe          51902
             UTF_ACK : $0006              6   *
             UTF_BEL : $0007              7   *
             UTF_BRK : $001a             26   *
              UTF_CR : $000d             13   *
             UTF_DEL : $007f            127   *
             UTF_ETB : $0017             23   *
             UTF_ETX : $0003              3   *
              UTF_FF : $000c             12   *
            UTF_NACK : $0015             21   *
             UTF_SOH : $0001              1   *
         UTF_SPECIAL : $0020             32   *
       update_timers : $c895          51349
AS65 Assembler for R6502 [1.42].                                     Page   14
---------------------------------- bank2.s -----------------------------------

          utilPrintA : $c8cd          51405
       utilPrintCRLF : $c8c5          51397
        utilPrintSPC : $c8bd          51389
        util_clr_mem : $c8e2          51426
            VDP_ADDR : $0501           1281   *
           VDP_FLASH : $0010             16   *
       VDP_LONGDELAY : $0003              3   *
           VDP_MODE0 : $0500           1280   *
           VDP_MODE1 : $0501           1281   *
      VDP_SHORTDELAY : $0001              1   *
          VDP_STATUS : $0501           1281   *
            VDP_VRAM : $0500           1280   *
        vdp_addr_col : $0002              2
        vdp_addr_nme : $0000              0
        vdp_addr_pat : $0004              4
        vdp_addr_spa : $0006              6
        vdp_addr_spp : $0008              8
     vdp_addr_struct : $000c             12
            vdp_base : $000b             11
           vdp_blank : $0009              9
        vdp_bord_col : $000a             10
          vdp_curoff : $0006              6
         vdp_curstat : $0007              7
          vdp_curval : $0008              8
           vdp_delay : $000a             10
           vdp_gmode : $000b             11
         vdp_int_cnt : $0004              4
        vdp_mem_wait : $c66b          50795
    vdp_mem_wait_end : $c673          50803
   vdp_mem_wait_loop : $c670          50800
            vdp_peek : $c697          50839
            vdp_poke : $c68a          50826
         vdp_rd_addr : $c675          50805
         vdp_rd_vram : $c680          50816
         vdp_wr_addr : $c65d          50781
          vdp_wr_reg : $c650          50768
         vdp_wr_vram : $c685          50821
         word_to_bcd : $caf5          51957
     word_to_bcd_bit : $cb07          51975
             ztmp_16 : $0079            121
          _adcZPByte : <macro>
          _adcZPWord : <macro>
          _addZPWord : <macro>
            _bankjsr : <macro>
            _bankram : <macro>
       _bankram_fast : <macro>
          _bank2_end : $d77d          55165
        _bank2_start : $c000          49152   *
                _bcc : <macro>
                _bcs : <macro>
      _cmd_immediate : $c50e          50446
           _code_end : $d77d          55165
         _code_start : $c001          49153
       _command_line : $c2b6          49846
          _cpu_stack : $0100            256
          _cpyZPWord : <macro>
          _decZPWord : <macro>
         _decZPWordA : <macro>
            _df_init : $c02e          49198
    _df_ost_peekType : <macro>
        _df_pg_dflat : $c046          49222
      _end_zero_page : $00e1            225
AS65 Assembler for R6502 [1.42].                                     Page   15
---------------------------------- bank2.s -----------------------------------

         _fs_chdir_w : $c05e          49246
         _fs_close_w : $c0a6          49318
        _fs_delete_w : $c08e          49294
_fs_dir_entry_next_w : $c136          49462
 _fs_dir_fhandle_str : $c4c6          50374
_fs_dir_find_entry_w : $c11e          49438
_fs_dir_root_start_w : $c14e          49486
      _fs_get_byte_w : $c0be          49342
         _fs_mkdir_w : $c076          49270
     _fs_open_read_w : $c0d6          49366
    _fs_open_write_w : $c0ee          49390
      _fs_put_byte_w : $c106          49414
           _get_byte : $c166          49510
             _gr_box : $c316          49942
          _gr_circle : $c32e          49966
             _gr_cls : $c2ce          49870
             _gr_get : $c38e          50062
         _gr_get_key : $c196          49558
           _gr_hchar : $c35e          50014
      _gr_init_hires : $c2e6          49894
     _gr_init_screen : $c1c6          49606
            _gr_line : $c2fe          49918
            _gr_plot : $c346          49990
           _gr_point : $c376          50038
        _gr_put_byte : $c1ae          49582
         _gr_set_cur : $c3a6          50086
          _incZPWord : <macro>
          _init_acia : $c1de          49630
          _init_cia0 : $c1f6          49654
          _init_cia1 : $c20e          49678
            _init_fs : $c226          49702
      _init_keyboard : $c26e          49774
        _init_sdcard : $c23e          49726
           _init_snd : $c256          49750
        _kb_read_dip : $c29e          49822
        _kb_read_raw : $c286          49798
          _OSVectors : $c001          49153
            _PT3INIT : $c526          50470
           _PT3PAUSE : $c556          50518
          _PT3RESUME : $c56e          50542
           _PT3START : $c53e          50494
       _PushFalseJmp : <macro>
        _PushTrueJmp : <macro>
             _printA : <macro>
             _printC : <macro>
            _printCA : <macro>
          _printCRLF : <macro>
            _println : <macro>
        _println_low : <macro>
          _printmsgA : <macro>
            _pullAXY : <macro>
            _pushAXY : <macro>
           _put_byte : $c17e          49534
       _restore_bank : $c01c          49180
    _rtc_gettimedate : $c466          50278
           _rtc_init : $c44e          50254
         _rtc_nvread : $c496          50326
        _rtc_nvwrite : $c4ae          50350
    _rtc_setdatetime : $c47e          50302
          _sbcZPByte : <macro>
       _sd_sendcmd17 : $c4de          50398
       _sd_sendcmd24 : $c4f6          50422
AS65 Assembler for R6502 [1.42].                                     Page   16
---------------------------------- bank2.s -----------------------------------

            _sendcmd : <macro>
       _snd_get_joy0 : $c3d6          50134
       _snd_get_note : $c3be          50110
            _snd_set : $c3ee          50158
          _subZPWord : <macro>
           _vdp_init : $c436          50230
           _vdp_peek : $c406          50182
           _vdp_poke : $c41e          50206
          __65SC02__ : $0001              1

907 labels used

5797 lines read, no errors in pass 1.
No errors in pass 2.
Wrote binary from address $c000 through $ffff.
Total size 16384 bytes.
